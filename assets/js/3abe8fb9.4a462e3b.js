"use strict";(self.webpackChunkbesom_website=self.webpackChunkbesom_website||[]).push([[521],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},g="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),g=p(n),m=o,d=g["".concat(s,".").concat(m)]||g[m]||u[m]||a;return n?r.createElement(d,i(i({ref:t},c),{},{components:n})):r.createElement(d,i({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[g]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3810:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={title:"Logging"},i=void 0,l={unversionedId:"logging",id:"logging",title:"Logging",description:"In every scope where Pulumi Context is available and global Besom import was included user has the capability to summon logger by writing log with a following severity level used as a logging method's name, e.g.:",source:"@site/docs/logging.md",sourceDirName:".",slug:"/logging",permalink:"/besom/docs/logging",draft:!1,tags:[],version:"current",frontMatter:{title:"Logging"},sidebar:"docsSidebar",previous:{title:"Apply methods",permalink:"/besom/docs/apply_methods"},next:{title:"Lifting",permalink:"/besom/docs/lifting"}},s={},p=[],c={toc:p},g="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(g,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In every scope where Pulumi ",(0,o.kt)("inlineCode",{parentName:"p"},"Context")," is available and global Besom import was included user has the capability to summon logger by writing ",(0,o.kt)("inlineCode",{parentName:"p"},"log")," with a following severity level used as a logging method's name, e.g.: "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'@main def run = Pulumi.run {\n  for \n    _ <- log.warning("Nothing to do.")\n  yield Pulumi.exports()\n}\n')),(0,o.kt)("p",null,"Logging is an asynchronous operation and returns an ",(0,o.kt)("inlineCode",{parentName:"p"},"Output"),". This means that all logging statements need to be composed\ninto the flow of your program. This is similar to how logging frameworks for ",(0,o.kt)("inlineCode",{parentName:"p"},"cats")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"ZIO")," behave (eg.: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/typelevel/log4cats"},"log4cats"),")."))}u.isMDXComponent=!0}}]);