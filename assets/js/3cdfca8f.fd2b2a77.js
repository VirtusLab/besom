"use strict";(self.webpackChunkbesom_website=self.webpackChunkbesom_website||[]).push([[185],{1815:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"basics","title":"Pulumi Basics","description":"Before we dive into the details of Besom, let\'s take a look at the basics of Pulumi.","source":"@site/docs/basics.md","sourceDirName":".","slug":"/basics","permalink":"/besom/docs/basics","draft":false,"unlisted":false,"editUrl":"https://github.com/VirtusLab/besom/tree/main/website/docs/basics.md","tags":[],"version":"current","frontMatter":{"title":"Pulumi Basics"},"sidebar":"docsSidebar","previous":{"title":"Tutorial","permalink":"/besom/docs/tutorial"},"next":{"title":"Overview","permalink":"/besom/docs/architecture"}}');var r=n(4848),a=n(8453);n(6543);const i={title:"Pulumi Basics"},o=void 0,c={},l=[{value:"What is Pulumi?",id:"what-is-pulumi",level:2},{value:"What is Besom?",id:"what-is-besom",level:2},{value:"Concepts",id:"concepts",level:2},{value:"Projects",id:"projects",level:3},{value:"Programs",id:"programs",level:3},{value:"Stacks",id:"stacks",level:3},{value:"Stack and project information from code",id:"stack-and-project-information-from-code",level:5},{value:"Stack Outputs",id:"stack-outputs",level:5},{value:"Stack References",id:"stack-references",level:5},{value:'Typed Stack References <span class="badge badge--success text--uppercase text--bold">Since: 0.5.0</span>',id:"typed-stack-references-since-050",level:5},{value:"Resources",id:"resources",level:3},{value:'Shared Args <span class="badge badge--success text--uppercase text--bold">Since: 0.5.0</span>',id:"shared-args-since-050",level:4},{value:'Resource Aliases <span class="badge badge--success text--uppercase text--bold">Since: 0.5.0</span>',id:"resource-aliases-since-050",level:4},{value:"Inputs and Outputs",id:"inputs-and-outputs",level:3},{value:"Configuration and Secrets",id:"configuration-and-secrets",level:3},{value:"Accessing Configuration and Secrets from Code",id:"accessing-configuration-and-secrets-from-code",level:5},{value:"Providers",id:"providers",level:3},{value:"State",id:"state",level:3}];function d(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",h5:"h5",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.p,{children:["Before we dive into the ",(0,r.jsx)(s.a,{href:"/besom/docs/architecture",children:"details of Besom"}),", let's take a look at the basics of Pulumi.\nThis page offers an executive summary of ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/",children:"Pulumi's concepts"}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"what-is-pulumi",children:"What is Pulumi?"}),"\n",(0,r.jsx)(s.p,{children:"Pulumi is a modern infrastructure as code platform. It leverages existing programming languages\nand their native ecosystem to interact with cloud resources through the Pulumi SDK."}),"\n",(0,r.jsxs)(s.p,{children:["Pulumi is a registered trademark of ",(0,r.jsx)(s.a,{href:"https://pulumi.com",children:"Pulumi Corporation"}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"what-is-besom",children:"What is Besom?"}),"\n",(0,r.jsxs)(s.p,{children:["Besom is a ",(0,r.jsx)(s.strong,{children:"Pulumi SDK for Scala 3"}),". It allows you to use Scala to define your infrastructure\nin a type-safe and functional way."]}),"\n",(0,r.jsxs)(s.p,{children:["Besom ",(0,r.jsx)(s.strong,{children:"does NOT depend on Pulumi Java SDK"}),", it is a completely separate implementation."]}),"\n",(0,r.jsx)(s.admonition,{type:"caution",children:(0,r.jsxs)(s.p,{children:["Please pay attention to your dependencies, ",(0,r.jsxs)(s.strong,{children:["only use ",(0,r.jsx)(s.code,{children:"org.virtuslab::besom-*"})]})," and not ",(0,r.jsx)(s.code,{children:"com.pulumi:*"}),".",(0,r.jsx)("br",{})]})}),"\n",(0,r.jsx)(s.h2,{id:"concepts",children:"Concepts"}),"\n",(0,r.jsxs)(s.p,{children:["It is important to understand the basic concepts of Pulumi before we dive into the details of Besom.\nWe strongly advise to get acquainted with ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/",children:"Pulumi's concepts"}),"\ndocumentation as all of that information applies to Besom as well."]}),"\n",(0,r.jsxs)(s.p,{children:["Pulumi uses ",(0,r.jsx)(s.a,{href:"#programs",children:"programs"})," to define ",(0,r.jsx)(s.a,{href:"#resources",children:"resources"})," that are managed using ",(0,r.jsx)(s.a,{href:"#providers",children:"providers"}),"\nand result in ",(0,r.jsx)(s.a,{href:"#stacks",children:"stacks"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["For more detailed information\nsee ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/how-pulumi-works/#how-pulumi-works",children:"how Pulumi works"}),"\ndocumentation section."]}),"\n",(0,r.jsx)(s.h3,{id:"projects",children:"Projects"}),"\n",(0,r.jsxs)(s.p,{children:["A ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/projects/",children:"Pulumi project"})," consists of:"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["a ",(0,r.jsx)(s.a,{href:"#programs",children:"program"})," that defines the desired infrastructure"]}),"\n",(0,r.jsxs)(s.li,{children:["one or more ",(0,r.jsx)(s.a,{href:"#stacks",children:"stack"})," that defines the target environment for the program"]}),"\n",(0,r.jsxs)(s.li,{children:["and metadata on how to run the program, such\nas ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/projects/#pulumi-yaml",children:(0,r.jsx)(s.code,{children:"Pulumi.yaml"})}),"\nand ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/projects/#stack-settings-file",children:(0,r.jsx)(s.code,{children:"Pulumi.<stackname>.yaml"})})," files."]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["You run the Pulumi CLI command ",(0,r.jsx)(s.code,{children:"pulumi up"})," from within your project directory to deploy your infrastructure."]}),"\n",(0,r.jsxs)(s.p,{children:["Project source code is typically stored in a version control system such as Git.\nIn addition to the project source code, Pulumi also stores a snapshot of the project state in the ",(0,r.jsx)(s.a,{href:"#state",children:"backend"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["Besom projects are no different. You can use the same project structure and workflow as you would with other Pulumi\nSDKs.\nThe only difference is that you use ",(0,r.jsx)(s.code,{children:"runtime: scala"})," in\nyour ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/projects/project-file/",children:(0,r.jsx)(s.code,{children:"Pulumi.yaml"})}),"\nwith ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/projects/project-file/#runtime-options",children:"runtime options"})," being:"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"binary"})," - a path to pre-built executable JAR"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"use-executor"})," - force a specific executor path instead of probing the project directory and ",(0,r.jsx)(s.code,{children:"PATH"})]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["A minimal Besom ",(0,r.jsx)(s.code,{children:"Pulumi.yaml"})," project file:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-yaml",children:"name: Example Besom project file with only required attributes\nruntime: scala\n"})}),"\n",(0,r.jsx)(s.h3,{id:"programs",children:"Programs"}),"\n",(0,r.jsxs)(s.p,{children:["A Pulumi program, written in a general-purpose programming language, is a collection of ",(0,r.jsx)(s.a,{href:"#resources",children:"resources"}),"\nthat are deployed to form a ",(0,r.jsx)(s.a,{href:"#stacks",children:"stack"}),"."]}),"\n",(0,r.jsx)(s.p,{children:"A minimal Besom program consists of:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"project.scala"})," - the program dependencies (here we\nuse ",(0,r.jsx)(s.a,{href:"https://scala-cli.virtuslab.org/docs/guides/using-directives/",children:"Scala-CLI directives"}),")","\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-scala",children:'//> using scala "3.3.6"\n//> using plugin "org.virtuslab::besom-compiler-plugin:0.5.0"\n//> using dep "org.virtuslab::besom-core:0.5.0"\n'})}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"Main.scala"})," - the actual program written in Scala","\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-scala",children:"import besom.*\n\n@main def main = Pulumi.run {\n  Stack(\n    log.warn(\"Nothing's here yet, it's waiting for you to write some code!\")\n  )\n}\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.admonition,{type:"tip",children:(0,r.jsxs)(s.p,{children:["Pass ",(0,r.jsx)(s.a,{href:"/besom/docs/context",children:(0,r.jsx)(s.code,{children:"Context"})})," everywhere you are using Besom's resources or stack configuration outside of ",(0,r.jsx)(s.code,{children:"Pulumi.run"}),"\nblock with ",(0,r.jsx)(s.code,{children:"(using besom.Context)"})," clause."]})}),"\n",(0,r.jsx)(s.h3,{id:"stacks",children:"Stacks"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/stack/",children:"Pulumi stack"})," is a separate, isolated, independently configurable\ninstance of a Pulumi ",(0,r.jsx)(s.a,{href:"#programs",children:"program"}),", and can be updated and referred to independently.\nA ",(0,r.jsx)(s.a,{href:"#projects",children:"project"})," can have as many stacks as needed."]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"#projects",children:"Projects"})," and ",(0,r.jsx)(s.a,{href:"#stacks",children:"stacks"})," are intentionally flexible so that they can accommodate diverse needs\nacross a spectrum of team, application, and infrastructure scenarios. Learn more about organizing your code in\n",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/using-pulumi/organizing-projects-stacks",children:"Pulumi projects and stacks"})," documentation."]}),"\n",(0,r.jsxs)(s.p,{children:["By default, Pulumi creates a stack for you when you start a new project using the ",(0,r.jsx)(s.code,{children:"pulumi new"})," command.\nEach stack that is created in a project will have a file\nnamed ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/projects/#stack-settings-file",children:(0,r.jsx)(s.code,{children:"Pulumi.<stackname>.yaml"})}),"\nin the root of the ",(0,r.jsx)(s.a,{href:"#projects",children:"project"})," directory that contains the ",(0,r.jsx)(s.a,{href:"#configuration-and-secrets",children:"configuration"})," specific to this\nstack."]}),"\n",(0,r.jsxs)(s.p,{children:["The stack is represented in a Besom program by a ",(0,r.jsx)(s.code,{children:"Stack"})," datatype that user is expected to return from the main ",(0,r.jsx)(s.code,{children:"Pulumi.run"})," function. ",(0,r.jsx)(s.code,{children:"Stack"})," is used to mark resources or values that stack depends on or that user wants to export as stack outputs. You can return a ",(0,r.jsx)(s.code,{children:"Stack"})," that consists of exports only (for instance when everything you depend on is composed into a thing that you export in the final step) using ",(0,r.jsx)(s.code,{children:"Stack.export(x = a, y = b)"})," or a ",(0,r.jsx)(s.code,{children:"Stack"})," that has only dependencies when you don't want to export anything using ",(0,r.jsx)(s.code,{children:"Stack(x, y)"}),". You can also use some resources and export others using ",(0,r.jsx)(s.code,{children:"Stack(a, b).export(x = i, y = j)"})," syntax."]}),"\n",(0,r.jsx)(s.admonition,{type:"tip",children:(0,r.jsxs)(s.p,{children:["The recommended practice is to ",(0,r.jsx)(s.strong,{children:"check stack files into source control"})," as a means of collaboration.",(0,r.jsx)("br",{}),"\nSince secret values are encrypted, it is safe to check in these stack settings."]})}),"\n",(0,r.jsx)(s.h5,{id:"stack-and-project-information-from-code",children:"Stack and project information from code"}),"\n",(0,r.jsxs)(s.p,{children:["You can access Pulumi stack and project information from your ",(0,r.jsx)(s.a,{href:"#programs",children:"program"})," context using:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-scala",children:"pulumiProject      // the Pulumi project name\npulumiOrganization // the Pulumi organization name\npulumiStack        // the Pulumi stack name\nurn                // the Pulumi stack URN\n"})}),"\n",(0,r.jsx)(s.h5,{id:"stack-outputs",children:"Stack Outputs"}),"\n",(0,r.jsxs)(s.p,{children:["Stacks can export values as ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/stack/#outputs",children:"Stack Outputs"}),".\nThese outputs are shown by Pulumi CLI commands, and are displayed in the Pulumi Cloud, and can be accessed\nprogrammatically using ",(0,r.jsx)(s.a,{href:"#stack-references",children:"Stack References"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["To export values from a stack in Besom, use the ",(0,r.jsx)(s.a,{href:"/besom/docs/exports",children:(0,r.jsx)(s.code,{children:"Stack.exports"})})," function in your program to assign exported values to the final ",(0,r.jsx)(s.code,{children:"Stack"})," value."]}),"\n",(0,r.jsx)(s.h5,{id:"stack-references",children:"Stack References"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/stack/#stackreferences",children:"Stack Reference"})," allows you to use ",(0,r.jsx)(s.a,{href:"#stack-outputs",children:"outputs"})," from\nother ",(0,r.jsx)(s.a,{href:"#stacks",children:"stacks"})," in your ",(0,r.jsx)(s.a,{href:"#programs",children:"program"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["To reference values from another stack, create an instance of the ",(0,r.jsx)(s.code,{children:"StackReference"})," type using the fully qualified\nname of the stack as an input, and then read exported stack outputs by their name."]}),"\n",(0,r.jsx)(s.p,{children:"Here's an example of how to use them:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-scala",children:'@main def main = Pulumi.run {\n  // ...\n  Stack.exports(\n    someValue = "Hello world!",\n    anotherValue = 23\n  )\n}\n'})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-scala",children:'import besom.*\n\n@main def main = Pulumi.run {\n  val otherStack = StackReference(\n    "stackRef",\n    StackReferenceArgs("organization/source-stack-test/my-stack-name")\n  )\n  val someValue = otherStack.output[String]("someValue")\n  val anotherValue = otherStack.output[Int]("anotherValue")\n  // ...\n}\n'})}),"\n",(0,r.jsx)(s.p,{children:"This is a fine approach when the amount of exports from the source stack that you want to use is very limited. If you want a solution that's a bit more scalable, continue to the next section."}),"\n",(0,r.jsxs)(s.p,{children:["StackReferences are resources and their resource constructors, like all other resource constructors, take a third, optional parameter of ",(0,r.jsx)(s.code,{children:"StackReferenceResourceOptions"}),". You can find more about resource options ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/iac/concepts/options/",children:"in the Pulumi docs"}),"."]}),"\n",(0,r.jsxs)(s.h5,{id:"typed-stack-references-since-050",children:["Typed Stack References ",(0,r.jsx)("span",{class:"badge badge--success text--uppercase text--bold",children:"Since: 0.5.0"})]}),"\n",(0,r.jsx)(s.p,{children:"It's also possible to use custom case classes to read the values of a StackReference. Here's an example:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-scala",children:'// source stack just as before\n@main def main = Pulumi.run {\n  // ...\n  Stack.exports(\n    someValue = "Hello world!",\n    anotherValue = 23\n  )\n}\n'})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-scala",children:'import besom.*\n\n// but on the referring side we can now use a proper type\n// instead of reading values manually one by one:\ncase class SourceStack(\n  someValue: String,\n  anotherValue: Int\n) derives JsonReader // note: you need to derive a JsonReader\n\n@main def main = Pulumi.run {\n  val sourceStackRef = StackReference[SourceStack](\n    "stackRef",\n    StackReferenceArgs("organization/source-stack-test/my-stack-name")\n  )\n\n  val sourceStack: Output[SourceStack] = sourceStackRef.map(_.outputs)\n  // ...\n}\n'})}),"\n",(0,r.jsxs)(s.p,{children:["The only syntactical difference is that to use typed stack references you need to provide a desired output type to which you want to read the exports of the source stack: ",(0,r.jsx)(s.code,{children:"StackReference[SourceStack](...)"}),"."]}),"\n",(0,r.jsx)(s.h3,{id:"resources",children:"Resources"}),"\n",(0,r.jsxs)(s.p,{children:["Resources are the primary ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/resources/",children:"construct of Pulumi"})," programs.\nResources represent the fundamental units that make up your infrastructure, such as a compute instance,\na storage bucket, or a Kubernetes cluster."]}),"\n",(0,r.jsxs)(s.p,{children:["Resources are defined using a ",(0,r.jsx)(s.a,{href:"/besom/docs/constructors",children:(0,r.jsx)(s.strong,{children:"resource constructor"})}),". Each resource in Pulumi has:"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["a ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/resources/names/#resource-names",children:"logical name and a physical name"}),"\nThe logical name establishes a notion of identity within Pulumi, and the physical name is used as identity by the\nprovider"]}),"\n",(0,r.jsxs)(s.li,{children:["a ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/resources/names/#types",children:"resource type"}),", which identifies the provider and the\nkind of resource being created"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/resources/names/#types",children:"Pulumi URN"}),", which is an automatically constructed\nglobally unique identifier for the resource."]}),"\n"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-scala",children:'val redisNamespace = Namespace(s"redis-cluster-namespace-$name")\nredisNamespace.id // the Pulumi ID - a physical name\nredisNamespace.urn // the Pulumi URN - a globally unique identifier\nredisNamespace.pulumiResourceName // the Pulumi resource name\nredisNamespace.typeToken // the Pulumi resource type token\nredisNamespace.urn.map(_.resourceName) // the logical name\nredisNamespace.urn.map(_.resourceType) // the resource type\n'})}),"\n",(0,r.jsx)(s.p,{children:"Each resource can also have:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["a set of ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/iac/concepts/inputs-outputs/#inputs",children:"inputs"})," by convention organized into\na family of classes called ",(0,r.jsx)(s.code,{children:"Args"})," (because of the ",(0,r.jsx)(s.code,{children:"Args"})," suffix they all have). Inputs placed into ",(0,r.jsx)(s.code,{children:"Args"})," classes\ndefine the shape and behavior of the resulting infrastructure"]}),"\n",(0,r.jsxs)(s.li,{children:["and a set of ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/options/",children:"options"})," that control how the resource is created and\nmanaged by the Pulumi engine."]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Every ",(0,r.jsx)(s.a,{href:"#resources",children:"resource"})," is managed by a ",(0,r.jsx)(s.a,{href:"#providers",children:"provider"})," which is a plugin that\nprovides the implementation details. If not specified explicitly, the default provider is used.\nProviders can be configured\nusing ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/resources/providers/#explicit-provider-configuration",children:"provider configuration"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["Static ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/resources/get/",children:"get functions"})," can be used to look up any existing resource that\nis not managed by Pulumi. Here's an example of how to use it:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-scala",children:'@main def main = Pulumi.run {\n  val group = aws.ec2.SecurityGroup.get(name = "group", id = "sg-0dfd33cdac25b1ec9")\n  ...\n}\n'})}),"\n",(0,r.jsxs)(s.h4,{id:"shared-args-since-050",children:["Shared Args ",(0,r.jsx)("span",{class:"badge badge--success text--uppercase text--bold",children:"Since: 0.5.0"})]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"Args"})," classes are code-generated and are quite different from normal case classes due to the fact that they\nsupport ",(0,r.jsx)(s.a,{href:"/besom/docs/io#inputs",children:"a very elastic API"})," that makes the construction of Besom programs a breeze. Due to that\nAPI it's impossible to use ",(0,r.jsx)(s.code,{children:".copy"})," methods generated by the Scala compiler to reuse parameters for different\nresources of the same kind. To alleviate that problem each ",(0,r.jsx)(s.code,{children:"Args"})," class has a built-in ",(0,r.jsx)(s.code,{children:".withArgs"})," method that\ndoes exactly the same as normal ",(0,r.jsx)(s.code,{children:".copy"})," method on a case class but with our permissive, ",(0,r.jsx)(s.code,{children:"Input"}),"-based API."]}),"\n",(0,r.jsx)(s.p,{children:"Here's an example:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-scala",children:'@main def main = Pulumi.run {\n  val privateKey = tls.PrivateKey("4weeksPK", tls.PrivateKeyArgs(algorithm = "ECDSA"))\n\n  val selfSignedCertSharedArgs = tls.SelfSignedCertArgs(\n    allowedUses = List("key_encipherment", "digital_signature"),\n    earlyRenewalHours = Some(672), // 4 weeks\n    privateKeyPem = privateKey.privateKeyPem,\n    validityPeriodHours = 672, // 4 weeks\n  )\n\n  val longerCertValidityPeriodHours = 672 * 2 // 8 weeks\n\n  val privateKeyForLongerCert = tls.PrivateKey("8weeksPK", tls.PrivateKeyArgs(algorithm = "ECDSA"))\n\n  // reuse all the configuration but extend validity\n  val selfSignedCertSharedArgsLongerValidity = selfSignedCertSharedArgs.withArgs(\n    validityPeriodHours = longerCertValidityPeriodHours,\n    privateKeyPem = privateKeyForLongerCert.privateKeyPem\n  )\n\n  val selfSignedCert = tls.SelfSignedCert("selfSignedCert4weeks", selfSignedCertSharedArgs)\n  val selfSignedCertLongerValidity = tls.SelfSignedCert(\n    "selfSignedCert8weeks",\n    selfSignedCertSharedArgsLongerValidity\n  )\n\n  Stack.exports(\n    selfSignedCert = selfSignedCert.asSecret,\n    selfSignedCertLongerValidity = selfSignedCertLongerValidity.asSecret\n  )\n}\n'})}),"\n",(0,r.jsxs)(s.h4,{id:"resource-aliases-since-050",children:["Resource Aliases ",(0,r.jsx)("span",{class:"badge badge--success text--uppercase text--bold",children:"Since: 0.5.0"})]}),"\n",(0,r.jsxs)(s.p,{children:["When refactoring infrastructure-as-code programs one quickly notices that changing the name of a resource leads to\na situation where IaC engine deletes the old resource and creates a new one with the new name. This is usually not\nthe desired behavior. Here's where resource aliases come in - it's possible to inform Besom that a resource was\npreviously called differently by providing an alias via resource option ",(0,r.jsx)(s.code,{children:"aliases"}),":"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-scala",children:'@main def main = Pulumi.run {\n  val redisNamespace = Namespace(\n    s"my-redis-cluster-ns-$name",\n    opts = opts(aliases = SpecResourceAlias(name = Some(s"redis-cluster-namespace-$name")))\n  )\n}\n'})}),"\n",(0,r.jsxs)(s.p,{children:["This will allow Pulumi to update the resource in place, instead of recreating it. The ",(0,r.jsx)(s.code,{children:"aliases"})," parameter accepts\none or many (",(0,r.jsx)(s.code,{children:"Iterable"}),") aliases which can be either ",(0,r.jsx)(s.code,{children:"SpecResourceAlias"})," or ",(0,r.jsx)(s.code,{children:"UrnResourceAlias"}),", where the former\nallows user to specify (optionally) the ",(0,r.jsx)(s.code,{children:"name"}),", ",(0,r.jsx)(s.code,{children:"type"}),", ",(0,r.jsx)(s.code,{children:"stack"}),", ",(0,r.jsx)(s.code,{children:"project"})," and ",(0,r.jsx)(s.code,{children:"parent"})," of the aliased resource\nand the latter allows to specify the full URN of the resource:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-scala",children:'@main def main = Pulumi.run {\n  val redisNamespace = Namespace(\n    s"my-corporate-redis-cluster-ns-$name",\n    opts = opts(aliases = List(\n      UrnResourceAlias(s"urn:pulumi:stackname::projectname::kubernetes:v1/namespace:Namespace::my-redis-cluster-ns-$name")\n      SpecResourceAlias(name = Some(s"redis-cluster-namespace-$name")),\n    ))\n  )\n}\n'})}),"\n",(0,r.jsxs)(s.p,{children:["To learn more about aliases please visit ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/iac/concepts/options/aliases/",children:"this Pulumi docs page"}),"."]}),"\n",(0,r.jsx)(s.h3,{id:"inputs-and-outputs",children:"Inputs and Outputs"}),"\n",(0,r.jsxs)(s.p,{children:["Inputs and Outputs are the\nprimary ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/inputs-outputs/",children:"asynchronous data types in Pulumi"}),",\nand they signify values that will be provided by the engine later, when the resource is created and its properties can\nbe fetched.\n",(0,r.jsx)(s.code,{children:"Input[A]"})," type is an alias for ",(0,r.jsx)(s.code,{children:"Output[A]"})," type used by ",(0,r.jsx)(s.a,{href:"#resources",children:"resource"})," arguments. Inputs are\n",(0,r.jsx)(s.a,{href:"/besom/docs/io#inputs",children:"very elastic"})," in what they can receive to facilitate preview-friendly, declarative model of programming."]}),"\n",(0,r.jsxs)(s.p,{children:["Outputs are values of type ",(0,r.jsx)(s.code,{children:"Output[A]"})," and behave very much\nlike ",(0,r.jsx)(s.a,{href:"https://en.wikipedia.org/wiki/Monad_(functional_programming)",children:"monads"}),".\nThis is necessary because output values are not fully known until the infrastructure resource has actually completed\nprovisioning, which happens asynchronously after the program has finished executing."]}),"\n",(0,r.jsx)(s.p,{children:"Outputs are used to:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["automatically captures dependencies between ",(0,r.jsx)(s.a,{href:"#resources",children:"resources"})]}),"\n",(0,r.jsx)(s.li,{children:"provide a way to express transformations on its value before it's known"}),"\n",(0,r.jsx)(s.li,{children:"defer the evaluation of its value until it's known"}),"\n",(0,r.jsxs)(s.li,{children:["track the ",(0,r.jsx)(s.em,{children:"secretness"})," of its value"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"Output transformations available in Besom:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsxs)(s.a,{href:"/besom/docs/apply_methods",children:[(0,r.jsx)(s.code,{children:"map"})," and ",(0,r.jsx)(s.code,{children:"flatMap"})]})," methods take a callback that receives the plain value, and computes a new\noutput"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"/besom/docs/lifting",children:"lifting"})," directly read properties off an output value"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"/besom/docs/interpolator",children:"interpolation"})," concatenate string outputs with other strings directly"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"sequence"})," method combines multiple outputs into a single output of a collection (",(0,r.jsx)(s.code,{children:"parSequence"})," variant is also available\nfor explicit parallel evaluation)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"zip"})," method combines multiple outputs into a single output of a tuple"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"traverse"})," method transforms a collection of values into a single output of a collection ((",(0,r.jsx)(s.code,{children:"parTraverse"})," variant is also available\nfor explicit parallel evaluation))"]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["To create an output from a plain value, use the ",(0,r.jsx)(s.code,{children:"Output"})," constructor, e.g.:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-scala",children:'val hello = Output("hello")\nval world = Output.secret("world")\n'})}),"\n",(0,r.jsxs)(s.p,{children:["To transform an output value, use the ",(0,r.jsx)(s.code,{children:"map"})," and ",(0,r.jsx)(s.code,{children:"flatMap"})," methods, e.g.:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-scala",children:'val hello = Output("hello").map(_.toUpperCase)\nval world = Output.secret("world")\nval helloWorld: Output[String] = hello.flatMap(h => h + "_" + world.map(_.toUpperCase))\n'})}),"\n",(0,r.jsxs)(s.p,{children:["If you have multiple outputs of the same type and need to use them together ",(0,r.jsx)(s.strong,{children:"as a list"})," you can use\n",(0,r.jsx)(s.code,{children:"Output.sequence"})," method to combine them into a single output:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-scala",children:"val port: Output[String] = pod.name\nval host: Output[String] = node.hostname\nval hello: Output[List[String]] = List(host, port).sequence // we use the extension method here\n"})}),"\n",(0,r.jsxs)(s.p,{children:["If you have multiple outputs of different types and need to use them together ",(0,r.jsx)(s.strong,{children:"as a tuple"})," you can use the standard\n",(0,r.jsx)(s.a,{href:"https://scala-lang.org/api/3.x/scala/collection/View.html#zip-1dd",children:(0,r.jsx)(s.code,{children:"zip"})})," method and pattern matching (",(0,r.jsx)(s.code,{children:"case"}),") to\ncombine them into a single output:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-scala",children:'val port: Output[Int] = pod.port\nval host: Output[String] = node.hostname\nval hello: Output[(String, Int)] = host.zip(port)\nval url: Output[String] = hello.map { case (hostname, portValue) => s"https://$hostname:$portValue/" }\n'})}),"\n",(0,r.jsxs)(s.p,{children:["If you have a map of outputs and need to use them together ",(0,r.jsx)(s.strong,{children:"as a map"})," you can use\n",(0,r.jsx)(s.code,{children:"Output.traverse"})," method to combine them into a single output:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-scala",children:"val m: Map[String, Output[String]] = Map(pod.name -> pod.port)\nval o: Output[Map[String, String]] = m.traverse // we use the extension method here\n"})}),"\n",(0,r.jsxs)(s.p,{children:["You can also use ",(0,r.jsx)(s.code,{children:"Output.traverse"})," like that:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-scala",children:'val names: List[String] = List("John", "Paul")\nval outputNames: Output[List[String]] = names.traverse(name => Output(name))\n'})}),"\n",(0,r.jsxs)(s.p,{children:["To access ",(0,r.jsx)(s.code,{children:"String"})," outputs directly, use the ",(0,r.jsx)(s.a,{href:"/besom/docs/interpolator",children:"interpolator"}),":"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-scala",children:'val port: Output[Int] = pod.port\nval host: Output[String] = node.hostname\nval https: Output[String] = p"https://$host:$port/api/"\n'})}),"\n",(0,r.jsxs)(s.p,{children:["We encourage you to learn more about relationship between ",(0,r.jsx)(s.a,{href:"#resources",children:"resources"})," and ",(0,r.jsx)(s.a,{href:"#inputs-and-outputs",children:"outputs"}),"\nin the ",(0,r.jsx)(s.a,{href:"/besom/docs/constructors",children:"Resource constructors and asynchronicity"})," section."]}),"\n",(0,r.jsx)(s.h3,{id:"configuration-and-secrets",children:"Configuration and Secrets"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/config",children:"Configuration"})," or ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/secrets/",children:"Secret"}),"\nis a set of key-value pairs that influence the behavior of a Pulumi program."]}),"\n",(0,r.jsxs)(s.p,{children:["Configuration or secret keys use the format ",(0,r.jsx)(s.code,{children:"[<namespace>:]<key-name>"}),", with a colon delimiting the optional namespace\nand the actual key name. Pulumi automatically uses the current project name\nfrom ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/projects/#pulumi-yaml",children:(0,r.jsx)(s.code,{children:"Pulumi.yaml"})})," as the default key namespace."]}),"\n",(0,r.jsx)(s.p,{children:"Configuration values can be set in two ways:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/projects/#stack-settings-file",children:(0,r.jsx)(s.code,{children:"Pulumi.<stackname>.yaml"})})," file"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/config/#setting-and-getting-configuration-values",children:(0,r.jsx)(s.code,{children:"pulumi config set"})}),"\nand ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/secrets/#secrets",children:(0,r.jsx)(s.code,{children:"pulumi config set --secret"})})," commands"]}),"\n"]}),"\n",(0,r.jsx)(s.h5,{id:"accessing-configuration-and-secrets-from-code",children:"Accessing Configuration and Secrets from Code"}),"\n",(0,r.jsxs)(s.p,{children:["Configuration and secret values can be ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/config/#code",children:"accessed"})," from ",(0,r.jsx)(s.a,{href:"#programs",children:"programs"}),"\nusing the ",(0,r.jsx)(s.code,{children:"Config.get*"})," and ",(0,r.jsx)(s.code,{children:"Config.require*"})," method family, e.g.:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-scala",children:'val a: Output[Option[String]] = config.getString("aws:region")\nval b: Output[String] = config.requireString("aws:profile")\nval c: Output[Option[String]] = Config("aws").map(_.get("region"))\n'})}),"\n",(0,r.jsxs)(s.p,{children:["If the configuration value is a ",(0,r.jsx)(s.strong,{children:"secret"}),", it will be ",(0,r.jsx)(s.strong,{children:"automatically marked"})," internally as such and ",(0,r.jsx)(s.strong,{children:"redacted"})," in console outputs."]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/config/#structured-configuration",children:"Structured Configuration"})," is also supported\nin two flavors: JSON AST (",(0,r.jsx)(s.code,{children:"config.getJson"})," or ",(0,r.jsx)(s.code,{children:"config.requireJson"}),") or object deserialization (",(0,r.jsx)(s.code,{children:"config.getObject"})," or ",(0,r.jsx)(s.code,{children:"config.requireObject"}),")\nand can be used to read Pulumi configuration in more advanced use cases."]}),"\n",(0,r.jsx)(s.admonition,{type:"note",children:(0,r.jsxs)(s.p,{children:["Secret values are automatically ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/secrets/#configuring-secrets-encryption",children:"encrypted and stored"})," in the Pulumi ",(0,r.jsx)(s.a,{href:"#state",children:"state"}),"."]})}),"\n",(0,r.jsxs)(s.admonition,{type:"tip",children:[(0,r.jsxs)(s.p,{children:["Secrets in Besom differ in behavior from other Pulumi SDKs. In other SDKs, if you try to get a config key that is a\nsecret, you will obtain it as plaintext (and due to ",(0,r.jsx)(s.a,{href:"https://github.com/pulumi/pulumi/issues/7127",children:"a bug"})," you won't even get a warning)."]}),(0,r.jsxs)(s.p,{children:["We choose to do the right thing in Besom and ",(0,r.jsx)(s.strong,{children:"return all configs as Outputs"})," so that we can handle failure in pure,\nfunctional way, and ",(0,r.jsx)(s.strong,{children:"automatically"})," mark secret values ",(0,r.jsxs)(s.strong,{children:["as ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/secrets/#how-secrets-relate-to-outputs",children:"secret Outputs"})]}),"."]})]}),"\n",(0,r.jsx)(s.h3,{id:"providers",children:"Providers"}),"\n",(0,r.jsxs)(s.p,{children:["A ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/resources/providers/",children:"resource provider"})," is a plugin that handles communications with a cloud service to create, read, update, and delete the resources\nyou define in your Pulumi ",(0,r.jsx)(s.a,{href:"#programs",children:"programs"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["You import a Provider SDK (e.g. ",(0,r.jsx)(s.code,{children:"import besom.api.aws"}),") library in you ",(0,r.jsx)(s.a,{href:"#programs",children:"program"}),", Pulumi passes your code to\nthe language host plugin (i.e. ",(0,r.jsx)(s.code,{children:"pulumi-language-scala"}),"), waits to be notified of resource registrations, assembles\na model of your desired ",(0,r.jsx)(s.a,{href:"#state",children:"state"}),", and calls on the resource provider (e.g. ",(0,r.jsx)(s.code,{children:"pulumi-resource-aws"}),") to produce that\nstate.\nThe resource provider translates those requests into API calls to the cloud service or platform."]}),"\n",(0,r.jsxs)(s.p,{children:["Providers can be configured\nusing ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/resources/providers/#explicit-provider-configuration",children:"provider configuration"}),"."]}),"\n",(0,r.jsx)(s.admonition,{type:"tip",children:(0,r.jsxs)(s.p,{children:["It is recommended to ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/blog/disable-default-providers/",children:"disable default providers"})," if not for ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/config#pulumi-configuration-options",children:"all providers, at least for Kubernetes"}),"."]})}),"\n",(0,r.jsx)(s.h3,{id:"state",children:"State"}),"\n",(0,r.jsxs)(s.p,{children:["State is a snapshot of your ",(0,r.jsx)(s.a,{href:"#projects",children:"project"})," ",(0,r.jsx)(s.a,{href:"#resources",children:"resources"})," that is stored in\na ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/concepts/state/#deciding-on-a-state-backend",children:"backend"})," with ",(0,r.jsx)(s.a,{href:"https://www.pulumi.com/docs/intro/cloud-providers/pulumi-service/",children:"Pulumi Service"})," being the default."]}),"\n",(0,r.jsx)(s.p,{children:"State is used to:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["track ",(0,r.jsx)(s.a,{href:"#resources",children:"resources"})," that are created by your ",(0,r.jsx)(s.a,{href:"#programs",children:"program"})]}),"\n",(0,r.jsx)(s.li,{children:"record the relationship between resources"}),"\n",(0,r.jsxs)(s.li,{children:["store metadata about your ",(0,r.jsx)(s.a,{href:"#projects",children:"project"})," and ",(0,r.jsx)(s.a,{href:"#stacks",children:"stacks"})]}),"\n",(0,r.jsxs)(s.li,{children:["and store ",(0,r.jsx)(s.a,{href:"#configuration-and-secrets",children:"configuration"})," and secret values"]}),"\n",(0,r.jsxs)(s.li,{children:["and store ",(0,r.jsx)(s.a,{href:"#stack-outputs",children:"stack outputs"})]}),"\n"]}),"\n",(0,r.jsx)(s.admonition,{type:"note",children:(0,r.jsxs)(s.p,{children:["Fore extra curious ",(0,r.jsx)(s.a,{href:"https://pulumi-developer-docs.readthedocs.io/en/latest/architecture/deployment-schema.html",children:"here's the internal state schema"})]})})]})}function u(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},6543:(e,s,n)=>{n.d(s,{A:()=>a});n(6540);var t=n(4586),r=n(4848);const a=()=>{const{siteConfig:e}=(0,t.A)(),{besomVersion:s}=e.customFields;return(0,r.jsx)(r.Fragment,{children:s})}},8453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>o});var t=n(6540);const r={},a=t.createContext(r);function i(e){const s=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(a.Provider,{value:s},e.children)}}}]);