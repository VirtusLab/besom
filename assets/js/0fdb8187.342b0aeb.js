"use strict";(self.webpackChunkbesom_website=self.webpackChunkbesom_website||[]).push([[953],{5680:(e,t,r)=>{r.d(t,{xA:()=>l,yg:()=>y});var n=r(6540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),i=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=i(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,c=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),p=i(r),d=a,y=p["".concat(c,".").concat(d)]||p[d]||m[d]||s;return r?n.createElement(y,o(o({ref:t},l),{},{components:r})):n.createElement(y,o({ref:t},l))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,o=new Array(s);o[0]=d;var u={};for(var c in t)hasOwnProperty.call(t,c)&&(u[c]=t[c]);u.originalType=e,u[p]="string"==typeof e?e:a,o[1]=u;for(var i=2;i<s;i++)o[i]=r[i];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1955:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>I,contentTitle:()=>T,default:()=>P,frontMatter:()=>x,metadata:()=>A,toc:()=>E});var n=r(8168),a=r(6540),s=r(5680),o=r(53),u=r(3104),c=r(6347),i=r(7485),l=r(1682),p=r(9466);function m(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:r,attributes:n,default:a}}=e;return{value:t,label:r,attributes:n,default:a}}))}function d(e){const{values:t,children:r}=e;return(0,a.useMemo)((()=>{const e=t??m(r);return function(e){const t=(0,l.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function y(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:r}=e;const n=(0,c.W6)(),s=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,i.aZ)(s),(0,a.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(n.location.search);t.set(s,e),n.replace({...n.location,search:t.toString()})}),[s,n])]}function g(e){const{defaultValue:t,queryString:r=!1,groupId:n}=e,s=d(e),[o,u]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!y({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=r.find((e=>e.default))??r[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:s}))),[c,i]=f({queryString:r,groupId:n}),[l,m]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,s]=(0,p.Dv)(r);return[n,(0,a.useCallback)((e=>{r&&s.set(e)}),[r,s])]}({groupId:n}),g=(()=>{const e=c??l;return y({value:e,tabValues:s})?e:null})();(0,a.useLayoutEffect)((()=>{g&&u(g)}),[g]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!y({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);u(e),i(e),m(e)}),[i,m,s]),tabValues:s}}var h=r(2303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:t,block:r,selectedValue:s,selectValue:c,tabValues:i}=e;const l=[],{blockElementScrollPositionUntilNextRender:p}=(0,u.a_)(),m=e=>{const t=e.currentTarget,r=l.indexOf(t),n=i[r].value;n!==s&&(p(t),c(n))},d=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const r=l.indexOf(e.currentTarget)+1;t=l[r]??l[0];break}case"ArrowLeft":{const r=l.indexOf(e.currentTarget)-1;t=l[r]??l[l.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":r},t)},i.map((e=>{let{value:t,label:r,attributes:u}=e;return a.createElement("li",(0,n.A)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>l.push(e),onKeyDown:d,onClick:m},u,{className:(0,o.A)("tabs__item",b.tabItem,u?.className,{"tabs__item--active":s===t})}),r??t)})))}function k(e){let{lazy:t,children:r,selectedValue:n}=e;const s=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===n));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},s.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function w(e){const t=g(e);return a.createElement("div",{className:(0,o.A)("tabs-container",b.tabList)},a.createElement(v,(0,n.A)({},e,t)),a.createElement(k,(0,n.A)({},e,t)))}function N(e){const t=(0,h.A)();return a.createElement(w,(0,n.A)({key:String(t)},e))}const O={tabItem:"tabItem_Ymn6"};function B(e){let{children:t,hidden:r,className:n}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.A)(O.tabItem,n),hidden:r},t)}const x={title:"Resource constructors and asynchronicity"},T=void 0,A={unversionedId:"constructors",id:"constructors",title:"Resource constructors and asynchronicity",description:"Resources",source:"@site/docs/constructors.md",sourceDirName:".",slug:"/constructors",permalink:"/besom/docs/constructors",draft:!1,tags:[],version:"current",frontMatter:{title:"Resource constructors and asynchronicity"},sidebar:"docsSidebar",previous:{title:"Exports",permalink:"/besom/docs/exports"},next:{title:"Laziness",permalink:"/besom/docs/laziness"}},I={},E=[{value:"Resources",id:"resources",level:2},{value:"Outputs",id:"outputs",level:2},{value:"Resource constructor syntax",id:"resource-constructor-syntax",level:2},{value:"Resource asynchronicity",id:"resource-asynchronicity",level:2},{value:"Compile time checking",id:"compile-time-checking",level:2}],S={toc:E},j="wrapper";function P(e){let{components:t,...r}=e;return(0,s.yg)(j,(0,n.A)({},S,r,{components:t,mdxType:"MDXLayout"}),(0,s.yg)("h2",{id:"resources"},"Resources"),(0,s.yg)("p",null,"Resources are the ",(0,s.yg)("a",{parentName:"p",href:"/besom/docs/basics#resources"},"primary construct of Pulumi")," programs."),(0,s.yg)("h2",{id:"outputs"},"Outputs"),(0,s.yg)("p",null,"Outputs are the ",(0,s.yg)("a",{parentName:"p",href:"/besom/docs/basics#inputs-and-outputs"},"primary asynchronous data structure of Pulumi")," programs."),(0,s.yg)("h2",{id:"resource-constructor-syntax"},"Resource constructor syntax"),(0,s.yg)("p",null,"Most Pulumi SDKs expect you to create resource objects by invoking their constructors with ",(0,s.yg)("inlineCode",{parentName:"p"},"new")," keyword,\nfor example in TypeScript: "),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-typescript"},'const s3Bucket: aws.s3.Bucket = new aws.s3.Bucket("my-bucket")\n')),(0,s.yg)("p",null,"This operation returns a resource object of type ",(0,s.yg)("inlineCode",{parentName:"p"},"aws.s3.Bucket")," that has several fields,\neach of an ",(0,s.yg)("a",{parentName:"p",href:"#outputs"},(0,s.yg)("inlineCode",{parentName:"a"},"Output[A]"))," type. The values will be provided by the engine later, when the resource is created\nand its properties can be fetched."),(0,s.yg)("p",null,"For all of that to happen this synchronous constructor call has to ",(0,s.yg)("strong",{parentName:"p"},"hide the complex, asynchronous machinery")," that\ntriggers the communication with Pulumi engine and resolves underlying ",(0,s.yg)("inlineCode",{parentName:"p"},"Promise"),"-like datatype wrapped by each Output.\nThis cannot be done in a pure way and due to that ",(0,s.yg)("strong",{parentName:"p"},"resource constructors in Besom also return Outputs")," lifting them\nto become primary construct in terms of which user declares his program. "),(0,s.yg)("p",null,"This is very similar to the known pattern involving Scala's Future's, cats ",(0,s.yg)("inlineCode",{parentName:"p"},"IO")," or ",(0,s.yg)("inlineCode",{parentName:"p"},"ZIO")," where once you start\nexpressing your program using such a construct you build everything in these terms and only ",(0,s.yg)("inlineCode",{parentName:"p"},"Await")," or ",(0,s.yg)("inlineCode",{parentName:"p"},"unsafeRun"),"\nthem in your main function. "),(0,s.yg)("p",null,"Here's an example of said resource constructor in Besom:"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-scala"},'val s3Bucket: Output[aws.s3.Bucket] = aws.s3.Bucket("my-bucket")\n')),(0,s.yg)("admonition",{type:"tip"},(0,s.yg)("p",{parentName:"admonition"},"We have retained the CamelCase naming convention of resource constructors for parity with other Pulumi SDKs.\nYou can always expect resource constructor names to start with capital letter. ")),(0,s.yg)("h2",{id:"resource-asynchronicity"},"Resource asynchronicity"),(0,s.yg)("p",null,"Resources in Besom have an interesting property related to the fact that Pulumi's runtime is asynchronous.\nOne could suspect that in following snippet resources are created sequentially due to monadic syntax:"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-scala"},'for \n  a <- aws.s3.Bucket("first")\n  b <- aws.s3.Bucket("second")\nyield ()\n')),(0,s.yg)("p",null,"This isn't true. Pulumi expects that a language SDK will declare resources as fast as possible. Due to this\nfact resource constructors return immediately after they spawn a Resource object. A resource object is just a\nplain case class with each property expressed in terms of Outputs. The work necessary for resolution of these\nproperties is executed asynchronously. In the example above both buckets will be created in parallel. "),(0,s.yg)("p",null,"Given that a piece of code is worth more than a 1000 words, below you can find code snippets that explain these\nsemantics using known Scala technologies. In each of them ",(0,s.yg)("inlineCode",{parentName:"p"},"Output")," is replaced with a respective async datatype\nto explain what internals of Besom are actually doing when resource constructors are called (oversimplified a\nbit)."),(0,s.yg)(N,{mdxType:"Tabs"},(0,s.yg)(B,{value:"Future",label:"stdlib Future",default:!0,mdxType:"TabItem"},(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-scala"},'// internal function, here just to represent types\ndef resolveResourceAsync(name: String, args: Args, promises: Promise[_]*): Future[Unit] = ???\n\n// resource definition\ncase class Bucket(bucket: Future[String])\nobject Bucket:\n  def apply(name: String, args: BucketArgs = BucketArgs()): Future[Bucket] = \n    // create a promise for bucket property\n    val bucketNamePromise = Promise[String]() \n    // kicks off async resolution of the resource properties\n    resolveResourceAsync(name, args, bucketNamePromise) \n    // returns immediately\n    Future.successful(Bucket(bucketNamePromise.future)) \n\n// this just returns a Future[Unit] that will be resolved immediately\nfor \n  a <- Bucket("first")\n  b <- Bucket("second")\nyield ()\n'))),(0,s.yg)(B,{value:"ce",label:"Cats Effect IO",mdxType:"TabItem"},(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-scala"},'// internal function, here just to represent types\ndef resolveResourceAsync(name: String, args: Args, promises: Deferred[IO, _]*): IO[Unit] = ???\n\n// resource definition\ncase class Bucket(bucket: IO[String])\nobject Bucket:\n  def apply(name: String, args: BucketArgs = BucketArgs()): IO[Bucket] = \n    for \n      // create a deferred for bucket property\n      bucketNameDeferred <- Deferred[IO, String]() \n      // kicks off async resolution of the resource properties\n      _ <- resolveResourceAsync(name, args, bucketNameDeferred).start \n    yield Bucket(bucketNameDeferred.get) // returns immediately\n\n// this just returns a IO[Unit] that will be resolved immediately\nfor \n  a <- Bucket("first")\n  b <- Bucket("second")\nyield ()\n'))),(0,s.yg)(B,{value:"zio",label:"ZIO",mdxType:"TabItem"},(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-scala"},'// internal function, here just to represent types\ndef resolveResourceAsync(name: String, args: Args, promises: Promise[_]*): Task[Unit] = ???\n\n// resource definition\ncase class Bucket(bucket: Task[String])\nobject Bucket:\n  def apply(name: String, args: BucketArgs = BucketArgs()): Task[Bucket] = \n    for \n      // create a promise for bucket property\n      bucketNamePromise <- Promise.make[Exception, String]() \n      // kicks off async resolution of the resource properties\n      _ <- resolveResourceAsync(name, args, bucketNameDeferred).fork \n    yield Bucket(bucketNameDeferred.await) // returns immediately\n\n// this just returns a Task[Unit] that will be resolved immediately\nfor \n  a <- Bucket("first")\n  b <- Bucket("second")\nyield ()\n')))),(0,s.yg)("p",null,"There is a way to inform Pulumi engine that some of the resources have to be created, updated or deleted\nsequentially. To do that, one has to pass ",(0,s.yg)("a",{parentName:"p",href:"https://www.pulumi.com/docs/concepts/options/"},"resource options"),"\nto adequate resource constructors with ",(0,s.yg)("inlineCode",{parentName:"p"},"dependsOn")," property set to resource to await for. Here's an example:"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-scala"},'for \n  a <- Bucket("first")\n  b <- Bucket("second", BucketArgs(), opts(dependsOn = a))\nyield ()\n')),(0,s.yg)("admonition",{type:"info"},(0,s.yg)("p",{parentName:"admonition"},"A good observer will notice that all these forks have to be awaited somehow and that is true. Besom\ndoes await for all spawned Outputs to be resolved before finishing the run.")),(0,s.yg)("h2",{id:"compile-time-checking"},"Compile time checking"),(0,s.yg)("p",null,"Besom tries to catch as many errors as possible at compile time, examples of our compile time checks are:"),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},"A component resource must register a correct type name with the base constructor in format: ",(0,s.yg)("inlineCode",{parentName:"li"},"<package>:<module>:<type>")),(0,s.yg)("li",{parentName:"ul"},"A component resource class should have a ",(0,s.yg)("inlineCode",{parentName:"li"},"(using ComponentBase)")," parameter clause at the end of its constructor")))}P.isMDXComponent=!0}}]);