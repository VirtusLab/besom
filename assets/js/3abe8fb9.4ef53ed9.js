"use strict";(self.webpackChunkbesom_website=self.webpackChunkbesom_website||[]).push([[485],{4216:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"logging","title":"Logging","description":"In every scope where Pulumi Context is available and global Besom import was included user has the capability to summon","source":"@site/docs/logging.md","sourceDirName":".","slug":"/logging","permalink":"/besom/docs/logging","draft":false,"unlisted":false,"editUrl":"https://github.com/VirtusLab/besom/tree/main/website/docs/logging.md","tags":[],"version":"current","frontMatter":{"title":"Logging"},"sidebar":"docsSidebar","previous":{"title":"Apply methods","permalink":"/besom/docs/apply_methods"},"next":{"title":"Lifting","permalink":"/besom/docs/lifting"}}');var s=n(4848),i=n(8453);const r={title:"Logging"},l=void 0,a={},c=[{value:"Why not simply <code>println</code>?",id:"why-not-simply-println",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["In every scope where Pulumi ",(0,s.jsx)(t.code,{children:"Context"})," is available and global Besom import was included user has the capability to summon\nlogger by writing ",(0,s.jsx)(t.code,{children:"log"})," with a following severity level used as a logging method's name, e.g.:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-scala",children:'@main def run = Pulumi.run {\n  Stack(log.warn("Nothing to do."))\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Logging is an asynchronous, effectful operation and therefore returns an ",(0,s.jsx)(t.code,{children:"Output"}),". This means that all logging statements need to be composed\ninto other values that will eventually be either passed as ",(0,s.jsx)(t.code,{children:"Stack"})," arguments or exports. This is similar to how logging frameworks for ",(0,s.jsx)(t.code,{children:"cats"})," or ",(0,s.jsx)(t.code,{children:"ZIO"})," behave (eg.: ",(0,s.jsx)(t.a,{href:"https://github.com/typelevel/log4cats",children:"log4cats"}),")."]}),"\n",(0,s.jsxs)(t.h2,{id:"why-not-simply-println",children:["Why not simply ",(0,s.jsx)(t.code,{children:"println"}),"?"]}),"\n",(0,s.jsxs)(t.p,{children:["Given that you're working with CLI you might be tempted to just ",(0,s.jsx)(t.code,{children:"println"})," some value, but that will have no visible effect.\nThat's because Besom's Scala code is being executed in a different process than Pulumi. It's Pulumi that drives the\nprocess by calling Besom. Therefore, you have to use functions provided by Besom for your code to log anything."]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var o=n(6540);const s={},i=o.createContext(s);function r(e){const t=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);