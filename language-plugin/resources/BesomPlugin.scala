/*
  This file was generated by besom. Do not edit it manually!
*/

package besom.sbt

import _root_.sbt._
import _root_.sbt.Keys._
import complete.DefaultParsers._

object BesomPlugin extends AutoPlugin {
  override def trigger = allRequirements

  object autoImport {
    val besomExtractPulumiPlugins = inputKey[Unit]("Extract Pulumi plugins from the classpath")
  }

  import autoImport._

  override def projectSettings: Seq[Setting[_]] = Seq(
    besomExtractPulumiPlugins := {
      val args = spaceDelimited("<arg*>").parsed.toList
      val List(bootstrapLibJarPath, pluginDiscovererOutputPath) = args
      
      val log = streams.value.log
      val depsClassPath: Seq[File] = (Compile / fullClasspath).value.map(_.data)
      val scalaRun = runner.value

      log.debug(s"Extracting Pulumi plugins from the classpath into ${pluginDiscovererOutputPath}")
      val bootstrapJarDep = new File(bootstrapLibJarPath)
      val classPath = depsClassPath :+ bootstrapJarDep
      val pluginDiscovererMainClass = "besom.bootstrap.PulumiPluginsDiscoverer"

      scalaRun.run(pluginDiscovererMainClass, classPath, Seq("--output-file", pluginDiscovererOutputPath), log)

      log.debug(s"Extracted Pulumi plugins from the classpath successfully")
    }
  )
}
