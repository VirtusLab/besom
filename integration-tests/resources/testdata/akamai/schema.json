{
  "name": "akamai",
  "description": "A Pulumi package for creating and managing akamai cloud resources.",
  "keywords": [
    "pulumi",
    "akamai"
  ],
  "homepage": "https://pulumi.io",
  "license": "Apache-2.0",
  "attribution": "This Pulumi package is based on the [`akamai` Terraform Provider](https://github.com/akamai/terraform-provider-akamai).",
  "repository": "https://github.com/pulumi/pulumi-akamai",
  "meta": {
    "moduleFormat": "(.*)(?:/[^/]*)"
  },
  "language": {
    "csharp": {
      "packageReferences": {
        "Pulumi": "3.*"
      },
      "namespaces": {
        "akamai": "Akamai"
      },
      "compatibility": "tfbridge20"
    },
    "go": {
      "importBasePath": "github.com/pulumi/pulumi-akamai/sdk/v6/go/akamai",
      "generateResourceContainerTypes": true,
      "generateExtraInputTypes": true
    },
    "nodejs": {
      "packageDescription": "A Pulumi package for creating and managing akamai cloud resources.",
      "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/akamai/terraform-provider-akamai)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-akamai` repo](https://github.com/pulumi/pulumi-akamai/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-akamai` repo](https://github.com/akamai/terraform-provider-akamai/issues).",
      "dependencies": {
        "@pulumi/pulumi": "^3.0.0"
      },
      "devDependencies": {
        "@types/mime": "^2.0.0",
        "@types/node": "^10.0.0"
      },
      "compatibility": "tfbridge20",
      "disableUnionOutputTypes": true
    },
    "python": {
      "requires": {
        "pulumi": "\u003e=3.0.0,\u003c4.0.0"
      },
      "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/akamai/terraform-provider-akamai)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-akamai` repo](https://github.com/pulumi/pulumi-akamai/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-akamai` repo](https://github.com/akamai/terraform-provider-akamai/issues).",
      "compatibility": "tfbridge20",
      "pyproject": {
        "enabled": true
      }
    }
  },
  "config": {
    "variables": {
      "cacheEnabled": {
        "type": "boolean"
      },
      "config": {
        "$ref": "#/types/akamai:config/config:config",
        "language": {
          "csharp": {
            "name": "ConfigDetails"
          }
        }
      },
      "configSection": {
        "type": "string",
        "description": "The section of the edgerc file to use for configuration\n"
      },
      "edgerc": {
        "type": "string"
      },
      "requestLimit": {
        "type": "integer",
        "description": "The maximum number of API requests to be made per second (0 for no limit)\n"
      }
    }
  },
  "types": {
    "akamai:config/config:config": {
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "accountKey": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "clientToken": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "maxBody": {
          "type": "integer"
        }
      },
      "type": "object",
      "required": [
        "accessToken",
        "clientSecret",
        "clientToken",
        "host"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/ClientlistListItem:ClientlistListItem": {
      "properties": {
        "description": {
          "type": "string"
        },
        "expirationDate": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "value"
      ]
    },
    "akamai:index/CloudletsApplicationLoadBalancerDataCenter:CloudletsApplicationLoadBalancerDataCenter": {
      "properties": {
        "city": {
          "type": "string"
        },
        "cloudServerHostHeaderOverride": {
          "type": "boolean"
        },
        "cloudService": {
          "type": "boolean"
        },
        "continent": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "latitude": {
          "type": "number"
        },
        "livenessHosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "longitude": {
          "type": "number"
        },
        "originId": {
          "type": "string"
        },
        "percent": {
          "type": "number"
        },
        "stateOrProvince": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "continent",
        "country",
        "latitude",
        "longitude",
        "originId",
        "percent"
      ]
    },
    "akamai:index/CloudletsApplicationLoadBalancerLivenessSettings:CloudletsApplicationLoadBalancerLivenessSettings": {
      "properties": {
        "additionalHeaders": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "hostHeader": {
          "type": "string"
        },
        "interval": {
          "type": "integer"
        },
        "path": {
          "type": "string"
        },
        "peerCertificateVerification": {
          "type": "boolean"
        },
        "port": {
          "type": "integer"
        },
        "protocol": {
          "type": "string"
        },
        "requestString": {
          "type": "string"
        },
        "responseString": {
          "type": "string"
        },
        "status3xxFailure": {
          "type": "boolean"
        },
        "status4xxFailure": {
          "type": "boolean"
        },
        "status5xxFailure": {
          "type": "boolean"
        },
        "timeout": {
          "type": "number"
        }
      },
      "type": "object",
      "required": [
        "path",
        "port",
        "protocol"
      ]
    },
    "akamai:index/CloudwrapperActivationTimeouts:CloudwrapperActivationTimeouts": {
      "properties": {
        "create": {
          "type": "string"
        },
        "update": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/CloudwrapperConfigurationLocation:CloudwrapperConfigurationLocation": {
      "properties": {
        "capacity": {
          "$ref": "#/types/akamai:index/CloudwrapperConfigurationLocationCapacity:CloudwrapperConfigurationLocationCapacity"
        },
        "comments": {
          "type": "string"
        },
        "trafficTypeId": {
          "type": "integer"
        }
      },
      "type": "object",
      "required": [
        "comments",
        "trafficTypeId"
      ]
    },
    "akamai:index/CloudwrapperConfigurationLocationCapacity:CloudwrapperConfigurationLocationCapacity": {
      "properties": {
        "unit": {
          "type": "string"
        },
        "value": {
          "type": "integer"
        }
      },
      "type": "object",
      "required": [
        "unit",
        "value"
      ]
    },
    "akamai:index/CloudwrapperConfigurationTimeouts:CloudwrapperConfigurationTimeouts": {
      "properties": {
        "delete": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/CpsDvEnrollmentAdminContact:CpsDvEnrollmentAdminContact": {
      "properties": {
        "addressLineOne": {
          "type": "string"
        },
        "addressLineTwo": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "addressLineOne",
        "city",
        "countryCode",
        "email",
        "firstName",
        "lastName",
        "organization",
        "phone",
        "postalCode",
        "region"
      ]
    },
    "akamai:index/CpsDvEnrollmentCsr:CpsDvEnrollmentCsr": {
      "properties": {
        "city": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "organizationalUnit": {
          "type": "string"
        },
        "preferredTrustChain": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "city",
        "countryCode",
        "organization",
        "organizationalUnit",
        "state"
      ]
    },
    "akamai:index/CpsDvEnrollmentDnsChallenge:CpsDvEnrollmentDnsChallenge": {
      "properties": {
        "domain": {
          "type": "string"
        },
        "fullPath": {
          "type": "string"
        },
        "responseBody": {
          "type": "string"
        }
      },
      "type": "object",
      "language": {
        "nodejs": {
          "requiredOutputs": [
            "domain",
            "fullPath",
            "responseBody"
          ]
        }
      }
    },
    "akamai:index/CpsDvEnrollmentHttpChallenge:CpsDvEnrollmentHttpChallenge": {
      "properties": {
        "domain": {
          "type": "string"
        },
        "fullPath": {
          "type": "string"
        },
        "responseBody": {
          "type": "string"
        }
      },
      "type": "object",
      "language": {
        "nodejs": {
          "requiredOutputs": [
            "domain",
            "fullPath",
            "responseBody"
          ]
        }
      }
    },
    "akamai:index/CpsDvEnrollmentNetworkConfiguration:CpsDvEnrollmentNetworkConfiguration": {
      "properties": {
        "clientMutualAuthentication": {
          "$ref": "#/types/akamai:index/CpsDvEnrollmentNetworkConfigurationClientMutualAuthentication:CpsDvEnrollmentNetworkConfigurationClientMutualAuthentication"
        },
        "cloneDnsNames": {
          "type": "boolean"
        },
        "disallowedTlsVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "geography": {
          "type": "string"
        },
        "mustHaveCiphers": {
          "type": "string"
        },
        "ocspStapling": {
          "type": "string"
        },
        "preferredCiphers": {
          "type": "string"
        },
        "quicEnabled": {
          "type": "boolean"
        }
      },
      "type": "object",
      "required": [
        "geography"
      ]
    },
    "akamai:index/CpsDvEnrollmentNetworkConfigurationClientMutualAuthentication:CpsDvEnrollmentNetworkConfigurationClientMutualAuthentication": {
      "properties": {
        "ocspEnabled": {
          "type": "boolean"
        },
        "sendCaListToClient": {
          "type": "boolean"
        },
        "setId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/CpsDvEnrollmentOrganization:CpsDvEnrollmentOrganization": {
      "properties": {
        "addressLineOne": {
          "type": "string"
        },
        "addressLineTwo": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "addressLineOne",
        "city",
        "countryCode",
        "name",
        "phone",
        "postalCode",
        "region"
      ]
    },
    "akamai:index/CpsDvEnrollmentTechContact:CpsDvEnrollmentTechContact": {
      "properties": {
        "addressLineOne": {
          "type": "string"
        },
        "addressLineTwo": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "addressLineOne",
        "city",
        "countryCode",
        "email",
        "firstName",
        "lastName",
        "organization",
        "phone",
        "postalCode",
        "region"
      ]
    },
    "akamai:index/CpsThirdPartyEnrollmentAdminContact:CpsThirdPartyEnrollmentAdminContact": {
      "properties": {
        "addressLineOne": {
          "type": "string"
        },
        "addressLineTwo": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "addressLineOne",
        "city",
        "countryCode",
        "email",
        "firstName",
        "lastName",
        "organization",
        "phone",
        "postalCode",
        "region"
      ]
    },
    "akamai:index/CpsThirdPartyEnrollmentCsr:CpsThirdPartyEnrollmentCsr": {
      "properties": {
        "city": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "organizationalUnit": {
          "type": "string"
        },
        "preferredTrustChain": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "city",
        "countryCode",
        "organization",
        "organizationalUnit",
        "state"
      ]
    },
    "akamai:index/CpsThirdPartyEnrollmentNetworkConfiguration:CpsThirdPartyEnrollmentNetworkConfiguration": {
      "properties": {
        "clientMutualAuthentication": {
          "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentNetworkConfigurationClientMutualAuthentication:CpsThirdPartyEnrollmentNetworkConfigurationClientMutualAuthentication"
        },
        "cloneDnsNames": {
          "type": "boolean"
        },
        "disallowedTlsVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "geography": {
          "type": "string"
        },
        "mustHaveCiphers": {
          "type": "string"
        },
        "ocspStapling": {
          "type": "string"
        },
        "preferredCiphers": {
          "type": "string"
        },
        "quicEnabled": {
          "type": "boolean"
        }
      },
      "type": "object",
      "required": [
        "geography"
      ]
    },
    "akamai:index/CpsThirdPartyEnrollmentNetworkConfigurationClientMutualAuthentication:CpsThirdPartyEnrollmentNetworkConfigurationClientMutualAuthentication": {
      "properties": {
        "ocspEnabled": {
          "type": "boolean"
        },
        "sendCaListToClient": {
          "type": "boolean"
        },
        "setId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/CpsThirdPartyEnrollmentOrganization:CpsThirdPartyEnrollmentOrganization": {
      "properties": {
        "addressLineOne": {
          "type": "string"
        },
        "addressLineTwo": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "addressLineOne",
        "city",
        "countryCode",
        "name",
        "phone",
        "postalCode",
        "region"
      ]
    },
    "akamai:index/CpsThirdPartyEnrollmentTechContact:CpsThirdPartyEnrollmentTechContact": {
      "properties": {
        "addressLineOne": {
          "type": "string"
        },
        "addressLineTwo": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "addressLineOne",
        "city",
        "countryCode",
        "email",
        "firstName",
        "lastName",
        "organization",
        "phone",
        "postalCode",
        "region"
      ]
    },
    "akamai:index/DatastreamAzureConnector:DatastreamAzureConnector": {
      "properties": {
        "accessKey": {
          "type": "string",
          "secret": true
        },
        "accountName": {
          "type": "string"
        },
        "compressLogs": {
          "type": "boolean"
        },
        "containerName": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "accessKey",
        "accountName",
        "containerName",
        "displayName",
        "path"
      ],
      "language": {
        "nodejs": {
          "requiredOutputs": [
            "accessKey",
            "accountName",
            "compressLogs",
            "containerName",
            "displayName",
            "path"
          ]
        }
      }
    },
    "akamai:index/DatastreamDatadogConnector:DatastreamDatadogConnector": {
      "properties": {
        "authToken": {
          "type": "string",
          "secret": true
        },
        "compressLogs": {
          "type": "boolean"
        },
        "displayName": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "tags": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "authToken",
        "displayName",
        "endpoint"
      ]
    },
    "akamai:index/DatastreamDeliveryConfiguration:DatastreamDeliveryConfiguration": {
      "properties": {
        "fieldDelimiter": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "frequency": {
          "$ref": "#/types/akamai:index/DatastreamDeliveryConfigurationFrequency:DatastreamDeliveryConfigurationFrequency"
        },
        "uploadFilePrefix": {
          "type": "string"
        },
        "uploadFileSuffix": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "format",
        "frequency"
      ]
    },
    "akamai:index/DatastreamDeliveryConfigurationFrequency:DatastreamDeliveryConfigurationFrequency": {
      "properties": {
        "intervalInSecs": {
          "type": "integer"
        }
      },
      "type": "object",
      "required": [
        "intervalInSecs"
      ]
    },
    "akamai:index/DatastreamElasticsearchConnector:DatastreamElasticsearchConnector": {
      "properties": {
        "caCert": {
          "type": "string",
          "secret": true
        },
        "clientCert": {
          "type": "string",
          "secret": true
        },
        "clientKey": {
          "type": "string",
          "secret": true
        },
        "contentType": {
          "type": "string"
        },
        "customHeaderName": {
          "type": "string"
        },
        "customHeaderValue": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "indexName": {
          "type": "string",
          "secret": true
        },
        "mTls": {
          "type": "boolean"
        },
        "password": {
          "type": "string",
          "secret": true
        },
        "tlsHostname": {
          "type": "string"
        },
        "userName": {
          "type": "string",
          "secret": true
        }
      },
      "type": "object",
      "required": [
        "displayName",
        "endpoint",
        "indexName",
        "password",
        "userName"
      ],
      "language": {
        "nodejs": {
          "requiredOutputs": [
            "displayName",
            "endpoint",
            "indexName",
            "mTls",
            "password",
            "userName"
          ]
        }
      }
    },
    "akamai:index/DatastreamGcsConnector:DatastreamGcsConnector": {
      "properties": {
        "bucket": {
          "type": "string"
        },
        "compressLogs": {
          "type": "boolean"
        },
        "displayName": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "privateKey": {
          "type": "string",
          "secret": true
        },
        "projectId": {
          "type": "string"
        },
        "serviceAccountName": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "bucket",
        "displayName",
        "privateKey",
        "projectId",
        "serviceAccountName"
      ],
      "language": {
        "nodejs": {
          "requiredOutputs": [
            "bucket",
            "compressLogs",
            "displayName",
            "privateKey",
            "projectId",
            "serviceAccountName"
          ]
        }
      }
    },
    "akamai:index/DatastreamHttpsConnector:DatastreamHttpsConnector": {
      "properties": {
        "authenticationType": {
          "type": "string"
        },
        "caCert": {
          "type": "string",
          "secret": true
        },
        "clientCert": {
          "type": "string",
          "secret": true
        },
        "clientKey": {
          "type": "string",
          "secret": true
        },
        "compressLogs": {
          "type": "boolean"
        },
        "contentType": {
          "type": "string"
        },
        "customHeaderName": {
          "type": "string"
        },
        "customHeaderValue": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "mTls": {
          "type": "boolean"
        },
        "password": {
          "type": "string",
          "secret": true
        },
        "tlsHostname": {
          "type": "string"
        },
        "userName": {
          "type": "string",
          "secret": true
        }
      },
      "type": "object",
      "required": [
        "authenticationType",
        "displayName",
        "endpoint"
      ],
      "language": {
        "nodejs": {
          "requiredOutputs": [
            "authenticationType",
            "displayName",
            "endpoint",
            "mTls"
          ]
        }
      }
    },
    "akamai:index/DatastreamLogglyConnector:DatastreamLogglyConnector": {
      "properties": {
        "authToken": {
          "type": "string",
          "secret": true
        },
        "contentType": {
          "type": "string"
        },
        "customHeaderName": {
          "type": "string"
        },
        "customHeaderValue": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "tags": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "authToken",
        "displayName",
        "endpoint"
      ]
    },
    "akamai:index/DatastreamNewRelicConnector:DatastreamNewRelicConnector": {
      "properties": {
        "authToken": {
          "type": "string",
          "secret": true
        },
        "contentType": {
          "type": "string"
        },
        "customHeaderName": {
          "type": "string"
        },
        "customHeaderValue": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "authToken",
        "displayName",
        "endpoint"
      ]
    },
    "akamai:index/DatastreamOracleConnector:DatastreamOracleConnector": {
      "properties": {
        "accessKey": {
          "type": "string",
          "secret": true
        },
        "bucket": {
          "type": "string"
        },
        "compressLogs": {
          "type": "boolean"
        },
        "displayName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "secretAccessKey": {
          "type": "string",
          "secret": true
        }
      },
      "type": "object",
      "required": [
        "accessKey",
        "bucket",
        "displayName",
        "namespace",
        "path",
        "region",
        "secretAccessKey"
      ],
      "language": {
        "nodejs": {
          "requiredOutputs": [
            "accessKey",
            "bucket",
            "compressLogs",
            "displayName",
            "namespace",
            "path",
            "region",
            "secretAccessKey"
          ]
        }
      }
    },
    "akamai:index/DatastreamS3Connector:DatastreamS3Connector": {
      "properties": {
        "accessKey": {
          "type": "string",
          "secret": true
        },
        "bucket": {
          "type": "string"
        },
        "compressLogs": {
          "type": "boolean"
        },
        "displayName": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "secretAccessKey": {
          "type": "string",
          "secret": true
        }
      },
      "type": "object",
      "required": [
        "accessKey",
        "bucket",
        "displayName",
        "path",
        "region",
        "secretAccessKey"
      ],
      "language": {
        "nodejs": {
          "requiredOutputs": [
            "accessKey",
            "bucket",
            "compressLogs",
            "displayName",
            "path",
            "region",
            "secretAccessKey"
          ]
        }
      }
    },
    "akamai:index/DatastreamSplunkConnector:DatastreamSplunkConnector": {
      "properties": {
        "caCert": {
          "type": "string",
          "secret": true
        },
        "clientCert": {
          "type": "string",
          "secret": true
        },
        "clientKey": {
          "type": "string",
          "secret": true
        },
        "compressLogs": {
          "type": "boolean"
        },
        "customHeaderName": {
          "type": "string"
        },
        "customHeaderValue": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "eventCollectorToken": {
          "type": "string",
          "secret": true
        },
        "mTls": {
          "type": "boolean"
        },
        "tlsHostname": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "displayName",
        "endpoint",
        "eventCollectorToken"
      ],
      "language": {
        "nodejs": {
          "requiredOutputs": [
            "displayName",
            "endpoint",
            "eventCollectorToken",
            "mTls"
          ]
        }
      }
    },
    "akamai:index/DatastreamSumologicConnector:DatastreamSumologicConnector": {
      "properties": {
        "collectorCode": {
          "type": "string",
          "secret": true
        },
        "compressLogs": {
          "type": "boolean"
        },
        "contentType": {
          "type": "string"
        },
        "customHeaderName": {
          "type": "string"
        },
        "customHeaderValue": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "collectorCode",
        "displayName",
        "endpoint"
      ]
    },
    "akamai:index/DnsZoneTsigKey:DnsZoneTsigKey": {
      "properties": {
        "algorithm": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "secret": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "algorithm",
        "name",
        "secret"
      ]
    },
    "akamai:index/EdgeKvInitialData:EdgeKvInitialData": {
      "properties": {
        "group": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "key",
        "value"
      ]
    },
    "akamai:index/GtmAsmapAssignment:GtmAsmapAssignment": {
      "properties": {
        "asNumbers": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "datacenterId": {
          "type": "integer"
        },
        "nickname": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "asNumbers",
        "datacenterId",
        "nickname"
      ]
    },
    "akamai:index/GtmAsmapDefaultDatacenter:GtmAsmapDefaultDatacenter": {
      "properties": {
        "datacenterId": {
          "type": "integer"
        },
        "nickname": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "datacenterId"
      ]
    },
    "akamai:index/GtmCidrmapAssignment:GtmCidrmapAssignment": {
      "properties": {
        "blocks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "datacenterId": {
          "type": "integer"
        },
        "nickname": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "datacenterId",
        "nickname"
      ]
    },
    "akamai:index/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter": {
      "properties": {
        "datacenterId": {
          "type": "integer"
        },
        "nickname": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "datacenterId"
      ]
    },
    "akamai:index/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject": {
      "properties": {
        "loadObject": {
          "type": "string"
        },
        "loadObjectPort": {
          "type": "integer"
        },
        "loadServers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/GtmGeomapAssignment:GtmGeomapAssignment": {
      "properties": {
        "countries": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "datacenterId": {
          "type": "integer"
        },
        "nickname": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "datacenterId",
        "nickname"
      ]
    },
    "akamai:index/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter": {
      "properties": {
        "datacenterId": {
          "type": "integer"
        },
        "nickname": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "datacenterId"
      ]
    },
    "akamai:index/GtmPropertyLivenessTest:GtmPropertyLivenessTest": {
      "properties": {
        "answersRequired": {
          "type": "boolean"
        },
        "disableNonstandardPortWarning": {
          "type": "boolean"
        },
        "disabled": {
          "type": "boolean"
        },
        "errorPenalty": {
          "type": "number"
        },
        "httpError3xx": {
          "type": "boolean"
        },
        "httpError4xx": {
          "type": "boolean"
        },
        "httpError5xx": {
          "type": "boolean"
        },
        "httpHeaders": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/GtmPropertyLivenessTestHttpHeader:GtmPropertyLivenessTestHttpHeader"
          }
        },
        "name": {
          "type": "string"
        },
        "peerCertificateVerification": {
          "type": "boolean"
        },
        "recursionRequested": {
          "type": "boolean"
        },
        "requestString": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "responseString": {
          "type": "string"
        },
        "sslClientCertificate": {
          "type": "string"
        },
        "sslClientPrivateKey": {
          "type": "string"
        },
        "testInterval": {
          "type": "integer"
        },
        "testObject": {
          "type": "string"
        },
        "testObjectPassword": {
          "type": "string"
        },
        "testObjectPort": {
          "type": "integer"
        },
        "testObjectProtocol": {
          "type": "string"
        },
        "testObjectUsername": {
          "type": "string"
        },
        "testTimeout": {
          "type": "number"
        },
        "timeoutPenalty": {
          "type": "number"
        }
      },
      "type": "object",
      "required": [
        "name",
        "testInterval",
        "testObjectProtocol",
        "testTimeout"
      ]
    },
    "akamai:index/GtmPropertyLivenessTestHttpHeader:GtmPropertyLivenessTestHttpHeader": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet": {
      "properties": {
        "rdatas": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ttl": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget": {
      "properties": {
        "datacenterId": {
          "type": "integer"
        },
        "enabled": {
          "type": "boolean"
        },
        "handoutCname": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "deprecationMessage": "The attribute `name` has been deprecated. Any reads or writes on this attribute are ignored"
        },
        "servers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "weight": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "akamai:index/GtmResourceResourceInstance:GtmResourceResourceInstance": {
      "properties": {
        "datacenterId": {
          "type": "integer"
        },
        "loadObject": {
          "type": "string"
        },
        "loadObjectPort": {
          "type": "integer"
        },
        "loadServers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "useDefaultLoadObject": {
          "type": "boolean"
        }
      },
      "type": "object",
      "required": [
        "datacenterId"
      ]
    },
    "akamai:index/PropertyActivationComplianceRecord:PropertyActivationComplianceRecord": {
      "properties": {
        "noncomplianceReasonEmergency": {
          "$ref": "#/types/akamai:index/PropertyActivationComplianceRecordNoncomplianceReasonEmergency:PropertyActivationComplianceRecordNoncomplianceReasonEmergency"
        },
        "noncomplianceReasonNoProductionTraffic": {
          "$ref": "#/types/akamai:index/PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTraffic:PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTraffic"
        },
        "noncomplianceReasonNone": {
          "$ref": "#/types/akamai:index/PropertyActivationComplianceRecordNoncomplianceReasonNone:PropertyActivationComplianceRecordNoncomplianceReasonNone"
        },
        "noncomplianceReasonOther": {
          "$ref": "#/types/akamai:index/PropertyActivationComplianceRecordNoncomplianceReasonOther:PropertyActivationComplianceRecordNoncomplianceReasonOther"
        }
      },
      "type": "object"
    },
    "akamai:index/PropertyActivationComplianceRecordNoncomplianceReasonEmergency:PropertyActivationComplianceRecordNoncomplianceReasonEmergency": {
      "properties": {
        "ticketId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTraffic:PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTraffic": {
      "properties": {
        "ticketId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/PropertyActivationComplianceRecordNoncomplianceReasonNone:PropertyActivationComplianceRecordNoncomplianceReasonNone": {
      "properties": {
        "customerEmail": {
          "type": "string"
        },
        "peerReviewedBy": {
          "type": "string"
        },
        "ticketId": {
          "type": "string"
        },
        "unitTested": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "akamai:index/PropertyActivationComplianceRecordNoncomplianceReasonOther:PropertyActivationComplianceRecordNoncomplianceReasonOther": {
      "properties": {
        "otherNoncomplianceReason": {
          "type": "string"
        },
        "ticketId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/PropertyActivationRuleError:PropertyActivationRuleError": {
      "properties": {
        "behaviorName": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        },
        "errorLocation": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "statusCode": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/PropertyHostname:PropertyHostname": {
      "properties": {
        "certProvisioningType": {
          "type": "string"
        },
        "certStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/PropertyHostnameCertStatus:PropertyHostnameCertStatus"
          }
        },
        "cnameFrom": {
          "type": "string"
        },
        "cnameTo": {
          "type": "string"
        },
        "cnameType": {
          "type": "string"
        },
        "edgeHostnameId": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "certProvisioningType",
        "cnameFrom",
        "cnameTo"
      ],
      "language": {
        "nodejs": {
          "requiredOutputs": [
            "certProvisioningType",
            "certStatuses",
            "cnameFrom",
            "cnameTo",
            "cnameType",
            "edgeHostnameId"
          ]
        }
      }
    },
    "akamai:index/PropertyHostnameCertStatus:PropertyHostnameCertStatus": {
      "properties": {
        "hostname": {
          "type": "string"
        },
        "productionStatus": {
          "type": "string"
        },
        "stagingStatus": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      },
      "type": "object",
      "language": {
        "nodejs": {
          "requiredOutputs": [
            "hostname",
            "productionStatus",
            "stagingStatus",
            "target"
          ]
        }
      }
    },
    "akamai:index/PropertyIncludeActivationComplianceRecord:PropertyIncludeActivationComplianceRecord": {
      "properties": {
        "noncomplianceReasonEmergency": {
          "$ref": "#/types/akamai:index/PropertyIncludeActivationComplianceRecordNoncomplianceReasonEmergency:PropertyIncludeActivationComplianceRecordNoncomplianceReasonEmergency"
        },
        "noncomplianceReasonNoProductionTraffic": {
          "$ref": "#/types/akamai:index/PropertyIncludeActivationComplianceRecordNoncomplianceReasonNoProductionTraffic:PropertyIncludeActivationComplianceRecordNoncomplianceReasonNoProductionTraffic"
        },
        "noncomplianceReasonNone": {
          "$ref": "#/types/akamai:index/PropertyIncludeActivationComplianceRecordNoncomplianceReasonNone:PropertyIncludeActivationComplianceRecordNoncomplianceReasonNone"
        },
        "noncomplianceReasonOther": {
          "$ref": "#/types/akamai:index/PropertyIncludeActivationComplianceRecordNoncomplianceReasonOther:PropertyIncludeActivationComplianceRecordNoncomplianceReasonOther"
        }
      },
      "type": "object"
    },
    "akamai:index/PropertyIncludeActivationComplianceRecordNoncomplianceReasonEmergency:PropertyIncludeActivationComplianceRecordNoncomplianceReasonEmergency": {
      "properties": {
        "ticketId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/PropertyIncludeActivationComplianceRecordNoncomplianceReasonNoProductionTraffic:PropertyIncludeActivationComplianceRecordNoncomplianceReasonNoProductionTraffic": {
      "properties": {
        "ticketId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/PropertyIncludeActivationComplianceRecordNoncomplianceReasonNone:PropertyIncludeActivationComplianceRecordNoncomplianceReasonNone": {
      "properties": {
        "customerEmail": {
          "type": "string"
        },
        "peerReviewedBy": {
          "type": "string"
        },
        "ticketId": {
          "type": "string"
        },
        "unitTested": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "akamai:index/PropertyIncludeActivationComplianceRecordNoncomplianceReasonOther:PropertyIncludeActivationComplianceRecordNoncomplianceReasonOther": {
      "properties": {
        "otherNoncomplianceReason": {
          "type": "string"
        },
        "ticketId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/PropertyRuleError:PropertyRuleError": {
      "properties": {
        "behaviorName": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        },
        "errorLocation": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "statusCode": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/ProviderConfig:ProviderConfig": {
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "accountKey": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "clientToken": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "maxBody": {
          "type": "integer"
        }
      },
      "type": "object",
      "required": [
        "accessToken",
        "clientSecret",
        "clientToken",
        "host"
      ],
      "language": {
        "nodejs": {
          "requiredOutputs": []
        }
      }
    },
    "akamai:index/getCPSEnrollmentAdminContact:getCPSEnrollmentAdminContact": {
      "properties": {
        "addressLineOne": {
          "type": "string"
        },
        "addressLineTwo": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "addressLineOne",
        "city",
        "countryCode",
        "email",
        "firstName",
        "lastName",
        "organization",
        "phone",
        "postalCode",
        "region"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCPSEnrollmentCsr:getCPSEnrollmentCsr": {
      "properties": {
        "city": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "organizationalUnit": {
          "type": "string"
        },
        "preferredTrustChain": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "city",
        "countryCode",
        "organization",
        "organizationalUnit",
        "preferredTrustChain",
        "state"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCPSEnrollmentDnsChallenge:getCPSEnrollmentDnsChallenge": {
      "properties": {
        "domain": {
          "type": "string"
        },
        "fullPath": {
          "type": "string"
        },
        "responseBody": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "domain",
        "fullPath",
        "responseBody"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCPSEnrollmentHttpChallenge:getCPSEnrollmentHttpChallenge": {
      "properties": {
        "domain": {
          "type": "string"
        },
        "fullPath": {
          "type": "string"
        },
        "responseBody": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "domain",
        "fullPath",
        "responseBody"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCPSEnrollmentNetworkConfiguration:getCPSEnrollmentNetworkConfiguration": {
      "properties": {
        "clientMutualAuthentications": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCPSEnrollmentNetworkConfigurationClientMutualAuthentication:getCPSEnrollmentNetworkConfigurationClientMutualAuthentication"
          }
        },
        "cloneDnsNames": {
          "type": "boolean"
        },
        "disallowedTlsVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "geography": {
          "type": "string"
        },
        "mustHaveCiphers": {
          "type": "string"
        },
        "ocspStapling": {
          "type": "string"
        },
        "preferredCiphers": {
          "type": "string"
        },
        "quicEnabled": {
          "type": "boolean"
        }
      },
      "type": "object",
      "required": [
        "clientMutualAuthentications",
        "cloneDnsNames",
        "disallowedTlsVersions",
        "geography",
        "mustHaveCiphers",
        "ocspStapling",
        "preferredCiphers",
        "quicEnabled"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCPSEnrollmentNetworkConfigurationClientMutualAuthentication:getCPSEnrollmentNetworkConfigurationClientMutualAuthentication": {
      "properties": {
        "ocspEnabled": {
          "type": "boolean"
        },
        "sendCaListToClient": {
          "type": "boolean"
        },
        "setId": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "ocspEnabled",
        "sendCaListToClient",
        "setId"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCPSEnrollmentOrganization:getCPSEnrollmentOrganization": {
      "properties": {
        "addressLineOne": {
          "type": "string"
        },
        "addressLineTwo": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "addressLineOne",
        "addressLineTwo",
        "city",
        "countryCode",
        "name",
        "phone",
        "postalCode",
        "region"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCPSEnrollmentTechContact:getCPSEnrollmentTechContact": {
      "properties": {
        "addressLineOne": {
          "type": "string"
        },
        "addressLineTwo": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "addressLineOne",
        "city",
        "countryCode",
        "email",
        "firstName",
        "lastName",
        "organization",
        "phone",
        "postalCode",
        "region"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCPSEnrollmentsEnrollment:getCPSEnrollmentsEnrollment": {
      "properties": {
        "adminContacts": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCPSEnrollmentsEnrollmentAdminContact:getCPSEnrollmentsEnrollmentAdminContact"
          }
        },
        "certificateChainType": {
          "type": "string"
        },
        "certificateType": {
          "type": "string"
        },
        "commonName": {
          "type": "string"
        },
        "csrs": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCPSEnrollmentsEnrollmentCsr:getCPSEnrollmentsEnrollmentCsr"
          }
        },
        "enableMultiStackedCertificates": {
          "type": "boolean"
        },
        "enrollmentId": {
          "type": "integer"
        },
        "networkConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCPSEnrollmentsEnrollmentNetworkConfiguration:getCPSEnrollmentsEnrollmentNetworkConfiguration"
          }
        },
        "organizations": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCPSEnrollmentsEnrollmentOrganization:getCPSEnrollmentsEnrollmentOrganization"
          }
        },
        "pendingChanges": {
          "type": "boolean"
        },
        "registrationAuthority": {
          "type": "string"
        },
        "sans": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "secureNetwork": {
          "type": "string"
        },
        "signatureAlgorithm": {
          "type": "string"
        },
        "sniOnly": {
          "type": "boolean"
        },
        "techContacts": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCPSEnrollmentsEnrollmentTechContact:getCPSEnrollmentsEnrollmentTechContact"
          }
        },
        "validationType": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "adminContacts",
        "certificateChainType",
        "certificateType",
        "commonName",
        "csrs",
        "enableMultiStackedCertificates",
        "enrollmentId",
        "networkConfigurations",
        "organizations",
        "pendingChanges",
        "registrationAuthority",
        "sans",
        "secureNetwork",
        "signatureAlgorithm",
        "sniOnly",
        "techContacts",
        "validationType"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCPSEnrollmentsEnrollmentAdminContact:getCPSEnrollmentsEnrollmentAdminContact": {
      "properties": {
        "addressLineOne": {
          "type": "string"
        },
        "addressLineTwo": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "addressLineOne",
        "city",
        "countryCode",
        "email",
        "firstName",
        "lastName",
        "organization",
        "phone",
        "postalCode",
        "region"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCPSEnrollmentsEnrollmentCsr:getCPSEnrollmentsEnrollmentCsr": {
      "properties": {
        "city": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "organizationalUnit": {
          "type": "string"
        },
        "preferredTrustChain": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "city",
        "countryCode",
        "organization",
        "organizationalUnit",
        "preferredTrustChain",
        "state"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCPSEnrollmentsEnrollmentNetworkConfiguration:getCPSEnrollmentsEnrollmentNetworkConfiguration": {
      "properties": {
        "clientMutualAuthentications": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCPSEnrollmentsEnrollmentNetworkConfigurationClientMutualAuthentication:getCPSEnrollmentsEnrollmentNetworkConfigurationClientMutualAuthentication"
          }
        },
        "cloneDnsNames": {
          "type": "boolean"
        },
        "disallowedTlsVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "geography": {
          "type": "string"
        },
        "mustHaveCiphers": {
          "type": "string"
        },
        "ocspStapling": {
          "type": "string"
        },
        "preferredCiphers": {
          "type": "string"
        },
        "quicEnabled": {
          "type": "boolean"
        }
      },
      "type": "object",
      "required": [
        "clientMutualAuthentications",
        "cloneDnsNames",
        "disallowedTlsVersions",
        "geography",
        "mustHaveCiphers",
        "ocspStapling",
        "preferredCiphers",
        "quicEnabled"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCPSEnrollmentsEnrollmentNetworkConfigurationClientMutualAuthentication:getCPSEnrollmentsEnrollmentNetworkConfigurationClientMutualAuthentication": {
      "properties": {
        "ocspEnabled": {
          "type": "boolean"
        },
        "sendCaListToClient": {
          "type": "boolean"
        },
        "setId": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "ocspEnabled",
        "sendCaListToClient",
        "setId"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCPSEnrollmentsEnrollmentOrganization:getCPSEnrollmentsEnrollmentOrganization": {
      "properties": {
        "addressLineOne": {
          "type": "string"
        },
        "addressLineTwo": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "addressLineOne",
        "addressLineTwo",
        "city",
        "countryCode",
        "name",
        "phone",
        "postalCode",
        "region"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCPSEnrollmentsEnrollmentTechContact:getCPSEnrollmentsEnrollmentTechContact": {
      "properties": {
        "addressLineOne": {
          "type": "string"
        },
        "addressLineTwo": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "addressLineOne",
        "city",
        "countryCode",
        "email",
        "firstName",
        "lastName",
        "organization",
        "phone",
        "postalCode",
        "region"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getClientlistListsList:getClientlistListsList": {
      "properties": {
        "createDate": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "deprecated": {
          "type": "boolean"
        },
        "itemsCount": {
          "type": "integer"
        },
        "listId": {
          "type": "string"
        },
        "listType": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "productionActivationStatus": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "shared": {
          "type": "boolean"
        },
        "stagingActivationStatus": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "string"
        },
        "updateDate": {
          "type": "string"
        },
        "updatedBy": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        }
      },
      "type": "object",
      "required": [
        "createDate",
        "createdBy",
        "deprecated",
        "itemsCount",
        "listId",
        "listType",
        "notes",
        "productionActivationStatus",
        "readOnly",
        "shared",
        "stagingActivationStatus",
        "tags",
        "updateDate",
        "updatedBy",
        "version"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCloudletsApiPrioritizationMatchRuleMatchRule:getCloudletsApiPrioritizationMatchRuleMatchRule": {
      "properties": {
        "disabled": {
          "type": "boolean"
        },
        "end": {
          "type": "integer"
        },
        "matchUrl": {
          "type": "string"
        },
        "matches": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCloudletsApiPrioritizationMatchRuleMatchRuleMatch:getCloudletsApiPrioritizationMatchRuleMatchRuleMatch"
          }
        },
        "name": {
          "type": "string"
        },
        "passThroughPercent": {
          "type": "number"
        },
        "start": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "passThroughPercent",
        "type"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": [
            "passThroughPercent"
          ]
        }
      }
    },
    "akamai:index/getCloudletsApiPrioritizationMatchRuleMatchRuleMatch:getCloudletsApiPrioritizationMatchRuleMatchRuleMatch": {
      "properties": {
        "caseSensitive": {
          "type": "boolean"
        },
        "checkIps": {
          "type": "string"
        },
        "matchOperator": {
          "type": "string"
        },
        "matchType": {
          "type": "string"
        },
        "matchValue": {
          "type": "string"
        },
        "negate": {
          "type": "boolean"
        },
        "objectMatchValues": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCloudletsApiPrioritizationMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsApiPrioritizationMatchRuleMatchRuleMatchObjectMatchValue"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getCloudletsApiPrioritizationMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsApiPrioritizationMatchRuleMatchRuleMatchObjectMatchValue": {
      "properties": {
        "name": {
          "type": "string"
        },
        "nameCaseSensitive": {
          "type": "boolean"
        },
        "nameHasWildcard": {
          "type": "boolean"
        },
        "options": {
          "$ref": "#/types/akamai:index/getCloudletsApiPrioritizationMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsApiPrioritizationMatchRuleMatchRuleMatchObjectMatchValueOptions"
        },
        "type": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "required": [
        "type"
      ]
    },
    "akamai:index/getCloudletsApiPrioritizationMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsApiPrioritizationMatchRuleMatchRuleMatchObjectMatchValueOptions": {
      "properties": {
        "valueCaseSensitive": {
          "type": "boolean"
        },
        "valueEscaped": {
          "type": "boolean"
        },
        "valueHasWildcard": {
          "type": "boolean"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getCloudletsApplicationLoadBalancerDataCenter:getCloudletsApplicationLoadBalancerDataCenter": {
      "properties": {
        "city": {
          "type": "string"
        },
        "cloudServerHostHeaderOverride": {
          "type": "boolean"
        },
        "cloudService": {
          "type": "boolean"
        },
        "continent": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "latitude": {
          "type": "number"
        },
        "livenessHosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "longitude": {
          "type": "number"
        },
        "originId": {
          "type": "string"
        },
        "percent": {
          "type": "number"
        },
        "stateOrProvince": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "city",
        "cloudServerHostHeaderOverride",
        "cloudService",
        "continent",
        "country",
        "hostname",
        "latitude",
        "livenessHosts",
        "longitude",
        "originId",
        "percent",
        "stateOrProvince"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCloudletsApplicationLoadBalancerLivenessSetting:getCloudletsApplicationLoadBalancerLivenessSetting": {
      "properties": {
        "additionalHeaders": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "hostHeader": {
          "type": "string"
        },
        "interval": {
          "type": "integer"
        },
        "path": {
          "type": "string"
        },
        "peerCertificateVerification": {
          "type": "boolean"
        },
        "port": {
          "type": "integer"
        },
        "protocol": {
          "type": "string"
        },
        "requestString": {
          "type": "string"
        },
        "responseString": {
          "type": "string"
        },
        "status3xxFailure": {
          "type": "boolean"
        },
        "status4xxFailure": {
          "type": "boolean"
        },
        "status5xxFailure": {
          "type": "boolean"
        },
        "timeout": {
          "type": "number"
        }
      },
      "type": "object",
      "required": [
        "additionalHeaders",
        "hostHeader",
        "interval",
        "path",
        "peerCertificateVerification",
        "port",
        "protocol",
        "requestString",
        "responseString",
        "status3xxFailure",
        "status4xxFailure",
        "status5xxFailure",
        "timeout"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCloudletsApplicationLoadBalancerMatchRuleMatchRule:getCloudletsApplicationLoadBalancerMatchRuleMatchRule": {
      "properties": {
        "disabled": {
          "type": "boolean"
        },
        "end": {
          "type": "integer"
        },
        "forwardSettings": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCloudletsApplicationLoadBalancerMatchRuleMatchRuleForwardSetting:getCloudletsApplicationLoadBalancerMatchRuleMatchRuleForwardSetting"
          }
        },
        "id": {
          "type": "integer"
        },
        "matchUrl": {
          "type": "string"
        },
        "matches": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCloudletsApplicationLoadBalancerMatchRuleMatchRuleMatch:getCloudletsApplicationLoadBalancerMatchRuleMatchRuleMatch"
          }
        },
        "matchesAlways": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "start": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "forwardSettings",
        "type"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": [
            "forwardSettings"
          ]
        }
      }
    },
    "akamai:index/getCloudletsApplicationLoadBalancerMatchRuleMatchRuleForwardSetting:getCloudletsApplicationLoadBalancerMatchRuleMatchRuleForwardSetting": {
      "properties": {
        "originId": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "originId"
      ]
    },
    "akamai:index/getCloudletsApplicationLoadBalancerMatchRuleMatchRuleMatch:getCloudletsApplicationLoadBalancerMatchRuleMatchRuleMatch": {
      "properties": {
        "caseSensitive": {
          "type": "boolean"
        },
        "checkIps": {
          "type": "string"
        },
        "matchOperator": {
          "type": "string"
        },
        "matchType": {
          "type": "string"
        },
        "matchValue": {
          "type": "string"
        },
        "negate": {
          "type": "boolean"
        },
        "objectMatchValues": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCloudletsApplicationLoadBalancerMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsApplicationLoadBalancerMatchRuleMatchRuleMatchObjectMatchValue"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getCloudletsApplicationLoadBalancerMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsApplicationLoadBalancerMatchRuleMatchRuleMatchObjectMatchValue": {
      "properties": {
        "name": {
          "type": "string"
        },
        "nameCaseSensitive": {
          "type": "boolean"
        },
        "nameHasWildcard": {
          "type": "boolean"
        },
        "options": {
          "$ref": "#/types/akamai:index/getCloudletsApplicationLoadBalancerMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsApplicationLoadBalancerMatchRuleMatchRuleMatchObjectMatchValueOptions"
        },
        "type": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "required": [
        "type"
      ]
    },
    "akamai:index/getCloudletsApplicationLoadBalancerMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsApplicationLoadBalancerMatchRuleMatchRuleMatchObjectMatchValueOptions": {
      "properties": {
        "valueCaseSensitive": {
          "type": "boolean"
        },
        "valueEscaped": {
          "type": "boolean"
        },
        "valueHasWildcard": {
          "type": "boolean"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getCloudletsAudienceSegmentationMatchRuleMatchRule:getCloudletsAudienceSegmentationMatchRuleMatchRule": {
      "properties": {
        "disabled": {
          "type": "boolean"
        },
        "end": {
          "type": "integer"
        },
        "forwardSettings": {
          "$ref": "#/types/akamai:index/getCloudletsAudienceSegmentationMatchRuleMatchRuleForwardSettings:getCloudletsAudienceSegmentationMatchRuleMatchRuleForwardSettings"
        },
        "matchUrl": {
          "type": "string"
        },
        "matches": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCloudletsAudienceSegmentationMatchRuleMatchRuleMatch:getCloudletsAudienceSegmentationMatchRuleMatchRuleMatch"
          }
        },
        "name": {
          "type": "string"
        },
        "start": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "forwardSettings",
        "type"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": [
            "forwardSettings"
          ]
        }
      }
    },
    "akamai:index/getCloudletsAudienceSegmentationMatchRuleMatchRuleForwardSettings:getCloudletsAudienceSegmentationMatchRuleMatchRuleForwardSettings": {
      "properties": {
        "originId": {
          "type": "string"
        },
        "pathAndQs": {
          "type": "string"
        },
        "useIncomingQueryString": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "akamai:index/getCloudletsAudienceSegmentationMatchRuleMatchRuleMatch:getCloudletsAudienceSegmentationMatchRuleMatchRuleMatch": {
      "properties": {
        "caseSensitive": {
          "type": "boolean"
        },
        "checkIps": {
          "type": "string"
        },
        "matchOperator": {
          "type": "string"
        },
        "matchType": {
          "type": "string"
        },
        "matchValue": {
          "type": "string"
        },
        "negate": {
          "type": "boolean"
        },
        "objectMatchValues": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCloudletsAudienceSegmentationMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsAudienceSegmentationMatchRuleMatchRuleMatchObjectMatchValue"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getCloudletsAudienceSegmentationMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsAudienceSegmentationMatchRuleMatchRuleMatchObjectMatchValue": {
      "properties": {
        "name": {
          "type": "string"
        },
        "nameCaseSensitive": {
          "type": "boolean"
        },
        "nameHasWildcard": {
          "type": "boolean"
        },
        "options": {
          "$ref": "#/types/akamai:index/getCloudletsAudienceSegmentationMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsAudienceSegmentationMatchRuleMatchRuleMatchObjectMatchValueOptions"
        },
        "type": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "required": [
        "type"
      ]
    },
    "akamai:index/getCloudletsAudienceSegmentationMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsAudienceSegmentationMatchRuleMatchRuleMatchObjectMatchValueOptions": {
      "properties": {
        "valueCaseSensitive": {
          "type": "boolean"
        },
        "valueEscaped": {
          "type": "boolean"
        },
        "valueHasWildcard": {
          "type": "boolean"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getCloudletsEdgeRedirectorMatchRuleMatchRule:getCloudletsEdgeRedirectorMatchRuleMatchRule": {
      "properties": {
        "disabled": {
          "type": "boolean"
        },
        "end": {
          "type": "integer"
        },
        "matchUrl": {
          "type": "string"
        },
        "matches": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCloudletsEdgeRedirectorMatchRuleMatchRuleMatch:getCloudletsEdgeRedirectorMatchRuleMatchRuleMatch"
          }
        },
        "name": {
          "type": "string"
        },
        "redirectUrl": {
          "type": "string"
        },
        "start": {
          "type": "integer"
        },
        "statusCode": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "useIncomingQueryString": {
          "type": "boolean"
        },
        "useRelativeUrl": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "redirectUrl",
        "statusCode",
        "type"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": [
            "redirectUrl",
            "statusCode"
          ]
        }
      }
    },
    "akamai:index/getCloudletsEdgeRedirectorMatchRuleMatchRuleMatch:getCloudletsEdgeRedirectorMatchRuleMatchRuleMatch": {
      "properties": {
        "caseSensitive": {
          "type": "boolean"
        },
        "checkIps": {
          "type": "string"
        },
        "matchOperator": {
          "type": "string"
        },
        "matchType": {
          "type": "string"
        },
        "matchValue": {
          "type": "string"
        },
        "negate": {
          "type": "boolean"
        },
        "objectMatchValues": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCloudletsEdgeRedirectorMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsEdgeRedirectorMatchRuleMatchRuleMatchObjectMatchValue"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getCloudletsEdgeRedirectorMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsEdgeRedirectorMatchRuleMatchRuleMatchObjectMatchValue": {
      "properties": {
        "name": {
          "type": "string"
        },
        "nameCaseSensitive": {
          "type": "boolean"
        },
        "nameHasWildcard": {
          "type": "boolean"
        },
        "options": {
          "$ref": "#/types/akamai:index/getCloudletsEdgeRedirectorMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsEdgeRedirectorMatchRuleMatchRuleMatchObjectMatchValueOptions"
        },
        "type": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "required": [
        "type"
      ]
    },
    "akamai:index/getCloudletsEdgeRedirectorMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsEdgeRedirectorMatchRuleMatchRuleMatchObjectMatchValueOptions": {
      "properties": {
        "valueCaseSensitive": {
          "type": "boolean"
        },
        "valueEscaped": {
          "type": "boolean"
        },
        "valueHasWildcard": {
          "type": "boolean"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getCloudletsForwardRewriteMatchRuleMatchRule:getCloudletsForwardRewriteMatchRuleMatchRule": {
      "properties": {
        "disabled": {
          "type": "boolean"
        },
        "end": {
          "type": "integer"
        },
        "forwardSettings": {
          "$ref": "#/types/akamai:index/getCloudletsForwardRewriteMatchRuleMatchRuleForwardSettings:getCloudletsForwardRewriteMatchRuleMatchRuleForwardSettings"
        },
        "matchUrl": {
          "type": "string"
        },
        "matches": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCloudletsForwardRewriteMatchRuleMatchRuleMatch:getCloudletsForwardRewriteMatchRuleMatchRuleMatch"
          }
        },
        "name": {
          "type": "string"
        },
        "start": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "forwardSettings",
        "type"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": [
            "forwardSettings"
          ]
        }
      }
    },
    "akamai:index/getCloudletsForwardRewriteMatchRuleMatchRuleForwardSettings:getCloudletsForwardRewriteMatchRuleMatchRuleForwardSettings": {
      "properties": {
        "originId": {
          "type": "string"
        },
        "pathAndQs": {
          "type": "string"
        },
        "useIncomingQueryString": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "akamai:index/getCloudletsForwardRewriteMatchRuleMatchRuleMatch:getCloudletsForwardRewriteMatchRuleMatchRuleMatch": {
      "properties": {
        "caseSensitive": {
          "type": "boolean"
        },
        "checkIps": {
          "type": "string"
        },
        "matchOperator": {
          "type": "string"
        },
        "matchType": {
          "type": "string"
        },
        "matchValue": {
          "type": "string"
        },
        "negate": {
          "type": "boolean"
        },
        "objectMatchValues": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValue"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValue": {
      "properties": {
        "name": {
          "type": "string"
        },
        "nameCaseSensitive": {
          "type": "boolean"
        },
        "nameHasWildcard": {
          "type": "boolean"
        },
        "options": {
          "$ref": "#/types/akamai:index/getCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueOptions"
        },
        "type": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "required": [
        "type"
      ]
    },
    "akamai:index/getCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueOptions": {
      "properties": {
        "valueCaseSensitive": {
          "type": "boolean"
        },
        "valueEscaped": {
          "type": "boolean"
        },
        "valueHasWildcard": {
          "type": "boolean"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getCloudletsPhasedReleaseMatchRuleMatchRule:getCloudletsPhasedReleaseMatchRuleMatchRule": {
      "properties": {
        "disabled": {
          "type": "boolean"
        },
        "end": {
          "type": "integer"
        },
        "forwardSettings": {
          "$ref": "#/types/akamai:index/getCloudletsPhasedReleaseMatchRuleMatchRuleForwardSettings:getCloudletsPhasedReleaseMatchRuleMatchRuleForwardSettings"
        },
        "matchUrl": {
          "type": "string"
        },
        "matches": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCloudletsPhasedReleaseMatchRuleMatchRuleMatch:getCloudletsPhasedReleaseMatchRuleMatchRuleMatch"
          }
        },
        "matchesAlways": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "start": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "forwardSettings",
        "type"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": [
            "forwardSettings"
          ]
        }
      }
    },
    "akamai:index/getCloudletsPhasedReleaseMatchRuleMatchRuleForwardSettings:getCloudletsPhasedReleaseMatchRuleMatchRuleForwardSettings": {
      "properties": {
        "originId": {
          "type": "string"
        },
        "percent": {
          "type": "integer"
        }
      },
      "type": "object",
      "required": [
        "originId",
        "percent"
      ]
    },
    "akamai:index/getCloudletsPhasedReleaseMatchRuleMatchRuleMatch:getCloudletsPhasedReleaseMatchRuleMatchRuleMatch": {
      "properties": {
        "caseSensitive": {
          "type": "boolean"
        },
        "checkIps": {
          "type": "string"
        },
        "matchOperator": {
          "type": "string"
        },
        "matchType": {
          "type": "string"
        },
        "matchValue": {
          "type": "string"
        },
        "negate": {
          "type": "boolean"
        },
        "objectMatchValues": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCloudletsPhasedReleaseMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsPhasedReleaseMatchRuleMatchRuleMatchObjectMatchValue"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getCloudletsPhasedReleaseMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsPhasedReleaseMatchRuleMatchRuleMatchObjectMatchValue": {
      "properties": {
        "name": {
          "type": "string"
        },
        "nameCaseSensitive": {
          "type": "boolean"
        },
        "nameHasWildcard": {
          "type": "boolean"
        },
        "options": {
          "$ref": "#/types/akamai:index/getCloudletsPhasedReleaseMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsPhasedReleaseMatchRuleMatchRuleMatchObjectMatchValueOptions"
        },
        "type": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "required": [
        "type"
      ]
    },
    "akamai:index/getCloudletsPhasedReleaseMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsPhasedReleaseMatchRuleMatchRuleMatchObjectMatchValueOptions": {
      "properties": {
        "valueCaseSensitive": {
          "type": "boolean"
        },
        "valueEscaped": {
          "type": "boolean"
        },
        "valueHasWildcard": {
          "type": "boolean"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getCloudletsPolicyActivation:getCloudletsPolicyActivation": {
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "network": {
          "type": "string"
        },
        "policyInfos": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCloudletsPolicyActivationPolicyInfo:getCloudletsPolicyActivationPolicyInfo"
          }
        },
        "propertyInfos": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCloudletsPolicyActivationPropertyInfo:getCloudletsPolicyActivationPropertyInfo"
          }
        }
      },
      "type": "object",
      "required": [
        "apiVersion",
        "network",
        "policyInfos",
        "propertyInfos"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCloudletsPolicyActivationPolicyInfo:getCloudletsPolicyActivationPolicyInfo": {
      "properties": {
        "activatedBy": {
          "type": "string"
        },
        "activationDate": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "policyId": {
          "type": "integer"
        },
        "status": {
          "type": "string"
        },
        "statusDetail": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        }
      },
      "type": "object",
      "required": [
        "activatedBy",
        "activationDate",
        "name",
        "policyId",
        "status",
        "statusDetail",
        "version"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCloudletsPolicyActivationPropertyInfo:getCloudletsPolicyActivationPropertyInfo": {
      "properties": {
        "activatedBy": {
          "type": "string"
        },
        "activationDate": {
          "type": "integer"
        },
        "groupId": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        }
      },
      "type": "object",
      "required": [
        "activatedBy",
        "activationDate",
        "groupId",
        "name",
        "status",
        "version"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCloudletsRequestControlMatchRuleMatchRule:getCloudletsRequestControlMatchRuleMatchRule": {
      "properties": {
        "allowDeny": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "end": {
          "type": "integer"
        },
        "matches": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCloudletsRequestControlMatchRuleMatchRuleMatch:getCloudletsRequestControlMatchRuleMatchRuleMatch"
          }
        },
        "matchesAlways": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "start": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "allowDeny",
        "type"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": [
            "allowDeny"
          ]
        }
      }
    },
    "akamai:index/getCloudletsRequestControlMatchRuleMatchRuleMatch:getCloudletsRequestControlMatchRuleMatchRuleMatch": {
      "properties": {
        "caseSensitive": {
          "type": "boolean"
        },
        "checkIps": {
          "type": "string"
        },
        "matchOperator": {
          "type": "string"
        },
        "matchType": {
          "type": "string"
        },
        "matchValue": {
          "type": "string"
        },
        "negate": {
          "type": "boolean"
        },
        "objectMatchValues": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCloudletsRequestControlMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsRequestControlMatchRuleMatchRuleMatchObjectMatchValue"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getCloudletsRequestControlMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsRequestControlMatchRuleMatchRuleMatchObjectMatchValue": {
      "properties": {
        "name": {
          "type": "string"
        },
        "nameCaseSensitive": {
          "type": "boolean"
        },
        "nameHasWildcard": {
          "type": "boolean"
        },
        "options": {
          "$ref": "#/types/akamai:index/getCloudletsRequestControlMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsRequestControlMatchRuleMatchRuleMatchObjectMatchValueOptions"
        },
        "type": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "required": [
        "type"
      ]
    },
    "akamai:index/getCloudletsRequestControlMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsRequestControlMatchRuleMatchRuleMatchObjectMatchValueOptions": {
      "properties": {
        "valueCaseSensitive": {
          "type": "boolean"
        },
        "valueEscaped": {
          "type": "boolean"
        },
        "valueHasWildcard": {
          "type": "boolean"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getCloudletsVisitorPrioritizationMatchRuleMatchRule:getCloudletsVisitorPrioritizationMatchRuleMatchRule": {
      "properties": {
        "disabled": {
          "type": "boolean"
        },
        "end": {
          "type": "integer"
        },
        "matchUrl": {
          "type": "string"
        },
        "matches": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCloudletsVisitorPrioritizationMatchRuleMatchRuleMatch:getCloudletsVisitorPrioritizationMatchRuleMatchRuleMatch"
          }
        },
        "name": {
          "type": "string"
        },
        "passThroughPercent": {
          "type": "number"
        },
        "start": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "passThroughPercent",
        "type"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": [
            "passThroughPercent"
          ]
        }
      }
    },
    "akamai:index/getCloudletsVisitorPrioritizationMatchRuleMatchRuleMatch:getCloudletsVisitorPrioritizationMatchRuleMatchRuleMatch": {
      "properties": {
        "caseSensitive": {
          "type": "boolean"
        },
        "checkIps": {
          "type": "string"
        },
        "matchOperator": {
          "type": "string"
        },
        "matchType": {
          "type": "string"
        },
        "matchValue": {
          "type": "string"
        },
        "negate": {
          "type": "boolean"
        },
        "objectMatchValues": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCloudletsVisitorPrioritizationMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsVisitorPrioritizationMatchRuleMatchRuleMatchObjectMatchValue"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getCloudletsVisitorPrioritizationMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsVisitorPrioritizationMatchRuleMatchRuleMatchObjectMatchValue": {
      "properties": {
        "name": {
          "type": "string"
        },
        "nameCaseSensitive": {
          "type": "boolean"
        },
        "nameHasWildcard": {
          "type": "boolean"
        },
        "options": {
          "$ref": "#/types/akamai:index/getCloudletsVisitorPrioritizationMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsVisitorPrioritizationMatchRuleMatchRuleMatchObjectMatchValueOptions"
        },
        "type": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "required": [
        "type"
      ]
    },
    "akamai:index/getCloudletsVisitorPrioritizationMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsVisitorPrioritizationMatchRuleMatchRuleMatchObjectMatchValueOptions": {
      "properties": {
        "valueCaseSensitive": {
          "type": "boolean"
        },
        "valueEscaped": {
          "type": "boolean"
        },
        "valueHasWildcard": {
          "type": "boolean"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getCloudwrapperCapacitiesCapacity:getCloudwrapperCapacitiesCapacity": {
      "properties": {
        "approved": {
          "$ref": "#/types/akamai:index/getCloudwrapperCapacitiesCapacityApproved:getCloudwrapperCapacitiesCapacityApproved"
        },
        "assigned": {
          "$ref": "#/types/akamai:index/getCloudwrapperCapacitiesCapacityAssigned:getCloudwrapperCapacitiesCapacityAssigned"
        },
        "contractId": {
          "type": "string"
        },
        "locationId": {
          "type": "integer"
        },
        "locationName": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "unassigned": {
          "$ref": "#/types/akamai:index/getCloudwrapperCapacitiesCapacityUnassigned:getCloudwrapperCapacitiesCapacityUnassigned"
        }
      },
      "type": "object",
      "required": [
        "approved",
        "assigned",
        "contractId",
        "locationId",
        "locationName",
        "type",
        "unassigned"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCloudwrapperCapacitiesCapacityApproved:getCloudwrapperCapacitiesCapacityApproved": {
      "properties": {
        "unit": {
          "type": "string"
        },
        "value": {
          "type": "integer"
        }
      },
      "type": "object",
      "required": [
        "unit",
        "value"
      ]
    },
    "akamai:index/getCloudwrapperCapacitiesCapacityAssigned:getCloudwrapperCapacitiesCapacityAssigned": {
      "properties": {
        "unit": {
          "type": "string"
        },
        "value": {
          "type": "integer"
        }
      },
      "type": "object",
      "required": [
        "unit",
        "value"
      ]
    },
    "akamai:index/getCloudwrapperCapacitiesCapacityUnassigned:getCloudwrapperCapacitiesCapacityUnassigned": {
      "properties": {
        "unit": {
          "type": "string"
        },
        "value": {
          "type": "integer"
        }
      },
      "type": "object",
      "required": [
        "unit",
        "value"
      ]
    },
    "akamai:index/getCloudwrapperConfigurationLocation:getCloudwrapperConfigurationLocation": {
      "properties": {
        "capacity": {
          "$ref": "#/types/akamai:index/getCloudwrapperConfigurationLocationCapacity:getCloudwrapperConfigurationLocationCapacity"
        },
        "comments": {
          "type": "string"
        },
        "mapName": {
          "type": "string"
        },
        "trafficTypeId": {
          "type": "integer"
        }
      },
      "type": "object",
      "required": [
        "capacity",
        "comments",
        "mapName",
        "trafficTypeId"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCloudwrapperConfigurationLocationCapacity:getCloudwrapperConfigurationLocationCapacity": {
      "properties": {
        "unit": {
          "type": "string"
        },
        "value": {
          "type": "integer"
        }
      },
      "type": "object",
      "required": [
        "unit",
        "value"
      ]
    },
    "akamai:index/getCloudwrapperConfigurationMultiCdnSettings:getCloudwrapperConfigurationMultiCdnSettings": {
      "properties": {
        "bocc": {
          "$ref": "#/types/akamai:index/getCloudwrapperConfigurationMultiCdnSettingsBocc:getCloudwrapperConfigurationMultiCdnSettingsBocc"
        },
        "cdns": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCloudwrapperConfigurationMultiCdnSettingsCdn:getCloudwrapperConfigurationMultiCdnSettingsCdn"
          }
        },
        "dataStreams": {
          "$ref": "#/types/akamai:index/getCloudwrapperConfigurationMultiCdnSettingsDataStreams:getCloudwrapperConfigurationMultiCdnSettingsDataStreams"
        },
        "enableSoftAlerts": {
          "type": "boolean"
        },
        "origins": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCloudwrapperConfigurationMultiCdnSettingsOrigin:getCloudwrapperConfigurationMultiCdnSettingsOrigin"
          }
        }
      },
      "type": "object",
      "required": [
        "enableSoftAlerts"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCloudwrapperConfigurationMultiCdnSettingsBocc:getCloudwrapperConfigurationMultiCdnSettingsBocc": {
      "properties": {
        "conditionalSamplingFrequency": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "forwardType": {
          "type": "string"
        },
        "requestType": {
          "type": "string"
        },
        "samplingFrequency": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "conditionalSamplingFrequency",
        "enabled",
        "forwardType",
        "requestType",
        "samplingFrequency"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCloudwrapperConfigurationMultiCdnSettingsCdn:getCloudwrapperConfigurationMultiCdnSettingsCdn": {
      "properties": {
        "cdnAuthKeys": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKey:getCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKey"
          }
        },
        "cdnCode": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "httpsOnly": {
          "type": "boolean"
        },
        "ipAclCidrs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "required": [
        "cdnCode",
        "enabled",
        "httpsOnly",
        "ipAclCidrs"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKey:getCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKey": {
      "properties": {
        "authKeyName": {
          "type": "string"
        },
        "expiryDate": {
          "type": "string"
        },
        "headerName": {
          "type": "string"
        },
        "secret": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "authKeyName",
        "expiryDate",
        "headerName",
        "secret"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCloudwrapperConfigurationMultiCdnSettingsDataStreams:getCloudwrapperConfigurationMultiCdnSettingsDataStreams": {
      "properties": {
        "dataStreamIds": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "enabled": {
          "type": "boolean"
        },
        "samplingRate": {
          "type": "integer"
        }
      },
      "type": "object",
      "required": [
        "dataStreamIds",
        "enabled",
        "samplingRate"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCloudwrapperConfigurationMultiCdnSettingsOrigin:getCloudwrapperConfigurationMultiCdnSettingsOrigin": {
      "properties": {
        "hostname": {
          "type": "string"
        },
        "originId": {
          "type": "string"
        },
        "propertyId": {
          "type": "integer"
        }
      },
      "type": "object",
      "required": [
        "hostname",
        "originId",
        "propertyId"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCloudwrapperConfigurationsConfiguration:getCloudwrapperConfigurationsConfiguration": {
      "properties": {
        "capacityAlertsThreshold": {
          "type": "integer"
        },
        "comments": {
          "type": "string"
        },
        "configName": {
          "type": "string"
        },
        "contractId": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "lastActivatedBy": {
          "type": "string"
        },
        "lastActivatedDate": {
          "type": "string"
        },
        "lastUpdatedBy": {
          "type": "string"
        },
        "lastUpdatedDate": {
          "type": "string"
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCloudwrapperConfigurationsConfigurationLocation:getCloudwrapperConfigurationsConfigurationLocation"
          }
        },
        "multiCdnSettings": {
          "$ref": "#/types/akamai:index/getCloudwrapperConfigurationsConfigurationMultiCdnSettings:getCloudwrapperConfigurationsConfigurationMultiCdnSettings"
        },
        "notificationEmails": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "propertyIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "retainIdleObjects": {
          "type": "boolean"
        },
        "status": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "capacityAlertsThreshold",
        "comments",
        "configName",
        "contractId",
        "id",
        "lastActivatedBy",
        "lastActivatedDate",
        "lastUpdatedBy",
        "lastUpdatedDate",
        "notificationEmails",
        "propertyIds",
        "retainIdleObjects",
        "status"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCloudwrapperConfigurationsConfigurationLocation:getCloudwrapperConfigurationsConfigurationLocation": {
      "properties": {
        "capacity": {
          "$ref": "#/types/akamai:index/getCloudwrapperConfigurationsConfigurationLocationCapacity:getCloudwrapperConfigurationsConfigurationLocationCapacity"
        },
        "comments": {
          "type": "string"
        },
        "mapName": {
          "type": "string"
        },
        "trafficTypeId": {
          "type": "integer"
        }
      },
      "type": "object",
      "required": [
        "capacity",
        "comments",
        "mapName",
        "trafficTypeId"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCloudwrapperConfigurationsConfigurationLocationCapacity:getCloudwrapperConfigurationsConfigurationLocationCapacity": {
      "properties": {
        "unit": {
          "type": "string"
        },
        "value": {
          "type": "integer"
        }
      },
      "type": "object",
      "required": [
        "unit",
        "value"
      ]
    },
    "akamai:index/getCloudwrapperConfigurationsConfigurationMultiCdnSettings:getCloudwrapperConfigurationsConfigurationMultiCdnSettings": {
      "properties": {
        "bocc": {
          "$ref": "#/types/akamai:index/getCloudwrapperConfigurationsConfigurationMultiCdnSettingsBocc:getCloudwrapperConfigurationsConfigurationMultiCdnSettingsBocc"
        },
        "cdns": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCloudwrapperConfigurationsConfigurationMultiCdnSettingsCdn:getCloudwrapperConfigurationsConfigurationMultiCdnSettingsCdn"
          }
        },
        "dataStreams": {
          "$ref": "#/types/akamai:index/getCloudwrapperConfigurationsConfigurationMultiCdnSettingsDataStreams:getCloudwrapperConfigurationsConfigurationMultiCdnSettingsDataStreams"
        },
        "enableSoftAlerts": {
          "type": "boolean"
        },
        "origins": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCloudwrapperConfigurationsConfigurationMultiCdnSettingsOrigin:getCloudwrapperConfigurationsConfigurationMultiCdnSettingsOrigin"
          }
        }
      },
      "type": "object",
      "required": [
        "enableSoftAlerts"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCloudwrapperConfigurationsConfigurationMultiCdnSettingsBocc:getCloudwrapperConfigurationsConfigurationMultiCdnSettingsBocc": {
      "properties": {
        "conditionalSamplingFrequency": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "forwardType": {
          "type": "string"
        },
        "requestType": {
          "type": "string"
        },
        "samplingFrequency": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "conditionalSamplingFrequency",
        "enabled",
        "forwardType",
        "requestType",
        "samplingFrequency"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCloudwrapperConfigurationsConfigurationMultiCdnSettingsCdn:getCloudwrapperConfigurationsConfigurationMultiCdnSettingsCdn": {
      "properties": {
        "cdnAuthKeys": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCloudwrapperConfigurationsConfigurationMultiCdnSettingsCdnCdnAuthKey:getCloudwrapperConfigurationsConfigurationMultiCdnSettingsCdnCdnAuthKey"
          }
        },
        "cdnCode": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "httpsOnly": {
          "type": "boolean"
        },
        "ipAclCidrs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "required": [
        "cdnCode",
        "enabled",
        "httpsOnly",
        "ipAclCidrs"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCloudwrapperConfigurationsConfigurationMultiCdnSettingsCdnCdnAuthKey:getCloudwrapperConfigurationsConfigurationMultiCdnSettingsCdnCdnAuthKey": {
      "properties": {
        "authKeyName": {
          "type": "string"
        },
        "expiryDate": {
          "type": "string"
        },
        "headerName": {
          "type": "string"
        },
        "secret": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "authKeyName",
        "expiryDate",
        "headerName",
        "secret"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCloudwrapperConfigurationsConfigurationMultiCdnSettingsDataStreams:getCloudwrapperConfigurationsConfigurationMultiCdnSettingsDataStreams": {
      "properties": {
        "dataStreamIds": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "enabled": {
          "type": "boolean"
        },
        "samplingRate": {
          "type": "integer"
        }
      },
      "type": "object",
      "required": [
        "dataStreamIds",
        "enabled",
        "samplingRate"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCloudwrapperConfigurationsConfigurationMultiCdnSettingsOrigin:getCloudwrapperConfigurationsConfigurationMultiCdnSettingsOrigin": {
      "properties": {
        "hostname": {
          "type": "string"
        },
        "originId": {
          "type": "string"
        },
        "propertyId": {
          "type": "integer"
        }
      },
      "type": "object",
      "required": [
        "hostname",
        "originId",
        "propertyId"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCloudwrapperLocationsLocation:getCloudwrapperLocationsLocation": {
      "properties": {
        "locationId": {
          "type": "integer"
        },
        "locationName": {
          "type": "string"
        },
        "multiCdnLocationId": {
          "type": "string"
        },
        "trafficTypes": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getCloudwrapperLocationsLocationTrafficType:getCloudwrapperLocationsLocationTrafficType"
          }
        }
      },
      "type": "object",
      "required": [
        "locationId",
        "locationName",
        "multiCdnLocationId"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCloudwrapperLocationsLocationTrafficType:getCloudwrapperLocationsLocationTrafficType": {
      "properties": {
        "locationId": {
          "type": "string"
        },
        "trafficType": {
          "type": "string"
        },
        "trafficTypeId": {
          "type": "integer"
        }
      },
      "type": "object",
      "required": [
        "locationId",
        "trafficType",
        "trafficTypeId"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getCloudwrapperPropertiesProperty:getCloudwrapperPropertiesProperty": {
      "properties": {
        "contractId": {
          "type": "string"
        },
        "groupId": {
          "type": "integer"
        },
        "propertyId": {
          "type": "integer"
        },
        "propertyName": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "contractId",
        "groupId",
        "propertyId",
        "propertyName",
        "type"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getContractsContract:getContractsContract": {
      "properties": {
        "contractId": {
          "type": "string"
        },
        "contractTypeName": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "contractId",
        "contractTypeName"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getDatastreamActivationHistoryActivation:getDatastreamActivationHistoryActivation": {
      "properties": {
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "streamId": {
          "type": "integer"
        },
        "streamVersion": {
          "type": "integer"
        }
      },
      "type": "object",
      "required": [
        "modifiedBy",
        "modifiedDate",
        "status",
        "streamId",
        "streamVersion"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getDatastreamDatasetFieldsDatasetField:getDatastreamDatasetFieldsDatasetField": {
      "properties": {
        "datasetFieldDescription": {
          "type": "string"
        },
        "datasetFieldGroup": {
          "type": "string"
        },
        "datasetFieldId": {
          "type": "integer"
        },
        "datasetFieldJsonKey": {
          "type": "string"
        },
        "datasetFieldName": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "datasetFieldDescription",
        "datasetFieldGroup",
        "datasetFieldId",
        "datasetFieldJsonKey",
        "datasetFieldName"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getDatastreamsStreamsDetail:getDatastreamsStreamsDetail": {
      "properties": {
        "contractId": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string"
        },
        "groupId": {
          "type": "integer"
        },
        "latestVersion": {
          "type": "integer"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "properties": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getDatastreamsStreamsDetailProperty:getDatastreamsStreamsDetailProperty"
          }
        },
        "streamId": {
          "type": "integer"
        },
        "streamName": {
          "type": "string"
        },
        "streamStatus": {
          "type": "string"
        },
        "streamVersion": {
          "type": "integer"
        }
      },
      "type": "object",
      "required": [
        "contractId",
        "createdBy",
        "createdDate",
        "groupId",
        "latestVersion",
        "modifiedBy",
        "modifiedDate",
        "productId",
        "properties",
        "streamId",
        "streamName",
        "streamStatus",
        "streamVersion"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getDatastreamsStreamsDetailProperty:getDatastreamsStreamsDetailProperty": {
      "properties": {
        "propertyId": {
          "type": "integer"
        },
        "propertyName": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "propertyId",
        "propertyName"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getGroupsGroup:getGroupsGroup": {
      "properties": {
        "contractIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groupId": {
          "type": "string"
        },
        "groupName": {
          "type": "string"
        },
        "parentGroupId": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "contractIds",
        "groupId",
        "groupName",
        "parentGroupId"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getGtmDatacenterDefaultLoadObject:getGtmDatacenterDefaultLoadObject": {
      "properties": {
        "loadObject": {
          "type": "string"
        },
        "loadObjectPort": {
          "type": "integer"
        },
        "loadServers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "required": [
        "loadObject",
        "loadObjectPort",
        "loadServers"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getGtmDatacenterLink:getGtmDatacenterLink": {
      "properties": {
        "href": {
          "type": "string"
        },
        "rel": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "href",
        "rel"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getGtmDatacentersDatacenter:getGtmDatacentersDatacenter": {
      "properties": {
        "city": {
          "type": "string"
        },
        "cloneOf": {
          "type": "integer"
        },
        "cloudServerHostHeaderOverride": {
          "type": "boolean"
        },
        "cloudServerTargeting": {
          "type": "boolean"
        },
        "continent": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "datacenterId": {
          "type": "integer"
        },
        "defaultLoadObjects": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getGtmDatacentersDatacenterDefaultLoadObject:getGtmDatacentersDatacenterDefaultLoadObject"
          }
        },
        "latitude": {
          "type": "number"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getGtmDatacentersDatacenterLink:getGtmDatacentersDatacenterLink"
          }
        },
        "longitude": {
          "type": "number"
        },
        "nickname": {
          "type": "string"
        },
        "scorePenalty": {
          "type": "integer"
        },
        "servermonitorPool": {
          "type": "string"
        },
        "stateOrProvince": {
          "type": "string"
        },
        "virtual": {
          "type": "boolean"
        }
      },
      "type": "object",
      "required": [
        "city",
        "cloneOf",
        "cloudServerHostHeaderOverride",
        "cloudServerTargeting",
        "continent",
        "country",
        "datacenterId",
        "defaultLoadObjects",
        "latitude",
        "links",
        "longitude",
        "nickname",
        "scorePenalty",
        "servermonitorPool",
        "stateOrProvince",
        "virtual"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getGtmDatacentersDatacenterDefaultLoadObject:getGtmDatacentersDatacenterDefaultLoadObject": {
      "properties": {
        "loadObject": {
          "type": "string"
        },
        "loadObjectPort": {
          "type": "integer"
        },
        "loadServers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "required": [
        "loadObject",
        "loadObjectPort",
        "loadServers"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getGtmDatacentersDatacenterLink:getGtmDatacentersDatacenterLink": {
      "properties": {
        "href": {
          "type": "string"
        },
        "rel": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "href",
        "rel"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getIamGrantableRolesGrantableRole:getIamGrantableRolesGrantableRole": {
      "properties": {
        "description": {
          "type": "string"
        },
        "grantedRoleId": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "description",
        "grantedRoleId",
        "name"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getIamRolesRole:getIamRolesRole": {
      "properties": {
        "createdBy": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "roleId": {
          "type": "string"
        },
        "timeCreated": {
          "type": "string"
        },
        "timeModified": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "createdBy",
        "description",
        "modifiedBy",
        "name",
        "roleId",
        "timeCreated",
        "timeModified",
        "type"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getIamTimezonesTimezone:getIamTimezonesTimezone": {
      "properties": {
        "description": {
          "type": "string"
        },
        "offset": {
          "type": "string"
        },
        "posix": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "description",
        "offset",
        "posix",
        "timezone"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getImagingPolicyImagePolicy:getImagingPolicyImagePolicy": {
      "properties": {
        "breakpoints": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyBreakpoints:getImagingPolicyImagePolicyBreakpoints"
        },
        "hosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "output": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyOutput:getImagingPolicyImagePolicyOutput"
        },
        "postBreakpointTransformations": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformation:getImagingPolicyImagePolicyPostBreakpointTransformation"
          }
        },
        "rolloutDuration": {
          "type": "string"
        },
        "transformations": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
          }
        },
        "variables": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyVariable:getImagingPolicyImagePolicyVariable"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyBreakpoints:getImagingPolicyImagePolicyBreakpoints": {
      "properties": {
        "widths": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyOutput:getImagingPolicyImagePolicyOutput": {
      "properties": {
        "adaptiveQuality": {
          "type": "string"
        },
        "allowedFormats": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "forcedFormats": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "perceptualQuality": {
          "type": "string"
        },
        "perceptualQualityFloor": {
          "type": "string"
        },
        "perceptualQualityVar": {
          "type": "string"
        },
        "quality": {
          "type": "string"
        },
        "qualityVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformation:getImagingPolicyImagePolicyPostBreakpointTransformation": {
      "properties": {
        "backgroundColors": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationBackgroundColor:getImagingPolicyImagePolicyPostBreakpointTransformationBackgroundColor"
          }
        },
        "blurs": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationBlur:getImagingPolicyImagePolicyPostBreakpointTransformationBlur"
          }
        },
        "chromaKeys": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationChromaKey:getImagingPolicyImagePolicyPostBreakpointTransformationChromaKey"
          }
        },
        "composites": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationComposite:getImagingPolicyImagePolicyPostBreakpointTransformationComposite"
          }
        },
        "compounds": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationCompound:getImagingPolicyImagePolicyPostBreakpointTransformationCompound"
          }
        },
        "contrasts": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationContrast:getImagingPolicyImagePolicyPostBreakpointTransformationContrast"
          }
        },
        "goops": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationGoop:getImagingPolicyImagePolicyPostBreakpointTransformationGoop"
          }
        },
        "grayscales": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationGrayscale:getImagingPolicyImagePolicyPostBreakpointTransformationGrayscale"
          }
        },
        "hsls": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationHsl:getImagingPolicyImagePolicyPostBreakpointTransformationHsl"
          }
        },
        "hsvs": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationHsv:getImagingPolicyImagePolicyPostBreakpointTransformationHsv"
          }
        },
        "ifDimensions": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationIfDimension:getImagingPolicyImagePolicyPostBreakpointTransformationIfDimension"
          }
        },
        "ifOrientations": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationIfOrientation:getImagingPolicyImagePolicyPostBreakpointTransformationIfOrientation"
          }
        },
        "maxColors": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationMaxColor:getImagingPolicyImagePolicyPostBreakpointTransformationMaxColor"
          }
        },
        "mirrors": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationMirror:getImagingPolicyImagePolicyPostBreakpointTransformationMirror"
          }
        },
        "monoHues": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationMonoHue:getImagingPolicyImagePolicyPostBreakpointTransformationMonoHue"
          }
        },
        "opacities": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationOpacity:getImagingPolicyImagePolicyPostBreakpointTransformationOpacity"
          }
        },
        "removeColors": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationRemoveColor:getImagingPolicyImagePolicyPostBreakpointTransformationRemoveColor"
          }
        },
        "unsharpMasks": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationUnsharpMask:getImagingPolicyImagePolicyPostBreakpointTransformationUnsharpMask"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationBackgroundColor:getImagingPolicyImagePolicyPostBreakpointTransformationBackgroundColor": {
      "properties": {
        "color": {
          "type": "string"
        },
        "colorVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationBlur:getImagingPolicyImagePolicyPostBreakpointTransformationBlur": {
      "properties": {
        "sigma": {
          "type": "string"
        },
        "sigmaVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationChromaKey:getImagingPolicyImagePolicyPostBreakpointTransformationChromaKey": {
      "properties": {
        "hue": {
          "type": "string"
        },
        "hueFeather": {
          "type": "string"
        },
        "hueFeatherVar": {
          "type": "string"
        },
        "hueTolerance": {
          "type": "string"
        },
        "hueToleranceVar": {
          "type": "string"
        },
        "hueVar": {
          "type": "string"
        },
        "lightnessFeather": {
          "type": "string"
        },
        "lightnessFeatherVar": {
          "type": "string"
        },
        "lightnessTolerance": {
          "type": "string"
        },
        "lightnessToleranceVar": {
          "type": "string"
        },
        "saturationFeather": {
          "type": "string"
        },
        "saturationFeatherVar": {
          "type": "string"
        },
        "saturationTolerance": {
          "type": "string"
        },
        "saturationToleranceVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationComposite:getImagingPolicyImagePolicyPostBreakpointTransformationComposite": {
      "properties": {
        "gravity": {
          "type": "string"
        },
        "gravityVar": {
          "type": "string"
        },
        "image": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImage:getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImage"
        },
        "placement": {
          "type": "string"
        },
        "placementVar": {
          "type": "string"
        },
        "scale": {
          "type": "string"
        },
        "scaleDimension": {
          "type": "string"
        },
        "scaleDimensionVar": {
          "type": "string"
        },
        "scaleVar": {
          "type": "string"
        },
        "xPosition": {
          "type": "string"
        },
        "xPositionVar": {
          "type": "string"
        },
        "yPosition": {
          "type": "string"
        },
        "yPositionVar": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "image"
      ]
    },
    "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImage:getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImage": {
      "properties": {
        "boxImages": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageBoxImage:getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageBoxImage"
          }
        },
        "circleImages": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageCircleImage:getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageCircleImage"
          }
        },
        "textImages": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageTextImage:getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageTextImage"
          }
        },
        "urlImages": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImage:getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImage"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageBoxImage:getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageBoxImage": {
      "properties": {
        "color": {
          "type": "string"
        },
        "colorVar": {
          "type": "string"
        },
        "height": {
          "type": "string"
        },
        "heightVar": {
          "type": "string"
        },
        "transformation": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformation:getImagingPolicyImagePolicyPostBreakpointTransformation"
        },
        "width": {
          "type": "string"
        },
        "widthVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageCircleImage:getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageCircleImage": {
      "properties": {
        "color": {
          "type": "string"
        },
        "colorVar": {
          "type": "string"
        },
        "diameter": {
          "type": "string"
        },
        "diameterVar": {
          "type": "string"
        },
        "transformation": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformation:getImagingPolicyImagePolicyPostBreakpointTransformation"
        },
        "width": {
          "type": "string"
        },
        "widthVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageTextImage:getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageTextImage": {
      "properties": {
        "fill": {
          "type": "string"
        },
        "fillVar": {
          "type": "string"
        },
        "size": {
          "type": "string"
        },
        "sizeVar": {
          "type": "string"
        },
        "stroke": {
          "type": "string"
        },
        "strokeSize": {
          "type": "string"
        },
        "strokeSizeVar": {
          "type": "string"
        },
        "strokeVar": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "textVar": {
          "type": "string"
        },
        "transformation": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformation:getImagingPolicyImagePolicyPostBreakpointTransformation"
        },
        "typeface": {
          "type": "string"
        },
        "typefaceVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImage:getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImage": {
      "properties": {
        "transformation": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformation:getImagingPolicyImagePolicyPostBreakpointTransformation"
        },
        "url": {
          "type": "string"
        },
        "urlVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationCompound:getImagingPolicyImagePolicyPostBreakpointTransformationCompound": {
      "properties": {
        "transformations": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformation:getImagingPolicyImagePolicyPostBreakpointTransformation"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationContrast:getImagingPolicyImagePolicyPostBreakpointTransformationContrast": {
      "properties": {
        "brightness": {
          "type": "string"
        },
        "brightnessVar": {
          "type": "string"
        },
        "contrast": {
          "type": "string"
        },
        "contrastVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationGoop:getImagingPolicyImagePolicyPostBreakpointTransformationGoop": {
      "properties": {
        "chaos": {
          "type": "string"
        },
        "chaosVar": {
          "type": "string"
        },
        "density": {
          "type": "string"
        },
        "densityVar": {
          "type": "string"
        },
        "power": {
          "type": "string"
        },
        "powerVar": {
          "type": "string"
        },
        "seed": {
          "type": "string"
        },
        "seedVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationGrayscale:getImagingPolicyImagePolicyPostBreakpointTransformationGrayscale": {
      "properties": {
        "type": {
          "type": "string"
        },
        "typeVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationHsl:getImagingPolicyImagePolicyPostBreakpointTransformationHsl": {
      "properties": {
        "hue": {
          "type": "string"
        },
        "hueVar": {
          "type": "string"
        },
        "lightness": {
          "type": "string"
        },
        "lightnessVar": {
          "type": "string"
        },
        "saturation": {
          "type": "string"
        },
        "saturationVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationHsv:getImagingPolicyImagePolicyPostBreakpointTransformationHsv": {
      "properties": {
        "hue": {
          "type": "string"
        },
        "hueVar": {
          "type": "string"
        },
        "saturation": {
          "type": "string"
        },
        "saturationVar": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "valueVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationIfDimension:getImagingPolicyImagePolicyPostBreakpointTransformationIfDimension": {
      "properties": {
        "default": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformation:getImagingPolicyImagePolicyPostBreakpointTransformation"
        },
        "dimension": {
          "type": "string"
        },
        "dimensionVar": {
          "type": "string"
        },
        "equal": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformation:getImagingPolicyImagePolicyPostBreakpointTransformation"
        },
        "greaterThan": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformation:getImagingPolicyImagePolicyPostBreakpointTransformation"
        },
        "lessThan": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformation:getImagingPolicyImagePolicyPostBreakpointTransformation"
        },
        "value": {
          "type": "string"
        },
        "valueVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationIfOrientation:getImagingPolicyImagePolicyPostBreakpointTransformationIfOrientation": {
      "properties": {
        "default": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformation:getImagingPolicyImagePolicyPostBreakpointTransformation"
        },
        "landscape": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformation:getImagingPolicyImagePolicyPostBreakpointTransformation"
        },
        "portrait": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformation:getImagingPolicyImagePolicyPostBreakpointTransformation"
        },
        "square": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformation:getImagingPolicyImagePolicyPostBreakpointTransformation"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationMaxColor:getImagingPolicyImagePolicyPostBreakpointTransformationMaxColor": {
      "properties": {
        "colors": {
          "type": "string"
        },
        "colorsVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationMirror:getImagingPolicyImagePolicyPostBreakpointTransformationMirror": {
      "properties": {
        "horizontal": {
          "type": "string"
        },
        "horizontalVar": {
          "type": "string"
        },
        "vertical": {
          "type": "string"
        },
        "verticalVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationMonoHue:getImagingPolicyImagePolicyPostBreakpointTransformationMonoHue": {
      "properties": {
        "hue": {
          "type": "string"
        },
        "hueVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationOpacity:getImagingPolicyImagePolicyPostBreakpointTransformationOpacity": {
      "properties": {
        "opacity": {
          "type": "string"
        },
        "opacityVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationRemoveColor:getImagingPolicyImagePolicyPostBreakpointTransformationRemoveColor": {
      "properties": {
        "color": {
          "type": "string"
        },
        "colorVar": {
          "type": "string"
        },
        "feather": {
          "type": "string"
        },
        "featherVar": {
          "type": "string"
        },
        "tolerance": {
          "type": "string"
        },
        "toleranceVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationUnsharpMask:getImagingPolicyImagePolicyPostBreakpointTransformationUnsharpMask": {
      "properties": {
        "gain": {
          "type": "string"
        },
        "gainVar": {
          "type": "string"
        },
        "sigma": {
          "type": "string"
        },
        "sigmaVar": {
          "type": "string"
        },
        "threshold": {
          "type": "string"
        },
        "thresholdVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation": {
      "properties": {
        "appends": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationAppend:getImagingPolicyImagePolicyTransformationAppend"
          }
        },
        "aspectCrops": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationAspectCrop:getImagingPolicyImagePolicyTransformationAspectCrop"
          }
        },
        "backgroundColors": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationBackgroundColor:getImagingPolicyImagePolicyTransformationBackgroundColor"
          }
        },
        "blurs": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationBlur:getImagingPolicyImagePolicyTransformationBlur"
          }
        },
        "chromaKeys": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationChromaKey:getImagingPolicyImagePolicyTransformationChromaKey"
          }
        },
        "composites": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationComposite:getImagingPolicyImagePolicyTransformationComposite"
          }
        },
        "compounds": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationCompound:getImagingPolicyImagePolicyTransformationCompound"
          }
        },
        "contrasts": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationContrast:getImagingPolicyImagePolicyTransformationContrast"
          }
        },
        "crops": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationCrop:getImagingPolicyImagePolicyTransformationCrop"
          }
        },
        "faceCrops": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationFaceCrop:getImagingPolicyImagePolicyTransformationFaceCrop"
          }
        },
        "featureCrops": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationFeatureCrop:getImagingPolicyImagePolicyTransformationFeatureCrop"
          }
        },
        "fitAndFills": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationFitAndFill:getImagingPolicyImagePolicyTransformationFitAndFill"
          }
        },
        "goops": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationGoop:getImagingPolicyImagePolicyTransformationGoop"
          }
        },
        "grayscales": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationGrayscale:getImagingPolicyImagePolicyTransformationGrayscale"
          }
        },
        "hsls": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationHsl:getImagingPolicyImagePolicyTransformationHsl"
          }
        },
        "hsvs": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationHsv:getImagingPolicyImagePolicyTransformationHsv"
          }
        },
        "ifDimensions": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationIfDimension:getImagingPolicyImagePolicyTransformationIfDimension"
          }
        },
        "ifOrientations": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationIfOrientation:getImagingPolicyImagePolicyTransformationIfOrientation"
          }
        },
        "imQueries": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationImQuery:getImagingPolicyImagePolicyTransformationImQuery"
          }
        },
        "maxColors": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationMaxColor:getImagingPolicyImagePolicyTransformationMaxColor"
          }
        },
        "mirrors": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationMirror:getImagingPolicyImagePolicyTransformationMirror"
          }
        },
        "monoHues": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationMonoHue:getImagingPolicyImagePolicyTransformationMonoHue"
          }
        },
        "opacities": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationOpacity:getImagingPolicyImagePolicyTransformationOpacity"
          }
        },
        "regionOfInterestCrops": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCrop:getImagingPolicyImagePolicyTransformationRegionOfInterestCrop"
          }
        },
        "relativeCrops": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRelativeCrop:getImagingPolicyImagePolicyTransformationRelativeCrop"
          }
        },
        "removeColors": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRemoveColor:getImagingPolicyImagePolicyTransformationRemoveColor"
          }
        },
        "resizes": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationResize:getImagingPolicyImagePolicyTransformationResize"
          }
        },
        "rotates": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRotate:getImagingPolicyImagePolicyTransformationRotate"
          }
        },
        "scales": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationScale:getImagingPolicyImagePolicyTransformationScale"
          }
        },
        "shears": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationShears:getImagingPolicyImagePolicyTransformationShears"
          }
        },
        "trims": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationTrim:getImagingPolicyImagePolicyTransformationTrim"
          }
        },
        "unsharpMasks": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationUnsharpMask:getImagingPolicyImagePolicyTransformationUnsharpMask"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationAppend:getImagingPolicyImagePolicyTransformationAppend": {
      "properties": {
        "gravity": {
          "type": "string"
        },
        "gravityPriority": {
          "type": "string"
        },
        "gravityPriorityVar": {
          "type": "string"
        },
        "gravityVar": {
          "type": "string"
        },
        "image": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationAppendImage:getImagingPolicyImagePolicyTransformationAppendImage"
        },
        "preserveMinorDimension": {
          "type": "string"
        },
        "preserveMinorDimensionVar": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "image"
      ]
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationAppendImage:getImagingPolicyImagePolicyTransformationAppendImage": {
      "properties": {
        "boxImages": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationAppendImageBoxImage:getImagingPolicyImagePolicyTransformationAppendImageBoxImage"
          }
        },
        "circleImages": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationAppendImageCircleImage:getImagingPolicyImagePolicyTransformationAppendImageCircleImage"
          }
        },
        "textImages": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationAppendImageTextImage:getImagingPolicyImagePolicyTransformationAppendImageTextImage"
          }
        },
        "urlImages": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationAppendImageUrlImage:getImagingPolicyImagePolicyTransformationAppendImageUrlImage"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationAppendImageBoxImage:getImagingPolicyImagePolicyTransformationAppendImageBoxImage": {
      "properties": {
        "color": {
          "type": "string"
        },
        "colorVar": {
          "type": "string"
        },
        "height": {
          "type": "string"
        },
        "heightVar": {
          "type": "string"
        },
        "transformation": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
        },
        "width": {
          "type": "string"
        },
        "widthVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationAppendImageCircleImage:getImagingPolicyImagePolicyTransformationAppendImageCircleImage": {
      "properties": {
        "color": {
          "type": "string"
        },
        "colorVar": {
          "type": "string"
        },
        "diameter": {
          "type": "string"
        },
        "diameterVar": {
          "type": "string"
        },
        "transformation": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
        },
        "width": {
          "type": "string"
        },
        "widthVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationAppendImageTextImage:getImagingPolicyImagePolicyTransformationAppendImageTextImage": {
      "properties": {
        "fill": {
          "type": "string"
        },
        "fillVar": {
          "type": "string"
        },
        "size": {
          "type": "string"
        },
        "sizeVar": {
          "type": "string"
        },
        "stroke": {
          "type": "string"
        },
        "strokeSize": {
          "type": "string"
        },
        "strokeSizeVar": {
          "type": "string"
        },
        "strokeVar": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "textVar": {
          "type": "string"
        },
        "transformation": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
        },
        "typeface": {
          "type": "string"
        },
        "typefaceVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationAppendImageUrlImage:getImagingPolicyImagePolicyTransformationAppendImageUrlImage": {
      "properties": {
        "transformation": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
        },
        "url": {
          "type": "string"
        },
        "urlVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationAspectCrop:getImagingPolicyImagePolicyTransformationAspectCrop": {
      "properties": {
        "allowExpansion": {
          "type": "string"
        },
        "allowExpansionVar": {
          "type": "string"
        },
        "height": {
          "type": "string"
        },
        "heightVar": {
          "type": "string"
        },
        "width": {
          "type": "string"
        },
        "widthVar": {
          "type": "string"
        },
        "xPosition": {
          "type": "string"
        },
        "xPositionVar": {
          "type": "string"
        },
        "yPosition": {
          "type": "string"
        },
        "yPositionVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationBackgroundColor:getImagingPolicyImagePolicyTransformationBackgroundColor": {
      "properties": {
        "color": {
          "type": "string"
        },
        "colorVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationBlur:getImagingPolicyImagePolicyTransformationBlur": {
      "properties": {
        "sigma": {
          "type": "string"
        },
        "sigmaVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationChromaKey:getImagingPolicyImagePolicyTransformationChromaKey": {
      "properties": {
        "hue": {
          "type": "string"
        },
        "hueFeather": {
          "type": "string"
        },
        "hueFeatherVar": {
          "type": "string"
        },
        "hueTolerance": {
          "type": "string"
        },
        "hueToleranceVar": {
          "type": "string"
        },
        "hueVar": {
          "type": "string"
        },
        "lightnessFeather": {
          "type": "string"
        },
        "lightnessFeatherVar": {
          "type": "string"
        },
        "lightnessTolerance": {
          "type": "string"
        },
        "lightnessToleranceVar": {
          "type": "string"
        },
        "saturationFeather": {
          "type": "string"
        },
        "saturationFeatherVar": {
          "type": "string"
        },
        "saturationTolerance": {
          "type": "string"
        },
        "saturationToleranceVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationComposite:getImagingPolicyImagePolicyTransformationComposite": {
      "properties": {
        "gravity": {
          "type": "string"
        },
        "gravityVar": {
          "type": "string"
        },
        "image": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationCompositeImage:getImagingPolicyImagePolicyTransformationCompositeImage"
        },
        "placement": {
          "type": "string"
        },
        "placementVar": {
          "type": "string"
        },
        "scale": {
          "type": "string"
        },
        "scaleDimension": {
          "type": "string"
        },
        "scaleDimensionVar": {
          "type": "string"
        },
        "scaleVar": {
          "type": "string"
        },
        "xPosition": {
          "type": "string"
        },
        "xPositionVar": {
          "type": "string"
        },
        "yPosition": {
          "type": "string"
        },
        "yPositionVar": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "image"
      ]
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationCompositeImage:getImagingPolicyImagePolicyTransformationCompositeImage": {
      "properties": {
        "boxImages": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationCompositeImageBoxImage:getImagingPolicyImagePolicyTransformationCompositeImageBoxImage"
          }
        },
        "circleImages": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationCompositeImageCircleImage:getImagingPolicyImagePolicyTransformationCompositeImageCircleImage"
          }
        },
        "textImages": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationCompositeImageTextImage:getImagingPolicyImagePolicyTransformationCompositeImageTextImage"
          }
        },
        "urlImages": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationCompositeImageUrlImage:getImagingPolicyImagePolicyTransformationCompositeImageUrlImage"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationCompositeImageBoxImage:getImagingPolicyImagePolicyTransformationCompositeImageBoxImage": {
      "properties": {
        "color": {
          "type": "string"
        },
        "colorVar": {
          "type": "string"
        },
        "height": {
          "type": "string"
        },
        "heightVar": {
          "type": "string"
        },
        "transformation": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
        },
        "width": {
          "type": "string"
        },
        "widthVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationCompositeImageCircleImage:getImagingPolicyImagePolicyTransformationCompositeImageCircleImage": {
      "properties": {
        "color": {
          "type": "string"
        },
        "colorVar": {
          "type": "string"
        },
        "diameter": {
          "type": "string"
        },
        "diameterVar": {
          "type": "string"
        },
        "transformation": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
        },
        "width": {
          "type": "string"
        },
        "widthVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationCompositeImageTextImage:getImagingPolicyImagePolicyTransformationCompositeImageTextImage": {
      "properties": {
        "fill": {
          "type": "string"
        },
        "fillVar": {
          "type": "string"
        },
        "size": {
          "type": "string"
        },
        "sizeVar": {
          "type": "string"
        },
        "stroke": {
          "type": "string"
        },
        "strokeSize": {
          "type": "string"
        },
        "strokeSizeVar": {
          "type": "string"
        },
        "strokeVar": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "textVar": {
          "type": "string"
        },
        "transformation": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
        },
        "typeface": {
          "type": "string"
        },
        "typefaceVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationCompositeImageUrlImage:getImagingPolicyImagePolicyTransformationCompositeImageUrlImage": {
      "properties": {
        "transformation": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
        },
        "url": {
          "type": "string"
        },
        "urlVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationCompound:getImagingPolicyImagePolicyTransformationCompound": {
      "properties": {
        "transformations": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationContrast:getImagingPolicyImagePolicyTransformationContrast": {
      "properties": {
        "brightness": {
          "type": "string"
        },
        "brightnessVar": {
          "type": "string"
        },
        "contrast": {
          "type": "string"
        },
        "contrastVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationCrop:getImagingPolicyImagePolicyTransformationCrop": {
      "properties": {
        "allowExpansion": {
          "type": "string"
        },
        "allowExpansionVar": {
          "type": "string"
        },
        "gravity": {
          "type": "string"
        },
        "gravityVar": {
          "type": "string"
        },
        "height": {
          "type": "string"
        },
        "heightVar": {
          "type": "string"
        },
        "width": {
          "type": "string"
        },
        "widthVar": {
          "type": "string"
        },
        "xPosition": {
          "type": "string"
        },
        "xPositionVar": {
          "type": "string"
        },
        "yPosition": {
          "type": "string"
        },
        "yPositionVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationFaceCrop:getImagingPolicyImagePolicyTransformationFaceCrop": {
      "properties": {
        "algorithm": {
          "type": "string"
        },
        "algorithmVar": {
          "type": "string"
        },
        "confidence": {
          "type": "string"
        },
        "confidenceVar": {
          "type": "string"
        },
        "failGravity": {
          "type": "string"
        },
        "failGravityVar": {
          "type": "string"
        },
        "focus": {
          "type": "string"
        },
        "focusVar": {
          "type": "string"
        },
        "gravity": {
          "type": "string"
        },
        "gravityVar": {
          "type": "string"
        },
        "height": {
          "type": "string"
        },
        "heightVar": {
          "type": "string"
        },
        "padding": {
          "type": "string"
        },
        "paddingVar": {
          "type": "string"
        },
        "style": {
          "type": "string"
        },
        "styleVar": {
          "type": "string"
        },
        "width": {
          "type": "string"
        },
        "widthVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationFeatureCrop:getImagingPolicyImagePolicyTransformationFeatureCrop": {
      "properties": {
        "failGravity": {
          "type": "string"
        },
        "failGravityVar": {
          "type": "string"
        },
        "featureRadius": {
          "type": "string"
        },
        "featureRadiusVar": {
          "type": "string"
        },
        "gravity": {
          "type": "string"
        },
        "gravityVar": {
          "type": "string"
        },
        "height": {
          "type": "string"
        },
        "heightVar": {
          "type": "string"
        },
        "maxFeatures": {
          "type": "string"
        },
        "maxFeaturesVar": {
          "type": "string"
        },
        "minFeatureQuality": {
          "type": "string"
        },
        "minFeatureQualityVar": {
          "type": "string"
        },
        "padding": {
          "type": "string"
        },
        "paddingVar": {
          "type": "string"
        },
        "style": {
          "type": "string"
        },
        "styleVar": {
          "type": "string"
        },
        "width": {
          "type": "string"
        },
        "widthVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationFitAndFill:getImagingPolicyImagePolicyTransformationFitAndFill": {
      "properties": {
        "fillTransformation": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
        },
        "height": {
          "type": "string"
        },
        "heightVar": {
          "type": "string"
        },
        "width": {
          "type": "string"
        },
        "widthVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationGoop:getImagingPolicyImagePolicyTransformationGoop": {
      "properties": {
        "chaos": {
          "type": "string"
        },
        "chaosVar": {
          "type": "string"
        },
        "density": {
          "type": "string"
        },
        "densityVar": {
          "type": "string"
        },
        "power": {
          "type": "string"
        },
        "powerVar": {
          "type": "string"
        },
        "seed": {
          "type": "string"
        },
        "seedVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationGrayscale:getImagingPolicyImagePolicyTransformationGrayscale": {
      "properties": {
        "type": {
          "type": "string"
        },
        "typeVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationHsl:getImagingPolicyImagePolicyTransformationHsl": {
      "properties": {
        "hue": {
          "type": "string"
        },
        "hueVar": {
          "type": "string"
        },
        "lightness": {
          "type": "string"
        },
        "lightnessVar": {
          "type": "string"
        },
        "saturation": {
          "type": "string"
        },
        "saturationVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationHsv:getImagingPolicyImagePolicyTransformationHsv": {
      "properties": {
        "hue": {
          "type": "string"
        },
        "hueVar": {
          "type": "string"
        },
        "saturation": {
          "type": "string"
        },
        "saturationVar": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "valueVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationIfDimension:getImagingPolicyImagePolicyTransformationIfDimension": {
      "properties": {
        "default": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
        },
        "dimension": {
          "type": "string"
        },
        "dimensionVar": {
          "type": "string"
        },
        "equal": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
        },
        "greaterThan": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
        },
        "lessThan": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
        },
        "value": {
          "type": "string"
        },
        "valueVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationIfOrientation:getImagingPolicyImagePolicyTransformationIfOrientation": {
      "properties": {
        "default": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
        },
        "landscape": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
        },
        "portrait": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
        },
        "square": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationImQuery:getImagingPolicyImagePolicyTransformationImQuery": {
      "properties": {
        "allowedTransformations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "queryVar": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "allowedTransformations",
        "queryVar"
      ]
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationMaxColor:getImagingPolicyImagePolicyTransformationMaxColor": {
      "properties": {
        "colors": {
          "type": "string"
        },
        "colorsVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationMirror:getImagingPolicyImagePolicyTransformationMirror": {
      "properties": {
        "horizontal": {
          "type": "string"
        },
        "horizontalVar": {
          "type": "string"
        },
        "vertical": {
          "type": "string"
        },
        "verticalVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationMonoHue:getImagingPolicyImagePolicyTransformationMonoHue": {
      "properties": {
        "hue": {
          "type": "string"
        },
        "hueVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationOpacity:getImagingPolicyImagePolicyTransformationOpacity": {
      "properties": {
        "opacity": {
          "type": "string"
        },
        "opacityVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCrop:getImagingPolicyImagePolicyTransformationRegionOfInterestCrop": {
      "properties": {
        "gravity": {
          "type": "string"
        },
        "gravityVar": {
          "type": "string"
        },
        "height": {
          "type": "string"
        },
        "heightVar": {
          "type": "string"
        },
        "regionOfInterest": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterest:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterest"
        },
        "style": {
          "type": "string"
        },
        "styleVar": {
          "type": "string"
        },
        "width": {
          "type": "string"
        },
        "widthVar": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "regionOfInterest"
      ]
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterest:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterest": {
      "properties": {
        "circleShapes": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestCircleShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestCircleShape"
          }
        },
        "pointShapes": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestPointShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestPointShape"
          }
        },
        "polygonShapes": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestPolygonShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestPolygonShape"
          }
        },
        "rectangleShapes": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestRectangleShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestRectangleShape"
          }
        },
        "unionShapes": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShape"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestCircleShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestCircleShape": {
      "properties": {
        "center": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestCircleShapeCenter:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestCircleShapeCenter"
        },
        "radius": {
          "type": "string"
        },
        "radiusVar": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "center"
      ]
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestCircleShapeCenter:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestCircleShapeCenter": {
      "properties": {
        "x": {
          "type": "string"
        },
        "xVar": {
          "type": "string"
        },
        "y": {
          "type": "string"
        },
        "yVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestPointShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestPointShape": {
      "properties": {
        "x": {
          "type": "string"
        },
        "xVar": {
          "type": "string"
        },
        "y": {
          "type": "string"
        },
        "yVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestPolygonShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestPolygonShape": {
      "properties": {
        "points": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestPolygonShapePoint:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestPolygonShapePoint"
          }
        }
      },
      "type": "object",
      "required": [
        "points"
      ]
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestPolygonShapePoint:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestPolygonShapePoint": {
      "properties": {
        "x": {
          "type": "string"
        },
        "xVar": {
          "type": "string"
        },
        "y": {
          "type": "string"
        },
        "yVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestRectangleShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestRectangleShape": {
      "properties": {
        "anchor": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestRectangleShapeAnchor:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestRectangleShapeAnchor"
        },
        "height": {
          "type": "string"
        },
        "heightVar": {
          "type": "string"
        },
        "width": {
          "type": "string"
        },
        "widthVar": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "anchor"
      ]
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestRectangleShapeAnchor:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestRectangleShapeAnchor": {
      "properties": {
        "x": {
          "type": "string"
        },
        "xVar": {
          "type": "string"
        },
        "y": {
          "type": "string"
        },
        "yVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShape": {
      "properties": {
        "shapes": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShape"
          }
        }
      },
      "type": "object",
      "required": [
        "shapes"
      ]
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShape": {
      "properties": {
        "circleShapes": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeCircleShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeCircleShape"
          }
        },
        "pointShapes": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapePointShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapePointShape"
          }
        },
        "polygonShapes": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapePolygonShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapePolygonShape"
          }
        },
        "rectangleShapes": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeRectangleShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeRectangleShape"
          }
        },
        "unionShapes": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeUnionShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeUnionShape"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeCircleShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeCircleShape": {
      "properties": {
        "center": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeCircleShapeCenter:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeCircleShapeCenter"
        },
        "radius": {
          "type": "string"
        },
        "radiusVar": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "center"
      ]
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeCircleShapeCenter:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeCircleShapeCenter": {
      "properties": {
        "x": {
          "type": "string"
        },
        "xVar": {
          "type": "string"
        },
        "y": {
          "type": "string"
        },
        "yVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapePointShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapePointShape": {
      "properties": {
        "x": {
          "type": "string"
        },
        "xVar": {
          "type": "string"
        },
        "y": {
          "type": "string"
        },
        "yVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapePolygonShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapePolygonShape": {
      "properties": {
        "points": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapePolygonShapePoint:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapePolygonShapePoint"
          }
        }
      },
      "type": "object",
      "required": [
        "points"
      ]
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapePolygonShapePoint:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapePolygonShapePoint": {
      "properties": {
        "x": {
          "type": "string"
        },
        "xVar": {
          "type": "string"
        },
        "y": {
          "type": "string"
        },
        "yVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeRectangleShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeRectangleShape": {
      "properties": {
        "anchor": {
          "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeRectangleShapeAnchor:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeRectangleShapeAnchor"
        },
        "height": {
          "type": "string"
        },
        "heightVar": {
          "type": "string"
        },
        "width": {
          "type": "string"
        },
        "widthVar": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "anchor"
      ]
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeRectangleShapeAnchor:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeRectangleShapeAnchor": {
      "properties": {
        "x": {
          "type": "string"
        },
        "xVar": {
          "type": "string"
        },
        "y": {
          "type": "string"
        },
        "yVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeUnionShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeUnionShape": {
      "properties": {
        "shapes": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeUnionShapeShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeUnionShapeShape"
          }
        }
      },
      "type": "object",
      "required": [
        "shapes"
      ]
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeUnionShapeShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeUnionShapeShape": {
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationRelativeCrop:getImagingPolicyImagePolicyTransformationRelativeCrop": {
      "properties": {
        "east": {
          "type": "string"
        },
        "eastVar": {
          "type": "string"
        },
        "north": {
          "type": "string"
        },
        "northVar": {
          "type": "string"
        },
        "south": {
          "type": "string"
        },
        "southVar": {
          "type": "string"
        },
        "west": {
          "type": "string"
        },
        "westVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationRemoveColor:getImagingPolicyImagePolicyTransformationRemoveColor": {
      "properties": {
        "color": {
          "type": "string"
        },
        "colorVar": {
          "type": "string"
        },
        "feather": {
          "type": "string"
        },
        "featherVar": {
          "type": "string"
        },
        "tolerance": {
          "type": "string"
        },
        "toleranceVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationResize:getImagingPolicyImagePolicyTransformationResize": {
      "properties": {
        "aspect": {
          "type": "string"
        },
        "aspectVar": {
          "type": "string"
        },
        "height": {
          "type": "string"
        },
        "heightVar": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "typeVar": {
          "type": "string"
        },
        "width": {
          "type": "string"
        },
        "widthVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationRotate:getImagingPolicyImagePolicyTransformationRotate": {
      "properties": {
        "degrees": {
          "type": "string"
        },
        "degreesVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationScale:getImagingPolicyImagePolicyTransformationScale": {
      "properties": {
        "height": {
          "type": "string"
        },
        "heightVar": {
          "type": "string"
        },
        "width": {
          "type": "string"
        },
        "widthVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationShears:getImagingPolicyImagePolicyTransformationShears": {
      "properties": {
        "xShear": {
          "type": "string"
        },
        "xShearVar": {
          "type": "string"
        },
        "yShear": {
          "type": "string"
        },
        "yShearVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationTrim:getImagingPolicyImagePolicyTransformationTrim": {
      "properties": {
        "fuzz": {
          "type": "string"
        },
        "fuzzVar": {
          "type": "string"
        },
        "padding": {
          "type": "string"
        },
        "paddingVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyTransformationUnsharpMask:getImagingPolicyImagePolicyTransformationUnsharpMask": {
      "properties": {
        "gain": {
          "type": "string"
        },
        "gainVar": {
          "type": "string"
        },
        "sigma": {
          "type": "string"
        },
        "sigmaVar": {
          "type": "string"
        },
        "threshold": {
          "type": "string"
        },
        "thresholdVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyImagePolicyVariable:getImagingPolicyImagePolicyVariable": {
      "properties": {
        "defaultValue": {
          "type": "string"
        },
        "enumOptions": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyVariableEnumOption:getImagingPolicyImagePolicyVariableEnumOption"
          }
        },
        "name": {
          "type": "string"
        },
        "postfix": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "defaultValue",
        "name",
        "type"
      ]
    },
    "akamai:index/getImagingPolicyImagePolicyVariableEnumOption:getImagingPolicyImagePolicyVariableEnumOption": {
      "properties": {
        "id": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "id",
        "value"
      ]
    },
    "akamai:index/getImagingPolicyVideoPolicy:getImagingPolicyVideoPolicy": {
      "properties": {
        "breakpoints": {
          "$ref": "#/types/akamai:index/getImagingPolicyVideoPolicyBreakpoints:getImagingPolicyVideoPolicyBreakpoints"
        },
        "hosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "output": {
          "$ref": "#/types/akamai:index/getImagingPolicyVideoPolicyOutput:getImagingPolicyVideoPolicyOutput"
        },
        "rolloutDuration": {
          "type": "string"
        },
        "variables": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyVideoPolicyVariable:getImagingPolicyVideoPolicyVariable"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyVideoPolicyBreakpoints:getImagingPolicyVideoPolicyBreakpoints": {
      "properties": {
        "widths": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyVideoPolicyOutput:getImagingPolicyVideoPolicyOutput": {
      "properties": {
        "perceptualQuality": {
          "type": "string"
        },
        "perceptualQualityVar": {
          "type": "string"
        },
        "placeholderVideoUrl": {
          "type": "string"
        },
        "placeholderVideoUrlVar": {
          "type": "string"
        },
        "videoAdaptiveQuality": {
          "type": "string"
        },
        "videoAdaptiveQualityVar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getImagingPolicyVideoPolicyVariable:getImagingPolicyVideoPolicyVariable": {
      "properties": {
        "defaultValue": {
          "type": "string"
        },
        "enumOptions": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getImagingPolicyVideoPolicyVariableEnumOption:getImagingPolicyVideoPolicyVariableEnumOption"
          }
        },
        "name": {
          "type": "string"
        },
        "postfix": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "defaultValue",
        "name",
        "type"
      ]
    },
    "akamai:index/getImagingPolicyVideoPolicyVariableEnumOption:getImagingPolicyVideoPolicyVariableEnumOption": {
      "properties": {
        "id": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "id",
        "value"
      ]
    },
    "akamai:index/getPropertiesProperty:getPropertiesProperty": {
      "properties": {
        "contractId": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "latestVersion": {
          "type": "integer"
        },
        "note": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "productionVersion": {
          "type": "integer"
        },
        "propertyId": {
          "type": "string"
        },
        "propertyName": {
          "type": "string"
        },
        "ruleFormat": {
          "type": "string"
        },
        "stagingVersion": {
          "type": "integer"
        }
      },
      "type": "object",
      "required": [
        "contractId",
        "groupId",
        "latestVersion",
        "note",
        "productId",
        "productionVersion",
        "propertyId",
        "propertyName",
        "ruleFormat",
        "stagingVersion"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getPropertiesSearchProperty:getPropertiesSearchProperty": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "assetId": {
          "type": "string"
        },
        "contractId": {
          "type": "string"
        },
        "edgeHostname": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "productionStatus": {
          "type": "string"
        },
        "propertyId": {
          "type": "string"
        },
        "propertyName": {
          "type": "string"
        },
        "propertyVersion": {
          "type": "integer"
        },
        "stagingStatus": {
          "type": "string"
        },
        "updatedByUser": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "accountId",
        "assetId",
        "contractId",
        "edgeHostname",
        "groupId",
        "hostname",
        "productionStatus",
        "propertyId",
        "propertyName",
        "propertyVersion",
        "stagingStatus",
        "updatedByUser",
        "updatedDate"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getPropertyHostnamesHostname:getPropertyHostnamesHostname": {
      "properties": {
        "certProvisioningType": {
          "type": "string"
        },
        "certStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getPropertyHostnamesHostnameCertStatus:getPropertyHostnamesHostnameCertStatus"
          }
        },
        "cnameFrom": {
          "type": "string"
        },
        "cnameTo": {
          "type": "string"
        },
        "cnameType": {
          "type": "string"
        },
        "edgeHostnameId": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "certProvisioningType",
        "certStatuses",
        "cnameFrom",
        "cnameTo",
        "cnameType",
        "edgeHostnameId"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getPropertyHostnamesHostnameCertStatus:getPropertyHostnamesHostnameCertStatus": {
      "properties": {
        "hostname": {
          "type": "string"
        },
        "productionStatus": {
          "type": "string"
        },
        "stagingStatus": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "hostname",
        "productionStatus",
        "stagingStatus",
        "target"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getPropertyIncludeParentsParent:getPropertyIncludeParentsParent": {
      "properties": {
        "id": {
          "type": "string"
        },
        "isIncludeUsedInProductionVersion": {
          "type": "boolean"
        },
        "isIncludeUsedInStagingVersion": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "productionVersion": {
          "type": "string"
        },
        "stagingVersion": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "id",
        "isIncludeUsedInProductionVersion",
        "isIncludeUsedInStagingVersion",
        "name",
        "productionVersion",
        "stagingVersion"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getPropertyIncludesInclude:getPropertyIncludesInclude": {
      "properties": {
        "id": {
          "type": "string"
        },
        "latestVersion": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "productionVersion": {
          "type": "string"
        },
        "stagingVersion": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "id",
        "latestVersion",
        "name",
        "productionVersion",
        "stagingVersion",
        "type"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getPropertyIncludesParentProperty:getPropertyIncludesParentProperty": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        }
      },
      "type": "object",
      "required": [
        "id",
        "version"
      ]
    },
    "akamai:index/getPropertyProductsProduct:getPropertyProductsProduct": {
      "properties": {
        "productId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "productId",
        "productName"
      ],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      }
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105:getPropertyRulesBuilderRulesV20230105": {
      "properties": {
        "advancedOverride": {
          "type": "string"
        },
        "behaviors": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105Behavior:getPropertyRulesBuilderRulesV20230105Behavior"
          }
        },
        "childrens": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "comments": {
          "type": "string"
        },
        "criteriaLocked": {
          "type": "boolean"
        },
        "criteriaMustSatisfy": {
          "type": "string"
        },
        "criterions": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105Criterion:getPropertyRulesBuilderRulesV20230105Criterion"
          }
        },
        "customOverride": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CustomOverride:getPropertyRulesBuilderRulesV20230105CustomOverride"
        },
        "isSecure": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "templateLink": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "variables": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105Variable:getPropertyRulesBuilderRulesV20230105Variable"
          }
        }
      },
      "type": "object",
      "required": [
        "name"
      ]
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105Behavior:getPropertyRulesBuilderRulesV20230105Behavior": {
      "properties": {
        "adScalerCircuitBreaker": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAdScalerCircuitBreaker:getPropertyRulesBuilderRulesV20230105BehaviorAdScalerCircuitBreaker"
        },
        "adaptiveAcceleration": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAdaptiveAcceleration:getPropertyRulesBuilderRulesV20230105BehaviorAdaptiveAcceleration"
        },
        "adaptiveImageCompression": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAdaptiveImageCompression:getPropertyRulesBuilderRulesV20230105BehaviorAdaptiveImageCompression"
        },
        "advanced": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAdvanced:getPropertyRulesBuilderRulesV20230105BehaviorAdvanced"
        },
        "aggregatedReporting": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAggregatedReporting:getPropertyRulesBuilderRulesV20230105BehaviorAggregatedReporting"
        },
        "akamaizer": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAkamaizer:getPropertyRulesBuilderRulesV20230105BehaviorAkamaizer"
        },
        "akamaizerTag": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAkamaizerTag:getPropertyRulesBuilderRulesV20230105BehaviorAkamaizerTag"
        },
        "allHttpInCacheHierarchy": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAllHttpInCacheHierarchy:getPropertyRulesBuilderRulesV20230105BehaviorAllHttpInCacheHierarchy"
        },
        "allowCloudletsOrigins": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAllowCloudletsOrigins:getPropertyRulesBuilderRulesV20230105BehaviorAllowCloudletsOrigins"
        },
        "allowDelete": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAllowDelete:getPropertyRulesBuilderRulesV20230105BehaviorAllowDelete"
        },
        "allowHttpsCacheKeySharing": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAllowHttpsCacheKeySharing:getPropertyRulesBuilderRulesV20230105BehaviorAllowHttpsCacheKeySharing"
        },
        "allowHttpsDowngrade": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAllowHttpsDowngrade:getPropertyRulesBuilderRulesV20230105BehaviorAllowHttpsDowngrade"
        },
        "allowOptions": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAllowOptions:getPropertyRulesBuilderRulesV20230105BehaviorAllowOptions"
        },
        "allowPatch": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAllowPatch:getPropertyRulesBuilderRulesV20230105BehaviorAllowPatch"
        },
        "allowPost": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAllowPost:getPropertyRulesBuilderRulesV20230105BehaviorAllowPost"
        },
        "allowPut": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAllowPut:getPropertyRulesBuilderRulesV20230105BehaviorAllowPut"
        },
        "allowTransferEncoding": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAllowTransferEncoding:getPropertyRulesBuilderRulesV20230105BehaviorAllowTransferEncoding"
        },
        "altSvcHeader": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAltSvcHeader:getPropertyRulesBuilderRulesV20230105BehaviorAltSvcHeader"
        },
        "apiPrioritization": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorApiPrioritization:getPropertyRulesBuilderRulesV20230105BehaviorApiPrioritization"
        },
        "applicationLoadBalancer": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorApplicationLoadBalancer:getPropertyRulesBuilderRulesV20230105BehaviorApplicationLoadBalancer"
        },
        "audienceSegmentation": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAudienceSegmentation:getPropertyRulesBuilderRulesV20230105BehaviorAudienceSegmentation"
        },
        "autoDomainValidation": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAutoDomainValidation:getPropertyRulesBuilderRulesV20230105BehaviorAutoDomainValidation"
        },
        "baseDirectory": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorBaseDirectory:getPropertyRulesBuilderRulesV20230105BehaviorBaseDirectory"
        },
        "bossBeaconing": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorBossBeaconing:getPropertyRulesBuilderRulesV20230105BehaviorBossBeaconing"
        },
        "breadcrumbs": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorBreadcrumbs:getPropertyRulesBuilderRulesV20230105BehaviorBreadcrumbs"
        },
        "breakConnection": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorBreakConnection:getPropertyRulesBuilderRulesV20230105BehaviorBreakConnection"
        },
        "brotli": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorBrotli:getPropertyRulesBuilderRulesV20230105BehaviorBrotli"
        },
        "cacheError": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCacheError:getPropertyRulesBuilderRulesV20230105BehaviorCacheError"
        },
        "cacheId": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCacheId:getPropertyRulesBuilderRulesV20230105BehaviorCacheId"
        },
        "cacheKeyIgnoreCase": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCacheKeyIgnoreCase:getPropertyRulesBuilderRulesV20230105BehaviorCacheKeyIgnoreCase"
        },
        "cacheKeyQueryParams": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCacheKeyQueryParams:getPropertyRulesBuilderRulesV20230105BehaviorCacheKeyQueryParams"
        },
        "cacheKeyRewrite": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCacheKeyRewrite:getPropertyRulesBuilderRulesV20230105BehaviorCacheKeyRewrite"
        },
        "cachePost": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCachePost:getPropertyRulesBuilderRulesV20230105BehaviorCachePost"
        },
        "cacheRedirect": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCacheRedirect:getPropertyRulesBuilderRulesV20230105BehaviorCacheRedirect"
        },
        "cacheTag": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCacheTag:getPropertyRulesBuilderRulesV20230105BehaviorCacheTag"
        },
        "cacheTagVisible": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCacheTagVisible:getPropertyRulesBuilderRulesV20230105BehaviorCacheTagVisible"
        },
        "caching": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCaching:getPropertyRulesBuilderRulesV20230105BehaviorCaching"
        },
        "centralAuthorization": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCentralAuthorization:getPropertyRulesBuilderRulesV20230105BehaviorCentralAuthorization"
        },
        "chaseRedirects": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorChaseRedirects:getPropertyRulesBuilderRulesV20230105BehaviorChaseRedirects"
        },
        "clientCharacteristics": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorClientCharacteristics:getPropertyRulesBuilderRulesV20230105BehaviorClientCharacteristics"
        },
        "cloudInterconnects": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCloudInterconnects:getPropertyRulesBuilderRulesV20230105BehaviorCloudInterconnects"
        },
        "cloudWrapper": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCloudWrapper:getPropertyRulesBuilderRulesV20230105BehaviorCloudWrapper"
        },
        "cloudWrapperAdvanced": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCloudWrapperAdvanced:getPropertyRulesBuilderRulesV20230105BehaviorCloudWrapperAdvanced"
        },
        "conditionalOrigin": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorConditionalOrigin:getPropertyRulesBuilderRulesV20230105BehaviorConditionalOrigin"
        },
        "constructResponse": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorConstructResponse:getPropertyRulesBuilderRulesV20230105BehaviorConstructResponse"
        },
        "contentCharacteristics": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorContentCharacteristics:getPropertyRulesBuilderRulesV20230105BehaviorContentCharacteristics"
        },
        "contentCharacteristicsAmd": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorContentCharacteristicsAmd:getPropertyRulesBuilderRulesV20230105BehaviorContentCharacteristicsAmd"
        },
        "contentCharacteristicsDd": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorContentCharacteristicsDd:getPropertyRulesBuilderRulesV20230105BehaviorContentCharacteristicsDd"
        },
        "contentCharacteristicsWsdLargeFile": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorContentCharacteristicsWsdLargeFile:getPropertyRulesBuilderRulesV20230105BehaviorContentCharacteristicsWsdLargeFile"
        },
        "contentCharacteristicsWsdLive": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorContentCharacteristicsWsdLive:getPropertyRulesBuilderRulesV20230105BehaviorContentCharacteristicsWsdLive"
        },
        "contentCharacteristicsWsdVod": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorContentCharacteristicsWsdVod:getPropertyRulesBuilderRulesV20230105BehaviorContentCharacteristicsWsdVod"
        },
        "contentPrePosition": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorContentPrePosition:getPropertyRulesBuilderRulesV20230105BehaviorContentPrePosition"
        },
        "contentTargetingProtection": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorContentTargetingProtection:getPropertyRulesBuilderRulesV20230105BehaviorContentTargetingProtection"
        },
        "corsSupport": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCorsSupport:getPropertyRulesBuilderRulesV20230105BehaviorCorsSupport"
        },
        "cpCode": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCpCode:getPropertyRulesBuilderRulesV20230105BehaviorCpCode"
        },
        "customBehavior": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCustomBehavior:getPropertyRulesBuilderRulesV20230105BehaviorCustomBehavior"
        },
        "datastream": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDatastream:getPropertyRulesBuilderRulesV20230105BehaviorDatastream"
        },
        "dcp": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDcp:getPropertyRulesBuilderRulesV20230105BehaviorDcp"
        },
        "dcpAuthHmacTransformation": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDcpAuthHmacTransformation:getPropertyRulesBuilderRulesV20230105BehaviorDcpAuthHmacTransformation"
        },
        "dcpAuthRegexTransformation": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDcpAuthRegexTransformation:getPropertyRulesBuilderRulesV20230105BehaviorDcpAuthRegexTransformation"
        },
        "dcpAuthSubstringTransformation": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDcpAuthSubstringTransformation:getPropertyRulesBuilderRulesV20230105BehaviorDcpAuthSubstringTransformation"
        },
        "dcpAuthVariableExtractor": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDcpAuthVariableExtractor:getPropertyRulesBuilderRulesV20230105BehaviorDcpAuthVariableExtractor"
        },
        "dcpDefaultAuthzGroups": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDcpDefaultAuthzGroups:getPropertyRulesBuilderRulesV20230105BehaviorDcpDefaultAuthzGroups"
        },
        "dcpDevRelations": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDcpDevRelations:getPropertyRulesBuilderRulesV20230105BehaviorDcpDevRelations"
        },
        "dcpRealTimeAuth": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDcpRealTimeAuth:getPropertyRulesBuilderRulesV20230105BehaviorDcpRealTimeAuth"
        },
        "deliveryReceipt": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDeliveryReceipt:getPropertyRulesBuilderRulesV20230105BehaviorDeliveryReceipt"
        },
        "denyAccess": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDenyAccess:getPropertyRulesBuilderRulesV20230105BehaviorDenyAccess"
        },
        "denyDirectFailoverAccess": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDenyDirectFailoverAccess:getPropertyRulesBuilderRulesV20230105BehaviorDenyDirectFailoverAccess"
        },
        "deviceCharacteristicCacheId": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDeviceCharacteristicCacheId:getPropertyRulesBuilderRulesV20230105BehaviorDeviceCharacteristicCacheId"
        },
        "deviceCharacteristicHeader": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDeviceCharacteristicHeader:getPropertyRulesBuilderRulesV20230105BehaviorDeviceCharacteristicHeader"
        },
        "dnsAsyncRefresh": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDnsAsyncRefresh:getPropertyRulesBuilderRulesV20230105BehaviorDnsAsyncRefresh"
        },
        "dnsPrefresh": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDnsPrefresh:getPropertyRulesBuilderRulesV20230105BehaviorDnsPrefresh"
        },
        "downgradeProtocol": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDowngradeProtocol:getPropertyRulesBuilderRulesV20230105BehaviorDowngradeProtocol"
        },
        "downloadCompleteMarker": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDownloadCompleteMarker:getPropertyRulesBuilderRulesV20230105BehaviorDownloadCompleteMarker"
        },
        "downloadNotification": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDownloadNotification:getPropertyRulesBuilderRulesV20230105BehaviorDownloadNotification"
        },
        "downstreamCache": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDownstreamCache:getPropertyRulesBuilderRulesV20230105BehaviorDownstreamCache"
        },
        "dynamicThroughtputOptimization": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDynamicThroughtputOptimization:getPropertyRulesBuilderRulesV20230105BehaviorDynamicThroughtputOptimization"
        },
        "dynamicThroughtputOptimizationOverride": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDynamicThroughtputOptimizationOverride:getPropertyRulesBuilderRulesV20230105BehaviorDynamicThroughtputOptimizationOverride"
        },
        "dynamicWebContent": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDynamicWebContent:getPropertyRulesBuilderRulesV20230105BehaviorDynamicWebContent"
        },
        "ecmsBulkUpload": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEcmsBulkUpload:getPropertyRulesBuilderRulesV20230105BehaviorEcmsBulkUpload"
        },
        "ecmsDatabase": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEcmsDatabase:getPropertyRulesBuilderRulesV20230105BehaviorEcmsDatabase"
        },
        "ecmsDataset": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEcmsDataset:getPropertyRulesBuilderRulesV20230105BehaviorEcmsDataset"
        },
        "ecmsObjectKey": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEcmsObjectKey:getPropertyRulesBuilderRulesV20230105BehaviorEcmsObjectKey"
        },
        "edgeConnect": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEdgeConnect:getPropertyRulesBuilderRulesV20230105BehaviorEdgeConnect"
        },
        "edgeLoadBalancingAdvanced": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEdgeLoadBalancingAdvanced:getPropertyRulesBuilderRulesV20230105BehaviorEdgeLoadBalancingAdvanced"
        },
        "edgeLoadBalancingDataCenter": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEdgeLoadBalancingDataCenter:getPropertyRulesBuilderRulesV20230105BehaviorEdgeLoadBalancingDataCenter"
        },
        "edgeLoadBalancingOrigin": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEdgeLoadBalancingOrigin:getPropertyRulesBuilderRulesV20230105BehaviorEdgeLoadBalancingOrigin"
        },
        "edgeOriginAuthorization": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEdgeOriginAuthorization:getPropertyRulesBuilderRulesV20230105BehaviorEdgeOriginAuthorization"
        },
        "edgeRedirector": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEdgeRedirector:getPropertyRulesBuilderRulesV20230105BehaviorEdgeRedirector"
        },
        "edgeScape": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEdgeScape:getPropertyRulesBuilderRulesV20230105BehaviorEdgeScape"
        },
        "edgeSideIncludes": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEdgeSideIncludes:getPropertyRulesBuilderRulesV20230105BehaviorEdgeSideIncludes"
        },
        "edgeWorker": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEdgeWorker:getPropertyRulesBuilderRulesV20230105BehaviorEdgeWorker"
        },
        "enhancedAkamaiProtocol": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEnhancedAkamaiProtocol:getPropertyRulesBuilderRulesV20230105BehaviorEnhancedAkamaiProtocol"
        },
        "enhancedProxyDetection": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEnhancedProxyDetection:getPropertyRulesBuilderRulesV20230105BehaviorEnhancedProxyDetection"
        },
        "epdForwardHeaderEnrichment": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEpdForwardHeaderEnrichment:getPropertyRulesBuilderRulesV20230105BehaviorEpdForwardHeaderEnrichment"
        },
        "failAction": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorFailAction:getPropertyRulesBuilderRulesV20230105BehaviorFailAction"
        },
        "failoverBotManagerFeatureCompatibility": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorFailoverBotManagerFeatureCompatibility:getPropertyRulesBuilderRulesV20230105BehaviorFailoverBotManagerFeatureCompatibility"
        },
        "fastInvalidate": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorFastInvalidate:getPropertyRulesBuilderRulesV20230105BehaviorFastInvalidate"
        },
        "firstPartyMarketing": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorFirstPartyMarketing:getPropertyRulesBuilderRulesV20230105BehaviorFirstPartyMarketing"
        },
        "firstPartyMarketingPlus": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorFirstPartyMarketingPlus:getPropertyRulesBuilderRulesV20230105BehaviorFirstPartyMarketingPlus"
        },
        "forwardRewrite": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorForwardRewrite:getPropertyRulesBuilderRulesV20230105BehaviorForwardRewrite"
        },
        "frontEndOptimization": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorFrontEndOptimization:getPropertyRulesBuilderRulesV20230105BehaviorFrontEndOptimization"
        },
        "g2oheader": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorG2oheader:getPropertyRulesBuilderRulesV20230105BehaviorG2oheader"
        },
        "globalRequestNumber": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorGlobalRequestNumber:getPropertyRulesBuilderRulesV20230105BehaviorGlobalRequestNumber"
        },
        "graphqlCaching": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorGraphqlCaching:getPropertyRulesBuilderRulesV20230105BehaviorGraphqlCaching"
        },
        "gzipResponse": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorGzipResponse:getPropertyRulesBuilderRulesV20230105BehaviorGzipResponse"
        },
        "hdDataAdvanced": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorHdDataAdvanced:getPropertyRulesBuilderRulesV20230105BehaviorHdDataAdvanced"
        },
        "healthDetection": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorHealthDetection:getPropertyRulesBuilderRulesV20230105BehaviorHealthDetection"
        },
        "hsafEipBinding": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorHsafEipBinding:getPropertyRulesBuilderRulesV20230105BehaviorHsafEipBinding"
        },
        "http2": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorHttp2:getPropertyRulesBuilderRulesV20230105BehaviorHttp2"
        },
        "http3": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorHttp3:getPropertyRulesBuilderRulesV20230105BehaviorHttp3"
        },
        "httpStrictTransportSecurity": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorHttpStrictTransportSecurity:getPropertyRulesBuilderRulesV20230105BehaviorHttpStrictTransportSecurity"
        },
        "httpToHttpsUpgrade": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorHttpToHttpsUpgrade:getPropertyRulesBuilderRulesV20230105BehaviorHttpToHttpsUpgrade"
        },
        "imOverride": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImOverride:getPropertyRulesBuilderRulesV20230105BehaviorImOverride"
        },
        "imageAndVideoManager": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImageAndVideoManager:getPropertyRulesBuilderRulesV20230105BehaviorImageAndVideoManager"
        },
        "imageManager": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImageManager:getPropertyRulesBuilderRulesV20230105BehaviorImageManager"
        },
        "imageManagerVideo": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImageManagerVideo:getPropertyRulesBuilderRulesV20230105BehaviorImageManagerVideo"
        },
        "include": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorInclude:getPropertyRulesBuilderRulesV20230105BehaviorInclude"
        },
        "inputValidation": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorInputValidation:getPropertyRulesBuilderRulesV20230105BehaviorInputValidation"
        },
        "instant": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorInstant:getPropertyRulesBuilderRulesV20230105BehaviorInstant"
        },
        "instantConfig": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorInstantConfig:getPropertyRulesBuilderRulesV20230105BehaviorInstantConfig"
        },
        "largeFileOptimization": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorLargeFileOptimization:getPropertyRulesBuilderRulesV20230105BehaviorLargeFileOptimization"
        },
        "largeFileOptimizationAdvanced": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorLargeFileOptimizationAdvanced:getPropertyRulesBuilderRulesV20230105BehaviorLargeFileOptimizationAdvanced"
        },
        "limitBitRate": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorLimitBitRate:getPropertyRulesBuilderRulesV20230105BehaviorLimitBitRate"
        },
        "logCustom": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorLogCustom:getPropertyRulesBuilderRulesV20230105BehaviorLogCustom"
        },
        "mPulse": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorMPulse:getPropertyRulesBuilderRulesV20230105BehaviorMPulse"
        },
        "manifestPersonalization": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorManifestPersonalization:getPropertyRulesBuilderRulesV20230105BehaviorManifestPersonalization"
        },
        "manifestRerouting": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorManifestRerouting:getPropertyRulesBuilderRulesV20230105BehaviorManifestRerouting"
        },
        "manualServerPush": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorManualServerPush:getPropertyRulesBuilderRulesV20230105BehaviorManualServerPush"
        },
        "mediaAcceleration": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorMediaAcceleration:getPropertyRulesBuilderRulesV20230105BehaviorMediaAcceleration"
        },
        "mediaAccelerationQuicOptout": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorMediaAccelerationQuicOptout:getPropertyRulesBuilderRulesV20230105BehaviorMediaAccelerationQuicOptout"
        },
        "mediaClient": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorMediaClient:getPropertyRulesBuilderRulesV20230105BehaviorMediaClient"
        },
        "mediaFileRetrievalOptimization": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorMediaFileRetrievalOptimization:getPropertyRulesBuilderRulesV20230105BehaviorMediaFileRetrievalOptimization"
        },
        "mediaOriginFailover": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorMediaOriginFailover:getPropertyRulesBuilderRulesV20230105BehaviorMediaOriginFailover"
        },
        "metadataCaching": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorMetadataCaching:getPropertyRulesBuilderRulesV20230105BehaviorMetadataCaching"
        },
        "mobileSdkPerformance": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorMobileSdkPerformance:getPropertyRulesBuilderRulesV20230105BehaviorMobileSdkPerformance"
        },
        "modifyIncomingRequestHeader": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorModifyIncomingRequestHeader:getPropertyRulesBuilderRulesV20230105BehaviorModifyIncomingRequestHeader"
        },
        "modifyIncomingResponseHeader": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorModifyIncomingResponseHeader:getPropertyRulesBuilderRulesV20230105BehaviorModifyIncomingResponseHeader"
        },
        "modifyOutgoingRequestHeader": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorModifyOutgoingRequestHeader:getPropertyRulesBuilderRulesV20230105BehaviorModifyOutgoingRequestHeader"
        },
        "modifyOutgoingResponseHeader": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorModifyOutgoingResponseHeader:getPropertyRulesBuilderRulesV20230105BehaviorModifyOutgoingResponseHeader"
        },
        "modifyViaHeader": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorModifyViaHeader:getPropertyRulesBuilderRulesV20230105BehaviorModifyViaHeader"
        },
        "origin": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorOrigin:getPropertyRulesBuilderRulesV20230105BehaviorOrigin"
        },
        "originCharacteristics": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorOriginCharacteristics:getPropertyRulesBuilderRulesV20230105BehaviorOriginCharacteristics"
        },
        "originCharacteristicsWsd": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorOriginCharacteristicsWsd:getPropertyRulesBuilderRulesV20230105BehaviorOriginCharacteristicsWsd"
        },
        "originFailureRecoveryMethod": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorOriginFailureRecoveryMethod:getPropertyRulesBuilderRulesV20230105BehaviorOriginFailureRecoveryMethod"
        },
        "originFailureRecoveryPolicy": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorOriginFailureRecoveryPolicy:getPropertyRulesBuilderRulesV20230105BehaviorOriginFailureRecoveryPolicy"
        },
        "originIpAcl": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorOriginIpAcl:getPropertyRulesBuilderRulesV20230105BehaviorOriginIpAcl"
        },
        "persistentClientConnection": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorPersistentClientConnection:getPropertyRulesBuilderRulesV20230105BehaviorPersistentClientConnection"
        },
        "persistentConnection": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorPersistentConnection:getPropertyRulesBuilderRulesV20230105BehaviorPersistentConnection"
        },
        "personallyIdentifiableInformation": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorPersonallyIdentifiableInformation:getPropertyRulesBuilderRulesV20230105BehaviorPersonallyIdentifiableInformation"
        },
        "phasedRelease": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorPhasedRelease:getPropertyRulesBuilderRulesV20230105BehaviorPhasedRelease"
        },
        "preconnect": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorPreconnect:getPropertyRulesBuilderRulesV20230105BehaviorPreconnect"
        },
        "predictiveContentDelivery": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorPredictiveContentDelivery:getPropertyRulesBuilderRulesV20230105BehaviorPredictiveContentDelivery"
        },
        "predictivePrefetching": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorPredictivePrefetching:getPropertyRulesBuilderRulesV20230105BehaviorPredictivePrefetching"
        },
        "prefetch": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorPrefetch:getPropertyRulesBuilderRulesV20230105BehaviorPrefetch"
        },
        "prefetchable": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorPrefetchable:getPropertyRulesBuilderRulesV20230105BehaviorPrefetchable"
        },
        "prefreshCache": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorPrefreshCache:getPropertyRulesBuilderRulesV20230105BehaviorPrefreshCache"
        },
        "quality": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorQuality:getPropertyRulesBuilderRulesV20230105BehaviorQuality"
        },
        "quicBeta": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorQuicBeta:getPropertyRulesBuilderRulesV20230105BehaviorQuicBeta"
        },
        "randomSeek": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRandomSeek:getPropertyRulesBuilderRulesV20230105BehaviorRandomSeek"
        },
        "rapid": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRapid:getPropertyRulesBuilderRulesV20230105BehaviorRapid"
        },
        "readTimeout": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorReadTimeout:getPropertyRulesBuilderRulesV20230105BehaviorReadTimeout"
        },
        "realTimeReporting": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRealTimeReporting:getPropertyRulesBuilderRulesV20230105BehaviorRealTimeReporting"
        },
        "realUserMonitoring": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRealUserMonitoring:getPropertyRulesBuilderRulesV20230105BehaviorRealUserMonitoring"
        },
        "redirect": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRedirect:getPropertyRulesBuilderRulesV20230105BehaviorRedirect"
        },
        "redirectplus": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRedirectplus:getPropertyRulesBuilderRulesV20230105BehaviorRedirectplus"
        },
        "refererChecking": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRefererChecking:getPropertyRulesBuilderRulesV20230105BehaviorRefererChecking"
        },
        "removeQueryParameter": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRemoveQueryParameter:getPropertyRulesBuilderRulesV20230105BehaviorRemoveQueryParameter"
        },
        "removeVary": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRemoveVary:getPropertyRulesBuilderRulesV20230105BehaviorRemoveVary"
        },
        "report": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorReport:getPropertyRulesBuilderRulesV20230105BehaviorReport"
        },
        "requestControl": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRequestControl:getPropertyRulesBuilderRulesV20230105BehaviorRequestControl"
        },
        "requestTypeMarker": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRequestTypeMarker:getPropertyRulesBuilderRulesV20230105BehaviorRequestTypeMarker"
        },
        "resourceOptimizer": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorResourceOptimizer:getPropertyRulesBuilderRulesV20230105BehaviorResourceOptimizer"
        },
        "resourceOptimizerExtendedCompatibility": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorResourceOptimizerExtendedCompatibility:getPropertyRulesBuilderRulesV20230105BehaviorResourceOptimizerExtendedCompatibility"
        },
        "responseCode": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorResponseCode:getPropertyRulesBuilderRulesV20230105BehaviorResponseCode"
        },
        "responseCookie": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorResponseCookie:getPropertyRulesBuilderRulesV20230105BehaviorResponseCookie"
        },
        "restrictObjectCaching": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRestrictObjectCaching:getPropertyRulesBuilderRulesV20230105BehaviorRestrictObjectCaching"
        },
        "returnCacheStatus": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorReturnCacheStatus:getPropertyRulesBuilderRulesV20230105BehaviorReturnCacheStatus"
        },
        "rewriteUrl": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRewriteUrl:getPropertyRulesBuilderRulesV20230105BehaviorRewriteUrl"
        },
        "rumCustom": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRumCustom:getPropertyRulesBuilderRulesV20230105BehaviorRumCustom"
        },
        "saasDefinitions": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorSaasDefinitions:getPropertyRulesBuilderRulesV20230105BehaviorSaasDefinitions"
        },
        "salesForceCommerceCloudClient": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorSalesForceCommerceCloudClient:getPropertyRulesBuilderRulesV20230105BehaviorSalesForceCommerceCloudClient"
        },
        "salesForceCommerceCloudProvider": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorSalesForceCommerceCloudProvider:getPropertyRulesBuilderRulesV20230105BehaviorSalesForceCommerceCloudProvider"
        },
        "salesForceCommerceCloudProviderHostHeader": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorSalesForceCommerceCloudProviderHostHeader:getPropertyRulesBuilderRulesV20230105BehaviorSalesForceCommerceCloudProviderHostHeader"
        },
        "savePostDcaProcessing": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorSavePostDcaProcessing:getPropertyRulesBuilderRulesV20230105BehaviorSavePostDcaProcessing"
        },
        "scheduleInvalidation": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorScheduleInvalidation:getPropertyRulesBuilderRulesV20230105BehaviorScheduleInvalidation"
        },
        "scriptManagement": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorScriptManagement:getPropertyRulesBuilderRulesV20230105BehaviorScriptManagement"
        },
        "segmentedContentProtection": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorSegmentedContentProtection:getPropertyRulesBuilderRulesV20230105BehaviorSegmentedContentProtection"
        },
        "segmentedMediaOptimization": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorSegmentedMediaOptimization:getPropertyRulesBuilderRulesV20230105BehaviorSegmentedMediaOptimization"
        },
        "segmentedMediaStreamingPrefetch": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorSegmentedMediaStreamingPrefetch:getPropertyRulesBuilderRulesV20230105BehaviorSegmentedMediaStreamingPrefetch"
        },
        "setVariable": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorSetVariable:getPropertyRulesBuilderRulesV20230105BehaviorSetVariable"
        },
        "shutr": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorShutr:getPropertyRulesBuilderRulesV20230105BehaviorShutr"
        },
        "simulateErrorCode": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorSimulateErrorCode:getPropertyRulesBuilderRulesV20230105BehaviorSimulateErrorCode"
        },
        "siteShield": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorSiteShield:getPropertyRulesBuilderRulesV20230105BehaviorSiteShield"
        },
        "standardTlsMigration": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorStandardTlsMigration:getPropertyRulesBuilderRulesV20230105BehaviorStandardTlsMigration"
        },
        "standardTlsMigrationOverride": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorStandardTlsMigrationOverride:getPropertyRulesBuilderRulesV20230105BehaviorStandardTlsMigrationOverride"
        },
        "strictHeaderParsing": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorStrictHeaderParsing:getPropertyRulesBuilderRulesV20230105BehaviorStrictHeaderParsing"
        },
        "subCustomer": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorSubCustomer:getPropertyRulesBuilderRulesV20230105BehaviorSubCustomer"
        },
        "sureRoute": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorSureRoute:getPropertyRulesBuilderRulesV20230105BehaviorSureRoute"
        },
        "tcpOptimization": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorTcpOptimization:getPropertyRulesBuilderRulesV20230105BehaviorTcpOptimization"
        },
        "teaLeaf": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorTeaLeaf:getPropertyRulesBuilderRulesV20230105BehaviorTeaLeaf"
        },
        "tieredDistribution": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorTieredDistribution:getPropertyRulesBuilderRulesV20230105BehaviorTieredDistribution"
        },
        "tieredDistributionAdvanced": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorTieredDistributionAdvanced:getPropertyRulesBuilderRulesV20230105BehaviorTieredDistributionAdvanced"
        },
        "tieredDistributionCustomization": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorTieredDistributionCustomization:getPropertyRulesBuilderRulesV20230105BehaviorTieredDistributionCustomization"
        },
        "timeout": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorTimeout:getPropertyRulesBuilderRulesV20230105BehaviorTimeout"
        },
        "uidConfiguration": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorUidConfiguration:getPropertyRulesBuilderRulesV20230105BehaviorUidConfiguration"
        },
        "validateEntityTag": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorValidateEntityTag:getPropertyRulesBuilderRulesV20230105BehaviorValidateEntityTag"
        },
        "verifyJsonWebToken": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorVerifyJsonWebToken:getPropertyRulesBuilderRulesV20230105BehaviorVerifyJsonWebToken"
        },
        "verifyJsonWebTokenForDcp": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorVerifyJsonWebTokenForDcp:getPropertyRulesBuilderRulesV20230105BehaviorVerifyJsonWebTokenForDcp"
        },
        "verifyTokenAuthorization": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorVerifyTokenAuthorization:getPropertyRulesBuilderRulesV20230105BehaviorVerifyTokenAuthorization"
        },
        "virtualWaitingRoom": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorVirtualWaitingRoom:getPropertyRulesBuilderRulesV20230105BehaviorVirtualWaitingRoom"
        },
        "virtualWaitingRoomWithEdgeWorkers": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorVirtualWaitingRoomWithEdgeWorkers:getPropertyRulesBuilderRulesV20230105BehaviorVirtualWaitingRoomWithEdgeWorkers"
        },
        "visitorPrioritization": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorVisitorPrioritization:getPropertyRulesBuilderRulesV20230105BehaviorVisitorPrioritization"
        },
        "visitorPrioritizationFifo": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorVisitorPrioritizationFifo:getPropertyRulesBuilderRulesV20230105BehaviorVisitorPrioritizationFifo"
        },
        "visitorPrioritizationFifoStandalone": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorVisitorPrioritizationFifoStandalone:getPropertyRulesBuilderRulesV20230105BehaviorVisitorPrioritizationFifoStandalone"
        },
        "watermarking": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorWatermarking:getPropertyRulesBuilderRulesV20230105BehaviorWatermarking"
        },
        "webApplicationFirewall": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorWebApplicationFirewall:getPropertyRulesBuilderRulesV20230105BehaviorWebApplicationFirewall"
        },
        "webSockets": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorWebSockets:getPropertyRulesBuilderRulesV20230105BehaviorWebSockets"
        },
        "webdav": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorWebdav:getPropertyRulesBuilderRulesV20230105BehaviorWebdav"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAdScalerCircuitBreaker:getPropertyRulesBuilderRulesV20230105BehaviorAdScalerCircuitBreaker": {
      "properties": {
        "fallbackActionResponseCodeBased": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "responseCodeBased": {
          "type": "boolean"
        },
        "responseCodes": {
          "type": "string"
        },
        "responseDelayBased": {
          "type": "boolean"
        },
        "responseDelayThreshold": {
          "type": "string"
        },
        "returnErrorResponseCodeBased": {
          "type": "string"
        },
        "specifyYourOwnResponseCodeBased": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAdaptiveAcceleration:getPropertyRulesBuilderRulesV20230105BehaviorAdaptiveAcceleration": {
      "properties": {
        "abLogic": {
          "type": "string"
        },
        "abTesting": {
          "type": "string"
        },
        "compression": {
          "type": "string"
        },
        "cookieName": {
          "type": "string"
        },
        "enableBrotliCompression": {
          "type": "boolean"
        },
        "enableForNoncacheable": {
          "type": "boolean"
        },
        "enablePreconnect": {
          "type": "boolean"
        },
        "enablePush": {
          "type": "boolean"
        },
        "enableRo": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "preloadEnable": {
          "type": "boolean"
        },
        "source": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "titleBrotli": {
          "type": "string"
        },
        "titleHttp2ServerPush": {
          "type": "string"
        },
        "titlePreconnect": {
          "type": "string"
        },
        "titlePreload": {
          "type": "string"
        },
        "titleRo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAdaptiveImageCompression:getPropertyRulesBuilderRulesV20230105BehaviorAdaptiveImageCompression": {
      "properties": {
        "compressMobile": {
          "type": "boolean"
        },
        "compressStandard": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "tier1MobileCompressionMethod": {
          "type": "string"
        },
        "tier1MobileCompressionValue": {
          "type": "integer"
        },
        "tier1StandardCompressionMethod": {
          "type": "string"
        },
        "tier1StandardCompressionValue": {
          "type": "integer"
        },
        "tier2MobileCompressionMethod": {
          "type": "string"
        },
        "tier2MobileCompressionValue": {
          "type": "integer"
        },
        "tier2StandardCompressionMethod": {
          "type": "string"
        },
        "tier2StandardCompressionValue": {
          "type": "integer"
        },
        "tier3MobileCompressionMethod": {
          "type": "string"
        },
        "tier3MobileCompressionValue": {
          "type": "integer"
        },
        "tier3StandardCompressionMethod": {
          "type": "string"
        },
        "tier3StandardCompressionValue": {
          "type": "integer"
        },
        "titleAicMobile": {
          "type": "string"
        },
        "titleAicNonmobile": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAdvanced:getPropertyRulesBuilderRulesV20230105BehaviorAdvanced": {
      "properties": {
        "description": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "xml": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAggregatedReporting:getPropertyRulesBuilderRulesV20230105BehaviorAggregatedReporting": {
      "properties": {
        "attribute1": {
          "type": "string"
        },
        "attribute2": {
          "type": "string"
        },
        "attribute3": {
          "type": "string"
        },
        "attribute4": {
          "type": "string"
        },
        "attributesCount": {
          "type": "integer"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "reportName": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAkamaizer:getPropertyRulesBuilderRulesV20230105BehaviorAkamaizer": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAkamaizerTag:getPropertyRulesBuilderRulesV20230105BehaviorAkamaizerTag": {
      "properties": {
        "includeTagsAttribute": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "matchHostname": {
          "type": "string"
        },
        "replaceAll": {
          "type": "boolean"
        },
        "replacementHostname": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "tagsAttribute": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAllHttpInCacheHierarchy:getPropertyRulesBuilderRulesV20230105BehaviorAllHttpInCacheHierarchy": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAllowCloudletsOrigins:getPropertyRulesBuilderRulesV20230105BehaviorAllowCloudletsOrigins": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "honorBaseDirectory": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "purgeOriginQueryParameter": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAllowDelete:getPropertyRulesBuilderRulesV20230105BehaviorAllowDelete": {
      "properties": {
        "allowBody": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAllowHttpsCacheKeySharing:getPropertyRulesBuilderRulesV20230105BehaviorAllowHttpsCacheKeySharing": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAllowHttpsDowngrade:getPropertyRulesBuilderRulesV20230105BehaviorAllowHttpsDowngrade": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAllowOptions:getPropertyRulesBuilderRulesV20230105BehaviorAllowOptions": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAllowPatch:getPropertyRulesBuilderRulesV20230105BehaviorAllowPatch": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAllowPost:getPropertyRulesBuilderRulesV20230105BehaviorAllowPost": {
      "properties": {
        "allowWithoutContentLength": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAllowPut:getPropertyRulesBuilderRulesV20230105BehaviorAllowPut": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAllowTransferEncoding:getPropertyRulesBuilderRulesV20230105BehaviorAllowTransferEncoding": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAltSvcHeader:getPropertyRulesBuilderRulesV20230105BehaviorAltSvcHeader": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "maxAge": {
          "type": "integer"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorApiPrioritization:getPropertyRulesBuilderRulesV20230105BehaviorApiPrioritization": {
      "properties": {
        "alternateResponseCacheTtl": {
          "type": "integer"
        },
        "cloudletPolicy": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorApiPrioritizationCloudletPolicy:getPropertyRulesBuilderRulesV20230105BehaviorApiPrioritizationCloudletPolicy"
        },
        "enabled": {
          "type": "boolean"
        },
        "label": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "netStorage": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorApiPrioritizationNetStorage:getPropertyRulesBuilderRulesV20230105BehaviorApiPrioritizationNetStorage"
        },
        "netStoragePath": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "throttledCpCode": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorApiPrioritizationThrottledCpCode:getPropertyRulesBuilderRulesV20230105BehaviorApiPrioritizationThrottledCpCode"
        },
        "throttledStatusCode": {
          "type": "integer"
        },
        "useThrottledCpCode": {
          "type": "boolean"
        },
        "useThrottledStatusCode": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorApiPrioritizationCloudletPolicy:getPropertyRulesBuilderRulesV20230105BehaviorApiPrioritizationCloudletPolicy": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorApiPrioritizationNetStorage:getPropertyRulesBuilderRulesV20230105BehaviorApiPrioritizationNetStorage": {
      "properties": {
        "cpCode": {
          "type": "integer"
        },
        "downloadDomainName": {
          "type": "string"
        },
        "g2oToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorApiPrioritizationThrottledCpCode:getPropertyRulesBuilderRulesV20230105BehaviorApiPrioritizationThrottledCpCode": {
      "properties": {
        "cpCodeLimits": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorApiPrioritizationThrottledCpCodeCpCodeLimits:getPropertyRulesBuilderRulesV20230105BehaviorApiPrioritizationThrottledCpCodeCpCodeLimits"
        },
        "createdDate": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorApiPrioritizationThrottledCpCodeCpCodeLimits:getPropertyRulesBuilderRulesV20230105BehaviorApiPrioritizationThrottledCpCodeCpCodeLimits": {
      "properties": {
        "currentCapacity": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "limitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorApplicationLoadBalancer:getPropertyRulesBuilderRulesV20230105BehaviorApplicationLoadBalancer": {
      "properties": {
        "allDownNetStorage": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorApplicationLoadBalancerAllDownNetStorage:getPropertyRulesBuilderRulesV20230105BehaviorApplicationLoadBalancerAllDownNetStorage"
        },
        "allDownNetStorageFile": {
          "type": "string"
        },
        "allDownStatusCode": {
          "type": "string"
        },
        "allDownTitle": {
          "type": "string"
        },
        "allowCachePrefresh": {
          "type": "boolean"
        },
        "cachedContentTitle": {
          "type": "string"
        },
        "cloudletPolicy": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorApplicationLoadBalancerCloudletPolicy:getPropertyRulesBuilderRulesV20230105BehaviorApplicationLoadBalancerCloudletPolicy"
        },
        "enabled": {
          "type": "boolean"
        },
        "failoverAttemptsThreshold": {
          "type": "integer"
        },
        "failoverMode": {
          "type": "string"
        },
        "failoverOriginMaps": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorApplicationLoadBalancerFailoverOriginMap:getPropertyRulesBuilderRulesV20230105BehaviorApplicationLoadBalancerFailoverOriginMap"
          }
        },
        "failoverStatusCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "failoverTitle": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "originCookieName": {
          "type": "string"
        },
        "specifyStickinessCookieDomain": {
          "type": "boolean"
        },
        "stickinessCookieAutomaticSalt": {
          "type": "boolean"
        },
        "stickinessCookieDomain": {
          "type": "string"
        },
        "stickinessCookieSalt": {
          "type": "string"
        },
        "stickinessCookieSetHttpOnlyFlag": {
          "type": "boolean"
        },
        "stickinessCookieType": {
          "type": "string"
        },
        "stickinessDuration": {
          "type": "string"
        },
        "stickinessExpirationDate": {
          "type": "string"
        },
        "stickinessRefresh": {
          "type": "boolean"
        },
        "stickinessTitle": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorApplicationLoadBalancerAllDownNetStorage:getPropertyRulesBuilderRulesV20230105BehaviorApplicationLoadBalancerAllDownNetStorage": {
      "properties": {
        "cpCode": {
          "type": "integer"
        },
        "downloadDomainName": {
          "type": "string"
        },
        "g2oToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorApplicationLoadBalancerCloudletPolicy:getPropertyRulesBuilderRulesV20230105BehaviorApplicationLoadBalancerCloudletPolicy": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorApplicationLoadBalancerFailoverOriginMap:getPropertyRulesBuilderRulesV20230105BehaviorApplicationLoadBalancerFailoverOriginMap": {
      "properties": {
        "fromOriginId": {
          "type": "string"
        },
        "toOriginIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAudienceSegmentation:getPropertyRulesBuilderRulesV20230105BehaviorAudienceSegmentation": {
      "properties": {
        "cloudletPolicy": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAudienceSegmentationCloudletPolicy:getPropertyRulesBuilderRulesV20230105BehaviorAudienceSegmentationCloudletPolicy"
        },
        "cloudletSharedPolicy": {
          "type": "integer"
        },
        "enabled": {
          "type": "boolean"
        },
        "isSharedPolicy": {
          "type": "boolean"
        },
        "label": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "populationCookieAutomaticSalt": {
          "type": "boolean"
        },
        "populationCookieDomain": {
          "type": "string"
        },
        "populationCookieIncludeRuleName": {
          "type": "boolean"
        },
        "populationCookieSalt": {
          "type": "string"
        },
        "populationCookieType": {
          "type": "string"
        },
        "populationDuration": {
          "type": "string"
        },
        "populationRefresh": {
          "type": "boolean"
        },
        "populationTitle": {
          "type": "string"
        },
        "segmentTrackingCookieName": {
          "type": "string"
        },
        "segmentTrackingCustomHeader": {
          "type": "string"
        },
        "segmentTrackingMethod": {
          "type": "string"
        },
        "segmentTrackingQueryParam": {
          "type": "string"
        },
        "segmentTrackingTitle": {
          "type": "string"
        },
        "specifyPopulationCookieDomain": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAudienceSegmentationCloudletPolicy:getPropertyRulesBuilderRulesV20230105BehaviorAudienceSegmentationCloudletPolicy": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorAutoDomainValidation:getPropertyRulesBuilderRulesV20230105BehaviorAutoDomainValidation": {
      "properties": {
        "autodv": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorBaseDirectory:getPropertyRulesBuilderRulesV20230105BehaviorBaseDirectory": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorBossBeaconing:getPropertyRulesBuilderRulesV20230105BehaviorBossBeaconing": {
      "properties": {
        "conditionalErrorPattern": {
          "type": "string"
        },
        "conditionalHttpStatuses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "conditionalSamplingFrequency": {
          "type": "string"
        },
        "cpcodes": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "forwardType": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "requestType": {
          "type": "string"
        },
        "samplingFrequency": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorBreadcrumbs:getPropertyRulesBuilderRulesV20230105BehaviorBreadcrumbs": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "loggingEnabled": {
          "type": "boolean"
        },
        "optMode": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorBreakConnection:getPropertyRulesBuilderRulesV20230105BehaviorBreakConnection": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorBrotli:getPropertyRulesBuilderRulesV20230105BehaviorBrotli": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCacheError:getPropertyRulesBuilderRulesV20230105BehaviorCacheError": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "preserveStale": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "ttl": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCacheId:getPropertyRulesBuilderRulesV20230105BehaviorCacheId": {
      "properties": {
        "elements": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includeValue": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "optional": {
          "type": "boolean"
        },
        "rule": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "variableName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCacheKeyIgnoreCase:getPropertyRulesBuilderRulesV20230105BehaviorCacheKeyIgnoreCase": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCacheKeyQueryParams:getPropertyRulesBuilderRulesV20230105BehaviorCacheKeyQueryParams": {
      "properties": {
        "behavior": {
          "type": "string"
        },
        "exactMatch": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "parameters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCacheKeyRewrite:getPropertyRulesBuilderRulesV20230105BehaviorCacheKeyRewrite": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "purgeKey": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCachePost:getPropertyRulesBuilderRulesV20230105BehaviorCachePost": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "useBody": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCacheRedirect:getPropertyRulesBuilderRulesV20230105BehaviorCacheRedirect": {
      "properties": {
        "enabled": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCacheTag:getPropertyRulesBuilderRulesV20230105BehaviorCacheTag": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "tag": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCacheTagVisible:getPropertyRulesBuilderRulesV20230105BehaviorCacheTagVisible": {
      "properties": {
        "behavior": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCaching:getPropertyRulesBuilderRulesV20230105BehaviorCaching": {
      "properties": {
        "behavior": {
          "type": "string"
        },
        "cacheControlDirectives": {
          "type": "string"
        },
        "cacheabilitySettings": {
          "type": "string"
        },
        "defaultTtl": {
          "type": "string"
        },
        "enhancedRfcSupport": {
          "type": "boolean"
        },
        "expirationSettings": {
          "type": "string"
        },
        "honorMaxAge": {
          "type": "boolean"
        },
        "honorMustRevalidate": {
          "type": "boolean"
        },
        "honorNoCache": {
          "type": "boolean"
        },
        "honorNoStore": {
          "type": "boolean"
        },
        "honorPrivate": {
          "type": "boolean"
        },
        "honorProxyRevalidate": {
          "type": "boolean"
        },
        "honorSMaxage": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "mustRevalidate": {
          "type": "boolean"
        },
        "revalidationSettings": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "ttl": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCentralAuthorization:getPropertyRulesBuilderRulesV20230105BehaviorCentralAuthorization": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorChaseRedirects:getPropertyRulesBuilderRulesV20230105BehaviorChaseRedirects": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "limit": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "serve404": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorClientCharacteristics:getPropertyRulesBuilderRulesV20230105BehaviorClientCharacteristics": {
      "properties": {
        "country": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCloudInterconnects:getPropertyRulesBuilderRulesV20230105BehaviorCloudInterconnects": {
      "properties": {
        "cloudLocations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCloudWrapper:getPropertyRulesBuilderRulesV20230105BehaviorCloudWrapper": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "location": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCloudWrapperAdvanced:getPropertyRulesBuilderRulesV20230105BehaviorCloudWrapperAdvanced": {
      "properties": {
        "customFailoverMap": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "failoverMap": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorConditionalOrigin:getPropertyRulesBuilderRulesV20230105BehaviorConditionalOrigin": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "originId": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorConstructResponse:getPropertyRulesBuilderRulesV20230105BehaviorConstructResponse": {
      "properties": {
        "body": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "forceEviction": {
          "type": "boolean"
        },
        "ignorePurge": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "responseCode": {
          "type": "integer"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorContentCharacteristics:getPropertyRulesBuilderRulesV20230105BehaviorContentCharacteristics": {
      "properties": {
        "catalogSize": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "objectSize": {
          "type": "string"
        },
        "popularityDistribution": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorContentCharacteristicsAmd:getPropertyRulesBuilderRulesV20230105BehaviorContentCharacteristicsAmd": {
      "properties": {
        "catalogSize": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "dash": {
          "type": "boolean"
        },
        "hds": {
          "type": "boolean"
        },
        "hls": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "popularityDistribution": {
          "type": "string"
        },
        "segmentDurationDash": {
          "type": "string"
        },
        "segmentDurationDashCustom": {
          "type": "integer"
        },
        "segmentDurationHds": {
          "type": "string"
        },
        "segmentDurationHdsCustom": {
          "type": "integer"
        },
        "segmentDurationHls": {
          "type": "string"
        },
        "segmentDurationHlsCustom": {
          "type": "number"
        },
        "segmentDurationSmooth": {
          "type": "string"
        },
        "segmentDurationSmoothCustom": {
          "type": "number"
        },
        "segmentSizeDash": {
          "type": "string"
        },
        "segmentSizeHds": {
          "type": "string"
        },
        "segmentSizeHls": {
          "type": "string"
        },
        "segmentSizeSmooth": {
          "type": "string"
        },
        "smooth": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorContentCharacteristicsDd:getPropertyRulesBuilderRulesV20230105BehaviorContentCharacteristicsDd": {
      "properties": {
        "catalogSize": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "objectSize": {
          "type": "string"
        },
        "optimizeOption": {
          "type": "boolean"
        },
        "popularityDistribution": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorContentCharacteristicsWsdLargeFile:getPropertyRulesBuilderRulesV20230105BehaviorContentCharacteristicsWsdLargeFile": {
      "properties": {
        "catalogSize": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "objectSize": {
          "type": "string"
        },
        "popularityDistribution": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorContentCharacteristicsWsdLive:getPropertyRulesBuilderRulesV20230105BehaviorContentCharacteristicsWsdLive": {
      "properties": {
        "catalogSize": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "dash": {
          "type": "boolean"
        },
        "hds": {
          "type": "boolean"
        },
        "hls": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "popularityDistribution": {
          "type": "string"
        },
        "segmentDurationDash": {
          "type": "string"
        },
        "segmentDurationHds": {
          "type": "string"
        },
        "segmentDurationHls": {
          "type": "string"
        },
        "segmentDurationSmooth": {
          "type": "string"
        },
        "segmentSizeDash": {
          "type": "string"
        },
        "segmentSizeHds": {
          "type": "string"
        },
        "segmentSizeHls": {
          "type": "string"
        },
        "segmentSizeSmooth": {
          "type": "string"
        },
        "smooth": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorContentCharacteristicsWsdVod:getPropertyRulesBuilderRulesV20230105BehaviorContentCharacteristicsWsdVod": {
      "properties": {
        "catalogSize": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "dash": {
          "type": "boolean"
        },
        "hds": {
          "type": "boolean"
        },
        "hls": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "popularityDistribution": {
          "type": "string"
        },
        "segmentDurationDash": {
          "type": "string"
        },
        "segmentDurationHds": {
          "type": "string"
        },
        "segmentDurationHls": {
          "type": "string"
        },
        "segmentDurationSmooth": {
          "type": "string"
        },
        "segmentSizeDash": {
          "type": "string"
        },
        "segmentSizeHds": {
          "type": "string"
        },
        "segmentSizeHls": {
          "type": "string"
        },
        "segmentSizeSmooth": {
          "type": "string"
        },
        "smooth": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorContentPrePosition:getPropertyRulesBuilderRulesV20230105BehaviorContentPrePosition": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "firstLocation": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "secondLocation": {
          "type": "string"
        },
        "sourceType": {
          "type": "string"
        },
        "targets": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorContentTargetingProtection:getPropertyRulesBuilderRulesV20230105BehaviorContentTargetingProtection": {
      "properties": {
        "countries": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dmas": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enableGeoProtection": {
          "type": "boolean"
        },
        "enableGeoRedirectOnDeny": {
          "type": "boolean"
        },
        "enableIpProtection": {
          "type": "boolean"
        },
        "enableIpRedirectOnDeny": {
          "type": "boolean"
        },
        "enableReferrerProtection": {
          "type": "boolean"
        },
        "enableReferrerRedirectOnDeny": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "geoProtectionMode": {
          "type": "string"
        },
        "geoProtectionTitle": {
          "type": "string"
        },
        "geoRedirectUrl": {
          "type": "string"
        },
        "ipAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ipProtectionMode": {
          "type": "string"
        },
        "ipProtectionTitle": {
          "type": "string"
        },
        "ipRedirectUrl": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "overrideIpAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "referrerDomains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "referrerProtectionMode": {
          "type": "string"
        },
        "referrerProtectionTitle": {
          "type": "string"
        },
        "referrerRedirectUrl": {
          "type": "string"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCorsSupport:getPropertyRulesBuilderRulesV20230105BehaviorCorsSupport": {
      "properties": {
        "allowCredentials": {
          "type": "boolean"
        },
        "allowHeaders": {
          "type": "string"
        },
        "allowOrigins": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "exposeHeaders": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "headers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locked": {
          "type": "boolean"
        },
        "methods": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "origins": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "preflightMaxAge": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCpCode:getPropertyRulesBuilderRulesV20230105BehaviorCpCode": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCpCodeValue:getPropertyRulesBuilderRulesV20230105BehaviorCpCodeValue"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCpCodeValue:getPropertyRulesBuilderRulesV20230105BehaviorCpCodeValue": {
      "properties": {
        "cpCodeLimits": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCpCodeValueCpCodeLimits:getPropertyRulesBuilderRulesV20230105BehaviorCpCodeValueCpCodeLimits"
        },
        "createdDate": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCpCodeValueCpCodeLimits:getPropertyRulesBuilderRulesV20230105BehaviorCpCodeValueCpCodeLimits": {
      "properties": {
        "currentCapacity": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "limitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorCustomBehavior:getPropertyRulesBuilderRulesV20230105BehaviorCustomBehavior": {
      "properties": {
        "behaviorId": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDatastream:getPropertyRulesBuilderRulesV20230105BehaviorDatastream": {
      "properties": {
        "beaconStreamTitle": {
          "type": "string"
        },
        "collectMidgressTraffic": {
          "type": "boolean"
        },
        "datastreamIds": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "logEnabled": {
          "type": "boolean"
        },
        "logStreamName": {
          "type": "integer"
        },
        "logStreamTitle": {
          "type": "string"
        },
        "samplingPercentage": {
          "type": "integer"
        },
        "streamType": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDcp:getPropertyRulesBuilderRulesV20230105BehaviorDcp": {
      "properties": {
        "anonymous": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "gwenabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "namespaceId": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "tlsenabled": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        },
        "wsenabled": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDcpAuthHmacTransformation:getPropertyRulesBuilderRulesV20230105BehaviorDcpAuthHmacTransformation": {
      "properties": {
        "hashConversionAlgorithm": {
          "type": "string"
        },
        "hashConversionKey": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDcpAuthRegexTransformation:getPropertyRulesBuilderRulesV20230105BehaviorDcpAuthRegexTransformation": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "regexPattern": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDcpAuthSubstringTransformation:getPropertyRulesBuilderRulesV20230105BehaviorDcpAuthSubstringTransformation": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "substringEnd": {
          "type": "string"
        },
        "substringStart": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDcpAuthVariableExtractor:getPropertyRulesBuilderRulesV20230105BehaviorDcpAuthVariableExtractor": {
      "properties": {
        "certificateField": {
          "type": "string"
        },
        "dcpMutualAuthProcessingVariableId": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDcpDefaultAuthzGroups:getPropertyRulesBuilderRulesV20230105BehaviorDcpDefaultAuthzGroups": {
      "properties": {
        "groupNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDcpDevRelations:getPropertyRulesBuilderRulesV20230105BehaviorDcpDevRelations": {
      "properties": {
        "customValues": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "hostname": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "path": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDcpRealTimeAuth:getPropertyRulesBuilderRulesV20230105BehaviorDcpRealTimeAuth": {
      "properties": {
        "extractHostname": {
          "type": "boolean"
        },
        "extractJurisdiction": {
          "type": "boolean"
        },
        "extractNamespace": {
          "type": "boolean"
        },
        "hostnameClaim": {
          "type": "string"
        },
        "jurisdictionClaim": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "namespaceClaim": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDeliveryReceipt:getPropertyRulesBuilderRulesV20230105BehaviorDeliveryReceipt": {
      "properties": {
        "enabled": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDenyAccess:getPropertyRulesBuilderRulesV20230105BehaviorDenyAccess": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "reason": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDenyDirectFailoverAccess:getPropertyRulesBuilderRulesV20230105BehaviorDenyDirectFailoverAccess": {
      "properties": {
        "enabled": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDeviceCharacteristicCacheId:getPropertyRulesBuilderRulesV20230105BehaviorDeviceCharacteristicCacheId": {
      "properties": {
        "elements": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDeviceCharacteristicHeader:getPropertyRulesBuilderRulesV20230105BehaviorDeviceCharacteristicHeader": {
      "properties": {
        "elements": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDnsAsyncRefresh:getPropertyRulesBuilderRulesV20230105BehaviorDnsAsyncRefresh": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "timeout": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDnsPrefresh:getPropertyRulesBuilderRulesV20230105BehaviorDnsPrefresh": {
      "properties": {
        "delay": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "timeout": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDowngradeProtocol:getPropertyRulesBuilderRulesV20230105BehaviorDowngradeProtocol": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDownloadCompleteMarker:getPropertyRulesBuilderRulesV20230105BehaviorDownloadCompleteMarker": {
      "properties": {
        "enabled": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDownloadNotification:getPropertyRulesBuilderRulesV20230105BehaviorDownloadNotification": {
      "properties": {
        "enabled": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDownstreamCache:getPropertyRulesBuilderRulesV20230105BehaviorDownstreamCache": {
      "properties": {
        "allowBehavior": {
          "type": "string"
        },
        "behavior": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "sendHeaders": {
          "type": "string"
        },
        "sendPrivate": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "ttl": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDynamicThroughtputOptimization:getPropertyRulesBuilderRulesV20230105BehaviorDynamicThroughtputOptimization": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDynamicThroughtputOptimizationOverride:getPropertyRulesBuilderRulesV20230105BehaviorDynamicThroughtputOptimizationOverride": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "throughput": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorDynamicWebContent:getPropertyRulesBuilderRulesV20230105BehaviorDynamicWebContent": {
      "properties": {
        "imageCompression": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "prefetch": {
          "type": "boolean"
        },
        "realUserMonitoring": {
          "type": "boolean"
        },
        "sureRoute": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEcmsBulkUpload:getPropertyRulesBuilderRulesV20230105BehaviorEcmsBulkUpload": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEcmsDatabase:getPropertyRulesBuilderRulesV20230105BehaviorEcmsDatabase": {
      "properties": {
        "database": {
          "type": "string"
        },
        "extractLocation": {
          "type": "string"
        },
        "headerName": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "queryParameterName": {
          "type": "string"
        },
        "regexPattern": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEcmsDataset:getPropertyRulesBuilderRulesV20230105BehaviorEcmsDataset": {
      "properties": {
        "dataset": {
          "type": "string"
        },
        "extractLocation": {
          "type": "string"
        },
        "headerName": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "queryParameterName": {
          "type": "string"
        },
        "regexPattern": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEcmsObjectKey:getPropertyRulesBuilderRulesV20230105BehaviorEcmsObjectKey": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "regex": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEdgeConnect:getPropertyRulesBuilderRulesV20230105BehaviorEdgeConnect": {
      "properties": {
        "aggregateLines": {
          "type": "string"
        },
        "aggregateSize": {
          "type": "string"
        },
        "aggregateTime": {
          "type": "string"
        },
        "apiConnector": {
          "type": "string"
        },
        "apiDataElements": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "destinationHostname": {
          "type": "string"
        },
        "destinationPath": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "overrideAggregateSettings": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEdgeLoadBalancingAdvanced:getPropertyRulesBuilderRulesV20230105BehaviorEdgeLoadBalancingAdvanced": {
      "properties": {
        "description": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "xml": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEdgeLoadBalancingDataCenter:getPropertyRulesBuilderRulesV20230105BehaviorEdgeLoadBalancingDataCenter": {
      "properties": {
        "cookieName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "enableFailover": {
          "type": "boolean"
        },
        "failoverRules": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEdgeLoadBalancingDataCenterFailoverRule:getPropertyRulesBuilderRulesV20230105BehaviorEdgeLoadBalancingDataCenterFailoverRule"
          }
        },
        "failoverTitle": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "originId": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEdgeLoadBalancingDataCenterFailoverRule:getPropertyRulesBuilderRulesV20230105BehaviorEdgeLoadBalancingDataCenterFailoverRule": {
      "properties": {
        "absolutePath": {
          "type": "boolean"
        },
        "contextRoot": {
          "type": "string"
        },
        "failoverHostname": {
          "type": "string"
        },
        "modifyRequest": {
          "type": "boolean"
        },
        "overrideHostname": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEdgeLoadBalancingOrigin:getPropertyRulesBuilderRulesV20230105BehaviorEdgeLoadBalancingOrigin": {
      "properties": {
        "cookieName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "enableSessionPersistence": {
          "type": "boolean"
        },
        "hostname": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "sessionPersistenceTitle": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEdgeOriginAuthorization:getPropertyRulesBuilderRulesV20230105BehaviorEdgeOriginAuthorization": {
      "properties": {
        "cookieName": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEdgeRedirector:getPropertyRulesBuilderRulesV20230105BehaviorEdgeRedirector": {
      "properties": {
        "cloudletPolicy": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEdgeRedirectorCloudletPolicy:getPropertyRulesBuilderRulesV20230105BehaviorEdgeRedirectorCloudletPolicy"
        },
        "cloudletSharedPolicy": {
          "type": "integer"
        },
        "enabled": {
          "type": "boolean"
        },
        "isSharedPolicy": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEdgeRedirectorCloudletPolicy:getPropertyRulesBuilderRulesV20230105BehaviorEdgeRedirectorCloudletPolicy": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEdgeScape:getPropertyRulesBuilderRulesV20230105BehaviorEdgeScape": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEdgeSideIncludes:getPropertyRulesBuilderRulesV20230105BehaviorEdgeSideIncludes": {
      "properties": {
        "detectInjection": {
          "type": "boolean"
        },
        "enableViaHttp": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "i18nCharsets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "i18nStatus": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "passClientIp": {
          "type": "boolean"
        },
        "passSetCookie": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEdgeWorker:getPropertyRulesBuilderRulesV20230105BehaviorEdgeWorker": {
      "properties": {
        "createEdgeWorker": {
          "type": "string"
        },
        "edgeWorkerId": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "resourceTier": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEnhancedAkamaiProtocol:getPropertyRulesBuilderRulesV20230105BehaviorEnhancedAkamaiProtocol": {
      "properties": {
        "display": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEnhancedProxyDetection:getPropertyRulesBuilderRulesV20230105BehaviorEnhancedProxyDetection": {
      "properties": {
        "anonymousVpn": {
          "type": "string"
        },
        "bestPracticeAction": {
          "type": "string"
        },
        "bestPracticeRedirecturl": {
          "type": "string"
        },
        "detectAnonymousVpn": {
          "type": "boolean"
        },
        "detectAnonymousVpnAction": {
          "type": "string"
        },
        "detectAnonymousVpnRedirecturl": {
          "type": "string"
        },
        "detectHostingProvider": {
          "type": "boolean"
        },
        "detectHostingProviderAction": {
          "type": "string"
        },
        "detectHostingProviderRedirecturl": {
          "type": "string"
        },
        "detectPublicProxy": {
          "type": "boolean"
        },
        "detectPublicProxyAction": {
          "type": "string"
        },
        "detectPublicProxyRedirecturl": {
          "type": "string"
        },
        "detectResidentialProxy": {
          "type": "boolean"
        },
        "detectResidentialProxyAction": {
          "type": "string"
        },
        "detectResidentialProxyRedirecturl": {
          "type": "string"
        },
        "detectSmartDnsProxy": {
          "type": "boolean"
        },
        "detectSmartDnsProxyAction": {
          "type": "string"
        },
        "detectSmartDnsProxyRedirecturl": {
          "type": "string"
        },
        "detectTorExitNode": {
          "type": "boolean"
        },
        "detectTorExitNodeAction": {
          "type": "string"
        },
        "detectTorExitNodeRedirecturl": {
          "type": "string"
        },
        "detectVpnDataCenter": {
          "type": "boolean"
        },
        "detectVpnDataCenterAction": {
          "type": "string"
        },
        "detectVpnDataCenterRedirecturl": {
          "type": "string"
        },
        "enableConfigurationMode": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "forwardHeaderEnrichment": {
          "type": "boolean"
        },
        "hostingProvider": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "publicProxy": {
          "type": "string"
        },
        "residentialProxy": {
          "type": "string"
        },
        "smartDnsProxy": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "torExitNode": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "vpnDataCenter": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorEpdForwardHeaderEnrichment:getPropertyRulesBuilderRulesV20230105BehaviorEpdForwardHeaderEnrichment": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorFailAction:getPropertyRulesBuilderRulesV20230105BehaviorFailAction": {
      "properties": {
        "actionType": {
          "type": "string"
        },
        "allowFcmParentOverride": {
          "type": "boolean"
        },
        "cexCustomPath": {
          "type": "boolean"
        },
        "cexHostname": {
          "type": "string"
        },
        "cexPath": {
          "type": "string"
        },
        "contentCustomPath": {
          "type": "boolean"
        },
        "contentHostname": {
          "type": "string"
        },
        "contentPath": {
          "type": "string"
        },
        "cpCode": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorFailActionCpCode:getPropertyRulesBuilderRulesV20230105BehaviorFailActionCpCode"
        },
        "dynamicCustomPath": {
          "type": "boolean"
        },
        "dynamicMethod": {
          "type": "string"
        },
        "dynamicPath": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "modifyProtocol": {
          "type": "boolean"
        },
        "netStorageHostname": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorFailActionNetStorageHostname:getPropertyRulesBuilderRulesV20230105BehaviorFailActionNetStorageHostname"
        },
        "netStoragePath": {
          "type": "string"
        },
        "preserveQueryString": {
          "type": "boolean"
        },
        "protocol": {
          "type": "string"
        },
        "redirectCustomPath": {
          "type": "boolean"
        },
        "redirectHostname": {
          "type": "string"
        },
        "redirectHostnameType": {
          "type": "string"
        },
        "redirectMethod": {
          "type": "integer"
        },
        "redirectPath": {
          "type": "string"
        },
        "saasCnameEnabled": {
          "type": "boolean"
        },
        "saasCnameLevel": {
          "type": "integer"
        },
        "saasCookie": {
          "type": "string"
        },
        "saasQueryString": {
          "type": "string"
        },
        "saasRegex": {
          "type": "string"
        },
        "saasReplace": {
          "type": "string"
        },
        "saasSuffix": {
          "type": "string"
        },
        "saasType": {
          "type": "string"
        },
        "statusCode": {
          "type": "integer"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorFailActionCpCode:getPropertyRulesBuilderRulesV20230105BehaviorFailActionCpCode": {
      "properties": {
        "cpCodeLimits": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorFailActionCpCodeCpCodeLimits:getPropertyRulesBuilderRulesV20230105BehaviorFailActionCpCodeCpCodeLimits"
        },
        "createdDate": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorFailActionCpCodeCpCodeLimits:getPropertyRulesBuilderRulesV20230105BehaviorFailActionCpCodeCpCodeLimits": {
      "properties": {
        "currentCapacity": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "limitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorFailActionNetStorageHostname:getPropertyRulesBuilderRulesV20230105BehaviorFailActionNetStorageHostname": {
      "properties": {
        "cpCode": {
          "type": "integer"
        },
        "downloadDomainName": {
          "type": "string"
        },
        "g2oToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorFailoverBotManagerFeatureCompatibility:getPropertyRulesBuilderRulesV20230105BehaviorFailoverBotManagerFeatureCompatibility": {
      "properties": {
        "compatibility": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorFastInvalidate:getPropertyRulesBuilderRulesV20230105BehaviorFastInvalidate": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorFirstPartyMarketing:getPropertyRulesBuilderRulesV20230105BehaviorFirstPartyMarketing": {
      "properties": {
        "cloudletPolicy": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorFirstPartyMarketingCloudletPolicy:getPropertyRulesBuilderRulesV20230105BehaviorFirstPartyMarketingCloudletPolicy"
        },
        "enabled": {
          "type": "boolean"
        },
        "javaScriptInsertionRule": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "mediaMathPrefix": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorFirstPartyMarketingCloudletPolicy:getPropertyRulesBuilderRulesV20230105BehaviorFirstPartyMarketingCloudletPolicy": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorFirstPartyMarketingPlus:getPropertyRulesBuilderRulesV20230105BehaviorFirstPartyMarketingPlus": {
      "properties": {
        "cloudletPolicy": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorFirstPartyMarketingPlusCloudletPolicy:getPropertyRulesBuilderRulesV20230105BehaviorFirstPartyMarketingPlusCloudletPolicy"
        },
        "enabled": {
          "type": "boolean"
        },
        "javaScriptInsertionRule": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "mediaMathPrefix": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorFirstPartyMarketingPlusCloudletPolicy:getPropertyRulesBuilderRulesV20230105BehaviorFirstPartyMarketingPlusCloudletPolicy": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorForwardRewrite:getPropertyRulesBuilderRulesV20230105BehaviorForwardRewrite": {
      "properties": {
        "cloudletPolicy": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorForwardRewriteCloudletPolicy:getPropertyRulesBuilderRulesV20230105BehaviorForwardRewriteCloudletPolicy"
        },
        "cloudletSharedPolicy": {
          "type": "integer"
        },
        "enabled": {
          "type": "boolean"
        },
        "isSharedPolicy": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorForwardRewriteCloudletPolicy:getPropertyRulesBuilderRulesV20230105BehaviorForwardRewriteCloudletPolicy": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorFrontEndOptimization:getPropertyRulesBuilderRulesV20230105BehaviorFrontEndOptimization": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorG2oheader:getPropertyRulesBuilderRulesV20230105BehaviorG2oheader": {
      "properties": {
        "customSignStrings": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dataHeader": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "encodingVersion": {
          "type": "integer"
        },
        "locked": {
          "type": "boolean"
        },
        "nonce": {
          "type": "string"
        },
        "secretKey": {
          "type": "string"
        },
        "signedHeader": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "useCustomSignString": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorGlobalRequestNumber:getPropertyRulesBuilderRulesV20230105BehaviorGlobalRequestNumber": {
      "properties": {
        "headerName": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "outputOption": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "variableName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorGraphqlCaching:getPropertyRulesBuilderRulesV20230105BehaviorGraphqlCaching": {
      "properties": {
        "advanced": {
          "type": "string"
        },
        "cacheResponsesWithErrors": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "operationsJsonBodyParameterName": {
          "type": "string"
        },
        "operationsUrlQueryParameterName": {
          "type": "string"
        },
        "postRequestProcessingErrorHandling": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorGzipResponse:getPropertyRulesBuilderRulesV20230105BehaviorGzipResponse": {
      "properties": {
        "behavior": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorHdDataAdvanced:getPropertyRulesBuilderRulesV20230105BehaviorHdDataAdvanced": {
      "properties": {
        "description": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "xml": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorHealthDetection:getPropertyRulesBuilderRulesV20230105BehaviorHealthDetection": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "maximumReconnects": {
          "type": "integer"
        },
        "retryCount": {
          "type": "integer"
        },
        "retryInterval": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorHsafEipBinding:getPropertyRulesBuilderRulesV20230105BehaviorHsafEipBinding": {
      "properties": {
        "customExtractedSerial": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "hashMaxValue": {
          "type": "integer"
        },
        "hashMinValue": {
          "type": "integer"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "tier": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorHttp2:getPropertyRulesBuilderRulesV20230105BehaviorHttp2": {
      "properties": {
        "enabled": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorHttp3:getPropertyRulesBuilderRulesV20230105BehaviorHttp3": {
      "properties": {
        "enable": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorHttpStrictTransportSecurity:getPropertyRulesBuilderRulesV20230105BehaviorHttpStrictTransportSecurity": {
      "properties": {
        "enable": {
          "type": "boolean"
        },
        "includeSubDomains": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "maxAge": {
          "type": "string"
        },
        "preload": {
          "type": "boolean"
        },
        "redirect": {
          "type": "boolean"
        },
        "redirectStatusCode": {
          "type": "integer"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorHttpToHttpsUpgrade:getPropertyRulesBuilderRulesV20230105BehaviorHttpToHttpsUpgrade": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "upgrade": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImOverride:getPropertyRulesBuilderRulesV20230105BehaviorImOverride": {
      "properties": {
        "dpr": {
          "type": "number"
        },
        "dprvar": {
          "type": "string"
        },
        "excludeAllQueryParameters": {
          "type": "boolean"
        },
        "excludedQueryParameters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "format": {
          "type": "string"
        },
        "formatvar": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "override": {
          "type": "string"
        },
        "policy": {
          "type": "string"
        },
        "policyvar": {
          "type": "string"
        },
        "policyvarIMvar": {
          "type": "string"
        },
        "policyvarName": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "typesel": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "width": {
          "type": "number"
        },
        "widthvar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImageAndVideoManager:getPropertyRulesBuilderRulesV20230105BehaviorImageAndVideoManager": {
      "properties": {
        "applyBestFileType": {
          "type": "boolean"
        },
        "cpCodeOriginal": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImageAndVideoManagerCpCodeOriginal:getPropertyRulesBuilderRulesV20230105BehaviorImageAndVideoManagerCpCodeOriginal"
        },
        "cpCodeTransformed": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImageAndVideoManagerCpCodeTransformed:getPropertyRulesBuilderRulesV20230105BehaviorImageAndVideoManagerCpCodeTransformed"
        },
        "enabled": {
          "type": "boolean"
        },
        "imageSet": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "policySetType": {
          "type": "string"
        },
        "resize": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "videoSet": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImageAndVideoManagerCpCodeOriginal:getPropertyRulesBuilderRulesV20230105BehaviorImageAndVideoManagerCpCodeOriginal": {
      "properties": {
        "cpCodeLimits": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImageAndVideoManagerCpCodeOriginalCpCodeLimits:getPropertyRulesBuilderRulesV20230105BehaviorImageAndVideoManagerCpCodeOriginalCpCodeLimits"
        },
        "createdDate": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImageAndVideoManagerCpCodeOriginalCpCodeLimits:getPropertyRulesBuilderRulesV20230105BehaviorImageAndVideoManagerCpCodeOriginalCpCodeLimits": {
      "properties": {
        "currentCapacity": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "limitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImageAndVideoManagerCpCodeTransformed:getPropertyRulesBuilderRulesV20230105BehaviorImageAndVideoManagerCpCodeTransformed": {
      "properties": {
        "cpCodeLimits": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImageAndVideoManagerCpCodeTransformedCpCodeLimits:getPropertyRulesBuilderRulesV20230105BehaviorImageAndVideoManagerCpCodeTransformedCpCodeLimits"
        },
        "createdDate": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImageAndVideoManagerCpCodeTransformedCpCodeLimits:getPropertyRulesBuilderRulesV20230105BehaviorImageAndVideoManagerCpCodeTransformedCpCodeLimits": {
      "properties": {
        "currentCapacity": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "limitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImageManager:getPropertyRulesBuilderRulesV20230105BehaviorImageManager": {
      "properties": {
        "advanced": {
          "type": "boolean"
        },
        "apiReferenceTitle": {
          "type": "string"
        },
        "applyBestFileType": {
          "type": "boolean"
        },
        "cpCodeOriginal": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImageManagerCpCodeOriginal:getPropertyRulesBuilderRulesV20230105BehaviorImageManagerCpCodeOriginal"
        },
        "cpCodeTransformed": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImageManagerCpCodeTransformed:getPropertyRulesBuilderRulesV20230105BehaviorImageManagerCpCodeTransformed"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "policySet": {
          "type": "string"
        },
        "policyToken": {
          "type": "string"
        },
        "policyTokenDefault": {
          "type": "string"
        },
        "resize": {
          "type": "boolean"
        },
        "settingsTitle": {
          "type": "string"
        },
        "superCacheRegion": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "trafficTitle": {
          "type": "string"
        },
        "useExistingPolicySet": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImageManagerCpCodeOriginal:getPropertyRulesBuilderRulesV20230105BehaviorImageManagerCpCodeOriginal": {
      "properties": {
        "cpCodeLimits": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImageManagerCpCodeOriginalCpCodeLimits:getPropertyRulesBuilderRulesV20230105BehaviorImageManagerCpCodeOriginalCpCodeLimits"
        },
        "createdDate": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImageManagerCpCodeOriginalCpCodeLimits:getPropertyRulesBuilderRulesV20230105BehaviorImageManagerCpCodeOriginalCpCodeLimits": {
      "properties": {
        "currentCapacity": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "limitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImageManagerCpCodeTransformed:getPropertyRulesBuilderRulesV20230105BehaviorImageManagerCpCodeTransformed": {
      "properties": {
        "cpCodeLimits": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImageManagerCpCodeTransformedCpCodeLimits:getPropertyRulesBuilderRulesV20230105BehaviorImageManagerCpCodeTransformedCpCodeLimits"
        },
        "createdDate": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImageManagerCpCodeTransformedCpCodeLimits:getPropertyRulesBuilderRulesV20230105BehaviorImageManagerCpCodeTransformedCpCodeLimits": {
      "properties": {
        "currentCapacity": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "limitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImageManagerVideo:getPropertyRulesBuilderRulesV20230105BehaviorImageManagerVideo": {
      "properties": {
        "advanced": {
          "type": "boolean"
        },
        "apiReferenceTitle": {
          "type": "string"
        },
        "applyBestFileType": {
          "type": "boolean"
        },
        "cpCodeOriginal": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImageManagerVideoCpCodeOriginal:getPropertyRulesBuilderRulesV20230105BehaviorImageManagerVideoCpCodeOriginal"
        },
        "cpCodeTransformed": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImageManagerVideoCpCodeTransformed:getPropertyRulesBuilderRulesV20230105BehaviorImageManagerVideoCpCodeTransformed"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "policySet": {
          "type": "string"
        },
        "policyToken": {
          "type": "string"
        },
        "policyTokenDefault": {
          "type": "string"
        },
        "resize": {
          "type": "boolean"
        },
        "settingsTitle": {
          "type": "string"
        },
        "superCacheRegion": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "trafficTitle": {
          "type": "string"
        },
        "useExistingPolicySet": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImageManagerVideoCpCodeOriginal:getPropertyRulesBuilderRulesV20230105BehaviorImageManagerVideoCpCodeOriginal": {
      "properties": {
        "cpCodeLimits": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImageManagerVideoCpCodeOriginalCpCodeLimits:getPropertyRulesBuilderRulesV20230105BehaviorImageManagerVideoCpCodeOriginalCpCodeLimits"
        },
        "createdDate": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImageManagerVideoCpCodeOriginalCpCodeLimits:getPropertyRulesBuilderRulesV20230105BehaviorImageManagerVideoCpCodeOriginalCpCodeLimits": {
      "properties": {
        "currentCapacity": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "limitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImageManagerVideoCpCodeTransformed:getPropertyRulesBuilderRulesV20230105BehaviorImageManagerVideoCpCodeTransformed": {
      "properties": {
        "cpCodeLimits": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImageManagerVideoCpCodeTransformedCpCodeLimits:getPropertyRulesBuilderRulesV20230105BehaviorImageManagerVideoCpCodeTransformedCpCodeLimits"
        },
        "createdDate": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorImageManagerVideoCpCodeTransformedCpCodeLimits:getPropertyRulesBuilderRulesV20230105BehaviorImageManagerVideoCpCodeTransformedCpCodeLimits": {
      "properties": {
        "currentCapacity": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "limitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorInclude:getPropertyRulesBuilderRulesV20230105BehaviorInclude": {
      "properties": {
        "id": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorInputValidation:getPropertyRulesBuilderRulesV20230105BehaviorInputValidation": {
      "properties": {
        "allowLargePostBody": {
          "type": "boolean"
        },
        "cloudletPolicy": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorInputValidationCloudletPolicy:getPropertyRulesBuilderRulesV20230105BehaviorInputValidationCloudletPolicy"
        },
        "enabled": {
          "type": "boolean"
        },
        "failure302Uri": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "penalty302Uri": {
          "type": "string"
        },
        "penalty403NetStoragePath": {
          "type": "string"
        },
        "penaltyAction": {
          "type": "string"
        },
        "penaltyBrandedDenyCacheTtl": {
          "type": "integer"
        },
        "penaltyNetStorage": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorInputValidationPenaltyNetStorage:getPropertyRulesBuilderRulesV20230105BehaviorInputValidationPenaltyNetStorage"
        },
        "penaltyThreshold": {
          "type": "integer"
        },
        "penaltyTitle": {
          "type": "string"
        },
        "resetOnValid": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "userIdentificationByCookie": {
          "type": "boolean"
        },
        "userIdentificationByHeaders": {
          "type": "boolean"
        },
        "userIdentificationByIp": {
          "type": "boolean"
        },
        "userIdentificationByParams": {
          "type": "boolean"
        },
        "userIdentificationKeyCookie": {
          "type": "string"
        },
        "userIdentificationKeyHeaders": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userIdentificationKeyParams": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userIdentificationTitle": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "validateOnOriginHeaderName": {
          "type": "string"
        },
        "validateOnOriginHeaderValue": {
          "type": "string"
        },
        "validateOnOriginResponseCode": {
          "type": "integer"
        },
        "validateOnOriginWith": {
          "type": "string"
        },
        "validationTitle": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorInputValidationCloudletPolicy:getPropertyRulesBuilderRulesV20230105BehaviorInputValidationCloudletPolicy": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorInputValidationPenaltyNetStorage:getPropertyRulesBuilderRulesV20230105BehaviorInputValidationPenaltyNetStorage": {
      "properties": {
        "cpCode": {
          "type": "integer"
        },
        "downloadDomainName": {
          "type": "string"
        },
        "g2oToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorInstant:getPropertyRulesBuilderRulesV20230105BehaviorInstant": {
      "properties": {
        "customLinkRelations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locked": {
          "type": "boolean"
        },
        "prefetchCacheable": {
          "type": "boolean"
        },
        "prefetchHtml": {
          "type": "boolean"
        },
        "prefetchNoStore": {
          "type": "boolean"
        },
        "prefetchNoStoreExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorInstantConfig:getPropertyRulesBuilderRulesV20230105BehaviorInstantConfig": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorLargeFileOptimization:getPropertyRulesBuilderRulesV20230105BehaviorLargeFileOptimization": {
      "properties": {
        "enablePartialObjectCaching": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "maximumSize": {
          "type": "string"
        },
        "minimumSize": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "useVersioning": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorLargeFileOptimizationAdvanced:getPropertyRulesBuilderRulesV20230105BehaviorLargeFileOptimizationAdvanced": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "fragmentSize": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "objectSize": {
          "type": "string"
        },
        "prefetchAfterRequest": {
          "type": "integer"
        },
        "prefetchDuringRequest": {
          "type": "integer"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorLimitBitRate:getPropertyRulesBuilderRulesV20230105BehaviorLimitBitRate": {
      "properties": {
        "bitrateTables": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorLimitBitRateBitrateTable:getPropertyRulesBuilderRulesV20230105BehaviorLimitBitRateBitrateTable"
          }
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "thresholdTables": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorLimitBitRateThresholdTable:getPropertyRulesBuilderRulesV20230105BehaviorLimitBitRateThresholdTable"
          }
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorLimitBitRateBitrateTable:getPropertyRulesBuilderRulesV20230105BehaviorLimitBitRateBitrateTable": {
      "properties": {
        "bitrateUnit": {
          "type": "string"
        },
        "bitrateValue": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorLimitBitRateThresholdTable:getPropertyRulesBuilderRulesV20230105BehaviorLimitBitRateThresholdTable": {
      "properties": {
        "thresholdUnit": {
          "type": "string"
        },
        "thresholdValue": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorLogCustom:getPropertyRulesBuilderRulesV20230105BehaviorLogCustom": {
      "properties": {
        "customLogField": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "logCustomLogField": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorMPulse:getPropertyRulesBuilderRulesV20230105BehaviorMPulse": {
      "properties": {
        "apiKey": {
          "type": "string"
        },
        "bufferSize": {
          "type": "string"
        },
        "configOverride": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "loaderVersion": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "requirePci": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "titleOptional": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorManifestPersonalization:getPropertyRulesBuilderRulesV20230105BehaviorManifestPersonalization": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "hlsEnableDebugHeaders": {
          "type": "boolean"
        },
        "hlsEnabled": {
          "type": "boolean"
        },
        "hlsFilterInBitrateRanges": {
          "type": "string"
        },
        "hlsFilterInBitrates": {
          "type": "string"
        },
        "hlsMode": {
          "type": "string"
        },
        "hlsPreferredBitrate": {
          "type": "string"
        },
        "hlsQueryParamEnabled": {
          "type": "boolean"
        },
        "hlsQueryParamSecretKey": {
          "type": "string"
        },
        "hlsQueryParamTransitionKey": {
          "type": "string"
        },
        "hlsShowAdvanced": {
          "type": "boolean"
        },
        "hlsTitle": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorManifestRerouting:getPropertyRulesBuilderRulesV20230105BehaviorManifestRerouting": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "partner": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorManualServerPush:getPropertyRulesBuilderRulesV20230105BehaviorManualServerPush": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "serverpushlists": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorMediaAcceleration:getPropertyRulesBuilderRulesV20230105BehaviorMediaAcceleration": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorMediaAccelerationQuicOptout:getPropertyRulesBuilderRulesV20230105BehaviorMediaAccelerationQuicOptout": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "optout": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorMediaClient:getPropertyRulesBuilderRulesV20230105BehaviorMediaClient": {
      "properties": {
        "beaconId": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "useHybridHttpUdp": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorMediaFileRetrievalOptimization:getPropertyRulesBuilderRulesV20230105BehaviorMediaFileRetrievalOptimization": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorMediaOriginFailover:getPropertyRulesBuilderRulesV20230105BehaviorMediaOriginFailover": {
      "properties": {
        "cacheErrorResponse": {
          "type": "boolean"
        },
        "cacheWindow": {
          "type": "string"
        },
        "clientResponseCode": {
          "type": "string"
        },
        "detectObjectUnavailable": {
          "type": "boolean"
        },
        "detectObjectUnavailableTitle": {
          "type": "string"
        },
        "detectOriginUnavailable": {
          "type": "boolean"
        },
        "detectOriginUnavailableTitle": {
          "type": "string"
        },
        "detectOriginUnresponsive": {
          "type": "boolean"
        },
        "detectOriginUnresponsiveTitle": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "objectUnavailableAlternateHost": {
          "type": "string"
        },
        "objectUnavailableBackupHost": {
          "type": "string"
        },
        "objectUnavailableBlacklistOriginIp": {
          "type": "boolean"
        },
        "objectUnavailableBlacklistWindow": {
          "type": "string"
        },
        "objectUnavailableChangeProtocol": {
          "type": "boolean"
        },
        "objectUnavailableDetectionLevel": {
          "type": "string"
        },
        "objectUnavailableIncludeQueryString": {
          "type": "boolean"
        },
        "objectUnavailableModifiedPath": {
          "type": "string"
        },
        "objectUnavailableModifyRequestPath": {
          "type": "boolean"
        },
        "objectUnavailableProtocol": {
          "type": "string"
        },
        "objectUnavailableRecovery": {
          "type": "string"
        },
        "objectUnavailableRedirectMethod": {
          "type": "integer"
        },
        "objectUnavailableResponseCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "objectUnavailableRetryLimit": {
          "type": "string"
        },
        "originUnavailableAlternateHost": {
          "type": "string"
        },
        "originUnavailableBackupHost": {
          "type": "string"
        },
        "originUnavailableBlacklistOriginIp": {
          "type": "boolean"
        },
        "originUnavailableBlacklistWindow": {
          "type": "string"
        },
        "originUnavailableChangeProtocol": {
          "type": "boolean"
        },
        "originUnavailableDetectionLevel": {
          "type": "string"
        },
        "originUnavailableIncludeQueryString": {
          "type": "boolean"
        },
        "originUnavailableModifiedPath": {
          "type": "string"
        },
        "originUnavailableModifyRequestPath": {
          "type": "boolean"
        },
        "originUnavailableProtocol": {
          "type": "string"
        },
        "originUnavailableRecovery": {
          "type": "string"
        },
        "originUnavailableRedirectMethod": {
          "type": "integer"
        },
        "originUnavailableResponseCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "originUnavailableRetryLimit": {
          "type": "string"
        },
        "originUnresponsiveAlternateHost": {
          "type": "string"
        },
        "originUnresponsiveBackupHost": {
          "type": "string"
        },
        "originUnresponsiveBlacklistOriginIp": {
          "type": "boolean"
        },
        "originUnresponsiveBlacklistWindow": {
          "type": "string"
        },
        "originUnresponsiveChangeProtocol": {
          "type": "boolean"
        },
        "originUnresponsiveDetectionLevel": {
          "type": "string"
        },
        "originUnresponsiveIncludeQueryString": {
          "type": "boolean"
        },
        "originUnresponsiveModifiedPath": {
          "type": "string"
        },
        "originUnresponsiveModifyRequestPath": {
          "type": "boolean"
        },
        "originUnresponsiveProtocol": {
          "type": "string"
        },
        "originUnresponsiveRecovery": {
          "type": "string"
        },
        "originUnresponsiveRedirectMethod": {
          "type": "integer"
        },
        "originUnresponsiveRetryLimit": {
          "type": "string"
        },
        "otherOptions": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorMetadataCaching:getPropertyRulesBuilderRulesV20230105BehaviorMetadataCaching": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorMobileSdkPerformance:getPropertyRulesBuilderRulesV20230105BehaviorMobileSdkPerformance": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "secondaryMultipathToOrigin": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorModifyIncomingRequestHeader:getPropertyRulesBuilderRulesV20230105BehaviorModifyIncomingRequestHeader": {
      "properties": {
        "action": {
          "type": "string"
        },
        "avoidDuplicateHeaders": {
          "type": "boolean"
        },
        "customHeaderName": {
          "type": "string"
        },
        "headerValue": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "newHeaderValue": {
          "type": "string"
        },
        "standardAddHeaderName": {
          "type": "string"
        },
        "standardDeleteHeaderName": {
          "type": "string"
        },
        "standardModifyHeaderName": {
          "type": "string"
        },
        "standardPassHeaderName": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorModifyIncomingResponseHeader:getPropertyRulesBuilderRulesV20230105BehaviorModifyIncomingResponseHeader": {
      "properties": {
        "action": {
          "type": "string"
        },
        "avoidDuplicateHeaders": {
          "type": "boolean"
        },
        "customHeaderName": {
          "type": "string"
        },
        "headerValue": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "newHeaderValue": {
          "type": "string"
        },
        "standardAddHeaderName": {
          "type": "string"
        },
        "standardDeleteHeaderName": {
          "type": "string"
        },
        "standardModifyHeaderName": {
          "type": "string"
        },
        "standardPassHeaderName": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorModifyOutgoingRequestHeader:getPropertyRulesBuilderRulesV20230105BehaviorModifyOutgoingRequestHeader": {
      "properties": {
        "action": {
          "type": "string"
        },
        "avoidDuplicateHeaders": {
          "type": "boolean"
        },
        "customHeaderName": {
          "type": "string"
        },
        "headerValue": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "matchMultiple": {
          "type": "boolean"
        },
        "newHeaderValue": {
          "type": "string"
        },
        "regexHeaderMatch": {
          "type": "string"
        },
        "regexHeaderReplace": {
          "type": "string"
        },
        "standardAddHeaderName": {
          "type": "string"
        },
        "standardDeleteHeaderName": {
          "type": "string"
        },
        "standardModifyHeaderName": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorModifyOutgoingResponseHeader:getPropertyRulesBuilderRulesV20230105BehaviorModifyOutgoingResponseHeader": {
      "properties": {
        "action": {
          "type": "string"
        },
        "avoidDuplicateHeaders": {
          "type": "boolean"
        },
        "customHeaderName": {
          "type": "string"
        },
        "headerValue": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "matchMultiple": {
          "type": "boolean"
        },
        "newHeaderValue": {
          "type": "string"
        },
        "regexHeaderMatch": {
          "type": "string"
        },
        "regexHeaderReplace": {
          "type": "string"
        },
        "standardAddHeaderName": {
          "type": "string"
        },
        "standardDeleteHeaderName": {
          "type": "string"
        },
        "standardModifyHeaderName": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorModifyViaHeader:getPropertyRulesBuilderRulesV20230105BehaviorModifyViaHeader": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "modificationOption": {
          "type": "string"
        },
        "renameHeaderTo": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorOrigin:getPropertyRulesBuilderRulesV20230105BehaviorOrigin": {
      "properties": {
        "cacheKeyHostname": {
          "type": "string"
        },
        "compress": {
          "type": "boolean"
        },
        "customCertificateAuthorities": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateAuthority:getPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateAuthority"
          }
        },
        "customCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificate:getPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificate"
          }
        },
        "customForwardHostHeader": {
          "type": "string"
        },
        "customValidCnValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enableTrueClientIp": {
          "type": "boolean"
        },
        "forwardHostHeader": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "httpPort": {
          "type": "integer"
        },
        "httpsPort": {
          "type": "integer"
        },
        "ipVersion": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "mslorigin": {
          "type": "string"
        },
        "netStorage": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorOriginNetStorage:getPropertyRulesBuilderRulesV20230105BehaviorOriginNetStorage"
        },
        "originCertificate": {
          "type": "string"
        },
        "originCertsToHonor": {
          "type": "string"
        },
        "originId": {
          "type": "string"
        },
        "originSni": {
          "type": "boolean"
        },
        "originType": {
          "type": "string"
        },
        "ports": {
          "type": "string"
        },
        "saasCnameEnabled": {
          "type": "boolean"
        },
        "saasCnameLevel": {
          "type": "integer"
        },
        "saasCookie": {
          "type": "string"
        },
        "saasQueryString": {
          "type": "string"
        },
        "saasRegex": {
          "type": "string"
        },
        "saasReplace": {
          "type": "string"
        },
        "saasSuffix": {
          "type": "string"
        },
        "saasType": {
          "type": "string"
        },
        "secondHostname": {
          "type": "string"
        },
        "secondHostnameEnabled": {
          "type": "boolean"
        },
        "standardCertificateAuthorities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "templateUuid": {
          "type": "string"
        },
        "trueClientIpClientSetting": {
          "type": "boolean"
        },
        "trueClientIpHeader": {
          "type": "string"
        },
        "useUniqueCacheKey": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        },
        "verificationMode": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorOriginCharacteristics:getPropertyRulesBuilderRulesV20230105BehaviorOriginCharacteristics": {
      "properties": {
        "accessKeyEncryptedStorage": {
          "type": "boolean"
        },
        "adcTitle": {
          "type": "string"
        },
        "authenticationMethod": {
          "type": "string"
        },
        "authenticationMethodTitle": {
          "type": "string"
        },
        "awsAccessKeyId": {
          "type": "string"
        },
        "awsAccessKeyVersionGuid": {
          "type": "string"
        },
        "awsHost": {
          "type": "string"
        },
        "awsRegion": {
          "type": "string"
        },
        "awsSecretAccessKey": {
          "type": "string"
        },
        "awsService": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "customSignStrings": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "directConnectGeo": {
          "type": "string"
        },
        "encodingVersion": {
          "type": "integer"
        },
        "gcsAccessKeyVersionGuid": {
          "type": "string"
        },
        "gcsHmacKeyAccessId": {
          "type": "string"
        },
        "gcsHmacKeySecret": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "mslkey": {
          "type": "string"
        },
        "mslname": {
          "type": "string"
        },
        "nonce": {
          "type": "string"
        },
        "secretKey": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "useCustomSignString": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorOriginCharacteristicsWsd:getPropertyRulesBuilderRulesV20230105BehaviorOriginCharacteristicsWsd": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "origintype": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificate:getPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificate": {
      "properties": {
        "canBeCa": {
          "type": "boolean"
        },
        "canBeLeaf": {
          "type": "boolean"
        },
        "issuerRdns": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateIssuerRdns:getPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateIssuerRdns"
        },
        "notAfter": {
          "type": "integer"
        },
        "notBefore": {
          "type": "integer"
        },
        "pemEncodedCert": {
          "type": "string"
        },
        "publicKey": {
          "type": "string"
        },
        "publicKeyAlgorithm": {
          "type": "string"
        },
        "publicKeyFormat": {
          "type": "string"
        },
        "selfSigned": {
          "type": "boolean"
        },
        "serialNumber": {
          "type": "string"
        },
        "sha1Fingerprint": {
          "type": "string"
        },
        "sigAlgName": {
          "type": "string"
        },
        "subjectAlternativeNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subjectCn": {
          "type": "string"
        },
        "subjectRdns": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateSubjectRdns:getPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateSubjectRdns"
        },
        "version": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateAuthority:getPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateAuthority": {
      "properties": {
        "canBeCa": {
          "type": "boolean"
        },
        "canBeLeaf": {
          "type": "boolean"
        },
        "issuerRdns": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateAuthorityIssuerRdns:getPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateAuthorityIssuerRdns"
        },
        "notAfter": {
          "type": "integer"
        },
        "notBefore": {
          "type": "integer"
        },
        "pemEncodedCert": {
          "type": "string"
        },
        "publicKey": {
          "type": "string"
        },
        "publicKeyAlgorithm": {
          "type": "string"
        },
        "publicKeyFormat": {
          "type": "string"
        },
        "selfSigned": {
          "type": "boolean"
        },
        "serialNumber": {
          "type": "string"
        },
        "sha1Fingerprint": {
          "type": "string"
        },
        "sigAlgName": {
          "type": "string"
        },
        "subjectAlternativeNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subjectCn": {
          "type": "string"
        },
        "subjectRdns": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateAuthoritySubjectRdns:getPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateAuthoritySubjectRdns"
        },
        "version": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateAuthorityIssuerRdns:getPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateAuthorityIssuerRdns": {
      "properties": {
        "c": {
          "type": "string"
        },
        "cn": {
          "type": "string"
        },
        "o": {
          "type": "string"
        },
        "ou": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateAuthoritySubjectRdns:getPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateAuthoritySubjectRdns": {
      "properties": {
        "c": {
          "type": "string"
        },
        "cn": {
          "type": "string"
        },
        "o": {
          "type": "string"
        },
        "ou": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateIssuerRdns:getPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateIssuerRdns": {
      "properties": {
        "c": {
          "type": "string"
        },
        "cn": {
          "type": "string"
        },
        "o": {
          "type": "string"
        },
        "ou": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateSubjectRdns:getPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateSubjectRdns": {
      "properties": {
        "c": {
          "type": "string"
        },
        "cn": {
          "type": "string"
        },
        "o": {
          "type": "string"
        },
        "ou": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorOriginFailureRecoveryMethod:getPropertyRulesBuilderRulesV20230105BehaviorOriginFailureRecoveryMethod": {
      "properties": {
        "customStatusCode": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "recoveryMethod": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorOriginFailureRecoveryPolicy:getPropertyRulesBuilderRulesV20230105BehaviorOriginFailureRecoveryPolicy": {
      "properties": {
        "binaryEquivalentContent": {
          "type": "boolean"
        },
        "enableIpAvoidance": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "ipAvoidanceErrorThreshold": {
          "type": "integer"
        },
        "ipAvoidanceRetryInterval": {
          "type": "integer"
        },
        "locked": {
          "type": "boolean"
        },
        "monitorOriginResponsiveness": {
          "type": "boolean"
        },
        "monitorResponseCodes1s": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "monitorResponseCodes2s": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "monitorResponseCodes3s": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "monitorStatusCodes1": {
          "type": "boolean"
        },
        "monitorStatusCodes1EnableRecovery": {
          "type": "boolean"
        },
        "monitorStatusCodes1EnableRetry": {
          "type": "boolean"
        },
        "monitorStatusCodes1RecoveryConfigName": {
          "type": "string"
        },
        "monitorStatusCodes2": {
          "type": "boolean"
        },
        "monitorStatusCodes2EnableRecovery": {
          "type": "boolean"
        },
        "monitorStatusCodes2EnableRetry": {
          "type": "boolean"
        },
        "monitorStatusCodes2RecoveryConfigName": {
          "type": "string"
        },
        "monitorStatusCodes3": {
          "type": "boolean"
        },
        "monitorStatusCodes3EnableRecovery": {
          "type": "boolean"
        },
        "monitorStatusCodes3EnableRetry": {
          "type": "boolean"
        },
        "monitorStatusCodes3RecoveryConfigName": {
          "type": "string"
        },
        "originResponsivenessCustomTimeout": {
          "type": "integer"
        },
        "originResponsivenessEnableRecovery": {
          "type": "boolean"
        },
        "originResponsivenessEnableRetry": {
          "type": "boolean"
        },
        "originResponsivenessMonitoring": {
          "type": "string"
        },
        "originResponsivenessRecoveryConfigName": {
          "type": "string"
        },
        "originResponsivenessTimeout": {
          "type": "string"
        },
        "statusCodeMonitoring1": {
          "type": "string"
        },
        "statusCodeMonitoring2": {
          "type": "string"
        },
        "statusCodeMonitoring3": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "tuningParameters": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorOriginIpAcl:getPropertyRulesBuilderRulesV20230105BehaviorOriginIpAcl": {
      "properties": {
        "enable": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorOriginNetStorage:getPropertyRulesBuilderRulesV20230105BehaviorOriginNetStorage": {
      "properties": {
        "cpCode": {
          "type": "integer"
        },
        "downloadDomainName": {
          "type": "string"
        },
        "g2oToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorPersistentClientConnection:getPropertyRulesBuilderRulesV20230105BehaviorPersistentClientConnection": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "timeout": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorPersistentConnection:getPropertyRulesBuilderRulesV20230105BehaviorPersistentConnection": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "timeout": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorPersonallyIdentifiableInformation:getPropertyRulesBuilderRulesV20230105BehaviorPersonallyIdentifiableInformation": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorPhasedRelease:getPropertyRulesBuilderRulesV20230105BehaviorPhasedRelease": {
      "properties": {
        "cloudletPolicy": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorPhasedReleaseCloudletPolicy:getPropertyRulesBuilderRulesV20230105BehaviorPhasedReleaseCloudletPolicy"
        },
        "enabled": {
          "type": "boolean"
        },
        "failoverDuration": {
          "type": "integer"
        },
        "failoverEnabled": {
          "type": "boolean"
        },
        "failoverResponseCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "failoverTitle": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "populationCookieType": {
          "type": "string"
        },
        "populationDuration": {
          "type": "string"
        },
        "populationExpirationDate": {
          "type": "string"
        },
        "populationRefresh": {
          "type": "boolean"
        },
        "populationTitle": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorPhasedReleaseCloudletPolicy:getPropertyRulesBuilderRulesV20230105BehaviorPhasedReleaseCloudletPolicy": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorPreconnect:getPropertyRulesBuilderRulesV20230105BehaviorPreconnect": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "preconnectlists": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorPredictiveContentDelivery:getPropertyRulesBuilderRulesV20230105BehaviorPredictiveContentDelivery": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorPredictivePrefetching:getPropertyRulesBuilderRulesV20230105BehaviorPredictivePrefetching": {
      "properties": {
        "accuracyTarget": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorPrefetch:getPropertyRulesBuilderRulesV20230105BehaviorPrefetch": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorPrefetchable:getPropertyRulesBuilderRulesV20230105BehaviorPrefetchable": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorPrefreshCache:getPropertyRulesBuilderRulesV20230105BehaviorPrefreshCache": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "prefreshval": {
          "type": "integer"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorQuality:getPropertyRulesBuilderRulesV20230105BehaviorQuality": {
      "properties": {
        "audienceSettings": {
          "type": "string"
        },
        "catalogSize": {
          "type": "string"
        },
        "contentSettings": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "deliveryFormat": {
          "type": "string"
        },
        "deliveryType": {
          "type": "string"
        },
        "downloadType": {
          "type": "string"
        },
        "endUserLocation": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "maximumConcurrentUsers": {
          "type": "string"
        },
        "objectSize": {
          "type": "string"
        },
        "optimizeFor": {
          "type": "string"
        },
        "originSettings": {
          "type": "string"
        },
        "popularityDistribution": {
          "type": "string"
        },
        "refreshRate": {
          "type": "string"
        },
        "segmentDuration": {
          "type": "integer"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorQuicBeta:getPropertyRulesBuilderRulesV20230105BehaviorQuicBeta": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "quicOfferPercentage": {
          "type": "integer"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRandomSeek:getPropertyRulesBuilderRulesV20230105BehaviorRandomSeek": {
      "properties": {
        "flv": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "maximumSize": {
          "type": "string"
        },
        "mp4": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRapid:getPropertyRulesBuilderRulesV20230105BehaviorRapid": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorReadTimeout:getPropertyRulesBuilderRulesV20230105BehaviorReadTimeout": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRealTimeReporting:getPropertyRulesBuilderRulesV20230105BehaviorRealTimeReporting": {
      "properties": {
        "advanced": {
          "type": "boolean"
        },
        "beaconSamplingPercentage": {
          "type": "number"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRealUserMonitoring:getPropertyRulesBuilderRulesV20230105BehaviorRealUserMonitoring": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRedirect:getPropertyRulesBuilderRulesV20230105BehaviorRedirect": {
      "properties": {
        "destinationHostname": {
          "type": "string"
        },
        "destinationHostnameOther": {
          "type": "string"
        },
        "destinationHostnameSibling": {
          "type": "string"
        },
        "destinationHostnameSubdomain": {
          "type": "string"
        },
        "destinationPath": {
          "type": "string"
        },
        "destinationPathOther": {
          "type": "string"
        },
        "destinationPathPrefix": {
          "type": "string"
        },
        "destinationPathSuffix": {
          "type": "string"
        },
        "destinationPathSuffixStatus": {
          "type": "string"
        },
        "destinationProtocol": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "mobileDefaultChoice": {
          "type": "string"
        },
        "queryString": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRedirectplus:getPropertyRulesBuilderRulesV20230105BehaviorRedirectplus": {
      "properties": {
        "destination": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "responseCode": {
          "type": "integer"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRefererChecking:getPropertyRulesBuilderRulesV20230105BehaviorRefererChecking": {
      "properties": {
        "allowChildren": {
          "type": "boolean"
        },
        "domains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "strict": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRemoveQueryParameter:getPropertyRulesBuilderRulesV20230105BehaviorRemoveQueryParameter": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "parameters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRemoveVary:getPropertyRulesBuilderRulesV20230105BehaviorRemoveVary": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorReport:getPropertyRulesBuilderRulesV20230105BehaviorReport": {
      "properties": {
        "cookies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customLogField": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "logAcceptLanguage": {
          "type": "boolean"
        },
        "logCookies": {
          "type": "string"
        },
        "logCustomLogField": {
          "type": "boolean"
        },
        "logEdgeIp": {
          "type": "boolean"
        },
        "logHost": {
          "type": "boolean"
        },
        "logReferer": {
          "type": "boolean"
        },
        "logUserAgent": {
          "type": "boolean"
        },
        "logXForwardedFor": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRequestControl:getPropertyRulesBuilderRulesV20230105BehaviorRequestControl": {
      "properties": {
        "branded403File": {
          "type": "string"
        },
        "branded403StatusCode": {
          "type": "integer"
        },
        "branded403Url": {
          "type": "string"
        },
        "brandedDenyCacheTtl": {
          "type": "integer"
        },
        "cloudletPolicy": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRequestControlCloudletPolicy:getPropertyRulesBuilderRulesV20230105BehaviorRequestControlCloudletPolicy"
        },
        "enableBranded403": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "netStorage": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRequestControlNetStorage:getPropertyRulesBuilderRulesV20230105BehaviorRequestControlNetStorage"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRequestControlCloudletPolicy:getPropertyRulesBuilderRulesV20230105BehaviorRequestControlCloudletPolicy": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRequestControlNetStorage:getPropertyRulesBuilderRulesV20230105BehaviorRequestControlNetStorage": {
      "properties": {
        "cpCode": {
          "type": "integer"
        },
        "downloadDomainName": {
          "type": "string"
        },
        "g2oToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRequestTypeMarker:getPropertyRulesBuilderRulesV20230105BehaviorRequestTypeMarker": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "requestType": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorResourceOptimizer:getPropertyRulesBuilderRulesV20230105BehaviorResourceOptimizer": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorResourceOptimizerExtendedCompatibility:getPropertyRulesBuilderRulesV20230105BehaviorResourceOptimizerExtendedCompatibility": {
      "properties": {
        "enableAllFeatures": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorResponseCode:getPropertyRulesBuilderRulesV20230105BehaviorResponseCode": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "override206": {
          "type": "boolean"
        },
        "statusCode": {
          "type": "integer"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorResponseCookie:getPropertyRulesBuilderRulesV20230105BehaviorResponseCookie": {
      "properties": {
        "cookieName": {
          "type": "string"
        },
        "defaultDomain": {
          "type": "boolean"
        },
        "defaultPath": {
          "type": "boolean"
        },
        "domain": {
          "type": "string"
        },
        "duration": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "expirationDate": {
          "type": "string"
        },
        "expires": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "httpOnly": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "path": {
          "type": "string"
        },
        "sameSite": {
          "type": "string"
        },
        "secure": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRestrictObjectCaching:getPropertyRulesBuilderRulesV20230105BehaviorRestrictObjectCaching": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "maximumSize": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorReturnCacheStatus:getPropertyRulesBuilderRulesV20230105BehaviorReturnCacheStatus": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "responseHeaderName": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRewriteUrl:getPropertyRulesBuilderRulesV20230105BehaviorRewriteUrl": {
      "properties": {
        "behavior": {
          "type": "string"
        },
        "keepQueryString": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "match": {
          "type": "string"
        },
        "matchMultiple": {
          "type": "boolean"
        },
        "matchRegex": {
          "type": "string"
        },
        "targetPath": {
          "type": "string"
        },
        "targetPathPrepend": {
          "type": "string"
        },
        "targetRegex": {
          "type": "string"
        },
        "targetUrl": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorRumCustom:getPropertyRulesBuilderRulesV20230105BehaviorRumCustom": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "rumGroupName": {
          "type": "string"
        },
        "rumSampleRate": {
          "type": "integer"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorSaasDefinitions:getPropertyRulesBuilderRulesV20230105BehaviorSaasDefinitions": {
      "properties": {
        "applicationAction": {
          "type": "string"
        },
        "applicationCnameEnabled": {
          "type": "boolean"
        },
        "applicationCnameLevel": {
          "type": "integer"
        },
        "applicationCookie": {
          "type": "string"
        },
        "applicationQueryString": {
          "type": "string"
        },
        "applicationRegex": {
          "type": "string"
        },
        "applicationReplace": {
          "type": "string"
        },
        "applicationTitle": {
          "type": "string"
        },
        "customerAction": {
          "type": "string"
        },
        "customerCnameEnabled": {
          "type": "boolean"
        },
        "customerCnameLevel": {
          "type": "integer"
        },
        "customerCookie": {
          "type": "string"
        },
        "customerQueryString": {
          "type": "string"
        },
        "customerRegex": {
          "type": "string"
        },
        "customerReplace": {
          "type": "string"
        },
        "customerTitle": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "usersAction": {
          "type": "string"
        },
        "usersCnameEnabled": {
          "type": "boolean"
        },
        "usersCnameLevel": {
          "type": "integer"
        },
        "usersCookie": {
          "type": "string"
        },
        "usersQueryString": {
          "type": "string"
        },
        "usersRegex": {
          "type": "string"
        },
        "usersReplace": {
          "type": "string"
        },
        "usersTitle": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorSalesForceCommerceCloudClient:getPropertyRulesBuilderRulesV20230105BehaviorSalesForceCommerceCloudClient": {
      "properties": {
        "allowOverrideOriginCacheKey": {
          "type": "boolean"
        },
        "connectorId": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "originHostHeader": {
          "type": "string"
        },
        "originType": {
          "type": "string"
        },
        "sf3cOriginHost": {
          "type": "string"
        },
        "sf3cOriginHostHeader": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorSalesForceCommerceCloudProvider:getPropertyRulesBuilderRulesV20230105BehaviorSalesForceCommerceCloudProvider": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorSalesForceCommerceCloudProviderHostHeader:getPropertyRulesBuilderRulesV20230105BehaviorSalesForceCommerceCloudProviderHostHeader": {
      "properties": {
        "hostHeaderSource": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorSavePostDcaProcessing:getPropertyRulesBuilderRulesV20230105BehaviorSavePostDcaProcessing": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorScheduleInvalidation:getPropertyRulesBuilderRulesV20230105BehaviorScheduleInvalidation": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "refreshMethod": {
          "type": "string"
        },
        "repeat": {
          "type": "boolean"
        },
        "repeatInterval": {
          "type": "string"
        },
        "start": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorScriptManagement:getPropertyRulesBuilderRulesV20230105BehaviorScriptManagement": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "serviceworker": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "timestamp": {
          "type": "integer"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorSegmentedContentProtection:getPropertyRulesBuilderRulesV20230105BehaviorSegmentedContentProtection": {
      "properties": {
        "acl": {
          "type": "boolean"
        },
        "dashMediaEncryption": {
          "type": "boolean"
        },
        "dataPayload": {
          "type": "boolean"
        },
        "enableTokenInUri": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "fieldCarryOver": {
          "type": "string"
        },
        "headerForSalts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hlsMasterManifestFiles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hlsMediaEncryption": {
          "type": "boolean"
        },
        "ip": {
          "type": "boolean"
        },
        "key": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "mediaEncryptionTitle": {
          "type": "string"
        },
        "revokedListId": {
          "type": "integer"
        },
        "salt": {
          "type": "string"
        },
        "sessionId": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "tokenAuthHlsTitle": {
          "type": "string"
        },
        "tokenAuthenticationTitle": {
          "type": "string"
        },
        "tokenRevocationEnabled": {
          "type": "boolean"
        },
        "tokenRevocationTitle": {
          "type": "string"
        },
        "transitionKey": {
          "type": "string"
        },
        "useAdvanced": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorSegmentedMediaOptimization:getPropertyRulesBuilderRulesV20230105BehaviorSegmentedMediaOptimization": {
      "properties": {
        "behavior": {
          "type": "string"
        },
        "dvrType": {
          "type": "string"
        },
        "dvrWindow": {
          "type": "string"
        },
        "enableUllStreaming": {
          "type": "boolean"
        },
        "endTime": {
          "type": "string"
        },
        "liveType": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "showAdvanced": {
          "type": "boolean"
        },
        "startTime": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorSegmentedMediaStreamingPrefetch:getPropertyRulesBuilderRulesV20230105BehaviorSegmentedMediaStreamingPrefetch": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorSetVariable:getPropertyRulesBuilderRulesV20230105BehaviorSetVariable": {
      "properties": {
        "algorithm": {
          "type": "string"
        },
        "caseSensitive": {
          "type": "boolean"
        },
        "certificateFieldName": {
          "type": "string"
        },
        "cookieName": {
          "type": "string"
        },
        "deviceProfile": {
          "type": "string"
        },
        "encryptionKey": {
          "type": "string"
        },
        "encryptionMode": {
          "type": "string"
        },
        "endIndex": {
          "type": "string"
        },
        "exceptChars": {
          "type": "string"
        },
        "extractLocation": {
          "type": "string"
        },
        "forceChars": {
          "type": "string"
        },
        "formatString": {
          "type": "string"
        },
        "generator": {
          "type": "string"
        },
        "globalSubstitution": {
          "type": "boolean"
        },
        "headerName": {
          "type": "string"
        },
        "hmacAlgorithm": {
          "type": "string"
        },
        "hmacKey": {
          "type": "string"
        },
        "initializationVector": {
          "type": "string"
        },
        "ipVersion": {
          "type": "string"
        },
        "ipv4Prefix": {
          "type": "integer"
        },
        "ipv6Prefix": {
          "type": "integer"
        },
        "locationId": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "max": {
          "type": "integer"
        },
        "maxRandomNumber": {
          "type": "string"
        },
        "min": {
          "type": "integer"
        },
        "minRandomNumber": {
          "type": "string"
        },
        "nonce": {
          "type": "string"
        },
        "numberOfBytes": {
          "type": "integer"
        },
        "operandOne": {
          "type": "string"
        },
        "paramName": {
          "type": "string"
        },
        "pathComponentOffset": {
          "type": "string"
        },
        "prependBytes": {
          "type": "boolean"
        },
        "queryParameterName": {
          "type": "string"
        },
        "regex": {
          "type": "string"
        },
        "replacement": {
          "type": "string"
        },
        "responseHeaderName": {
          "type": "string"
        },
        "separator": {
          "type": "string"
        },
        "setCookieName": {
          "type": "string"
        },
        "startIndex": {
          "type": "string"
        },
        "subString": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "transform": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "valueSource": {
          "type": "string"
        },
        "variableName": {
          "type": "string"
        },
        "variableValue": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorShutr:getPropertyRulesBuilderRulesV20230105BehaviorShutr": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "status": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorSimulateErrorCode:getPropertyRulesBuilderRulesV20230105BehaviorSimulateErrorCode": {
      "properties": {
        "errorType": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "timeout": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorSiteShield:getPropertyRulesBuilderRulesV20230105BehaviorSiteShield": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "nossmap": {
          "type": "string"
        },
        "ssmap": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorSiteShieldSsmap:getPropertyRulesBuilderRulesV20230105BehaviorSiteShieldSsmap"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorSiteShieldSsmap:getPropertyRulesBuilderRulesV20230105BehaviorSiteShieldSsmap": {
      "properties": {
        "chinaCdnMap": {
          "type": "string"
        },
        "hasMixedHosts": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "src": {
          "type": "string"
        },
        "srmap": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorStandardTlsMigration:getPropertyRulesBuilderRulesV20230105BehaviorStandardTlsMigration": {
      "properties": {
        "allowHttpsDowngrade": {
          "type": "boolean"
        },
        "allowHttpsUpgrade": {
          "type": "boolean"
        },
        "cacheSharingDuration": {
          "type": "integer"
        },
        "cacheSharingStartTime": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "isCertificateSniOnly": {
          "type": "boolean"
        },
        "isTieredDistributionUsed": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "migrationDuration": {
          "type": "integer"
        },
        "migrationFrom": {
          "type": "string"
        },
        "migrationStartTime": {
          "type": "string"
        },
        "tdLocation": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorStandardTlsMigrationOverride:getPropertyRulesBuilderRulesV20230105BehaviorStandardTlsMigrationOverride": {
      "properties": {
        "info": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorStrictHeaderParsing:getPropertyRulesBuilderRulesV20230105BehaviorStrictHeaderParsing": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "strictMode": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "validMode": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorSubCustomer:getPropertyRulesBuilderRulesV20230105BehaviorSubCustomer": {
      "properties": {
        "accessControl": {
          "type": "boolean"
        },
        "cacheKey": {
          "type": "boolean"
        },
        "caching": {
          "type": "boolean"
        },
        "contentCompressor": {
          "type": "boolean"
        },
        "dynamicWebContent": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "geoLocation": {
          "type": "boolean"
        },
        "ip": {
          "type": "boolean"
        },
        "largeFileDelivery": {
          "type": "boolean"
        },
        "liveVideoDelivery": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "modifyPath": {
          "type": "boolean"
        },
        "onDemandVideoDelivery": {
          "type": "boolean"
        },
        "origin": {
          "type": "boolean"
        },
        "partnerDomainSuffix": {
          "type": "string"
        },
        "referrer": {
          "type": "boolean"
        },
        "refreshContent": {
          "type": "boolean"
        },
        "siteFailover": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "tokenAuthorization": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        },
        "webApplicationFirewall": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorSureRoute:getPropertyRulesBuilderRulesV20230105BehaviorSureRoute": {
      "properties": {
        "allowFcmParentOverride": {
          "type": "boolean"
        },
        "customMap": {
          "type": "string"
        },
        "customStatKey": {
          "type": "string"
        },
        "enableCustomKey": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "forceSslForward": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "raceStatTtl": {
          "type": "string"
        },
        "srDownloadLinkTitle": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "testObjectUrl": {
          "type": "string"
        },
        "toHost": {
          "type": "string"
        },
        "toHostStatus": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorTcpOptimization:getPropertyRulesBuilderRulesV20230105BehaviorTcpOptimization": {
      "properties": {
        "display": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorTeaLeaf:getPropertyRulesBuilderRulesV20230105BehaviorTeaLeaf": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "ibmCustomerId": {
          "type": "integer"
        },
        "limitToDynamic": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorTieredDistribution:getPropertyRulesBuilderRulesV20230105BehaviorTieredDistribution": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "tieredDistributionMap": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorTieredDistributionAdvanced:getPropertyRulesBuilderRulesV20230105BehaviorTieredDistributionAdvanced": {
      "properties": {
        "allowall": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "method": {
          "type": "string"
        },
        "policy": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "tieredDistributionMap": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorTieredDistributionCustomization:getPropertyRulesBuilderRulesV20230105BehaviorTieredDistributionCustomization": {
      "properties": {
        "cloudwrapperMapMigrationTitle": {
          "type": "string"
        },
        "customMapEnabled": {
          "type": "boolean"
        },
        "customMapName": {
          "type": "string"
        },
        "hashAlgorithm": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "mapMigrationEnabled": {
          "type": "boolean"
        },
        "migrationEndDate": {
          "type": "string"
        },
        "migrationStartDate": {
          "type": "string"
        },
        "migrationWithinCwMapsEnabled": {
          "type": "boolean"
        },
        "serialEnd": {
          "type": "string"
        },
        "serialStart": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "tier1Title": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorTimeout:getPropertyRulesBuilderRulesV20230105BehaviorTimeout": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorUidConfiguration:getPropertyRulesBuilderRulesV20230105BehaviorUidConfiguration": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "extractLocation": {
          "type": "string"
        },
        "headerName": {
          "type": "string"
        },
        "legalText": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "queryParameterName": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "variableName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorValidateEntityTag:getPropertyRulesBuilderRulesV20230105BehaviorValidateEntityTag": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorVerifyJsonWebToken:getPropertyRulesBuilderRulesV20230105BehaviorVerifyJsonWebToken": {
      "properties": {
        "enableEs256": {
          "type": "boolean"
        },
        "enableRs256": {
          "type": "boolean"
        },
        "extractLocation": {
          "type": "string"
        },
        "headerName": {
          "type": "string"
        },
        "jwt": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "queryParameterName": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorVerifyJsonWebTokenForDcp:getPropertyRulesBuilderRulesV20230105BehaviorVerifyJsonWebTokenForDcp": {
      "properties": {
        "authorizations": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "customHeader": {
          "type": "boolean"
        },
        "enableEs256": {
          "type": "boolean"
        },
        "enableRs256": {
          "type": "boolean"
        },
        "extractAuthorizations": {
          "type": "boolean"
        },
        "extractClientId": {
          "type": "boolean"
        },
        "extractLocation": {
          "type": "string"
        },
        "extractUserName": {
          "type": "boolean"
        },
        "headerName": {
          "type": "string"
        },
        "jwt": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "primaryLocation": {
          "type": "string"
        },
        "queryParameterName": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorVerifyTokenAuthorization:getPropertyRulesBuilderRulesV20230105BehaviorVerifyTokenAuthorization": {
      "properties": {
        "algorithm": {
          "type": "string"
        },
        "escapeHmacInputs": {
          "type": "boolean"
        },
        "failureResponse": {
          "type": "boolean"
        },
        "ignoreQueryString": {
          "type": "boolean"
        },
        "key": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "salt": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "transitionKey": {
          "type": "string"
        },
        "useAdvanced": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorVirtualWaitingRoom:getPropertyRulesBuilderRulesV20230105BehaviorVirtualWaitingRoom": {
      "properties": {
        "accessTitle": {
          "type": "string"
        },
        "cloudletSharedPolicy": {
          "type": "integer"
        },
        "customCookieDomain": {
          "type": "string"
        },
        "domainConfig": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "sessionAutoProlong": {
          "type": "boolean"
        },
        "sessionDuration": {
          "type": "integer"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "waitingRoomAssetsPaths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "waitingRoomPath": {
          "type": "string"
        },
        "waitingRoomTitle": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorVirtualWaitingRoomWithEdgeWorkers:getPropertyRulesBuilderRulesV20230105BehaviorVirtualWaitingRoomWithEdgeWorkers": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorVisitorPrioritization:getPropertyRulesBuilderRulesV20230105BehaviorVisitorPrioritization": {
      "properties": {
        "allowedUserCookieAdvanced": {
          "type": "boolean"
        },
        "allowedUserCookieAutomaticSalt": {
          "type": "boolean"
        },
        "allowedUserCookieDomain": {
          "type": "string"
        },
        "allowedUserCookieDomainType": {
          "type": "string"
        },
        "allowedUserCookieDuration": {
          "type": "integer"
        },
        "allowedUserCookieEnabled": {
          "type": "boolean"
        },
        "allowedUserCookieHttpOnly": {
          "type": "boolean"
        },
        "allowedUserCookieLabel": {
          "type": "string"
        },
        "allowedUserCookieManagementTitle": {
          "type": "string"
        },
        "allowedUserCookieRefresh": {
          "type": "boolean"
        },
        "allowedUserCookieSalt": {
          "type": "string"
        },
        "cloudletPolicy": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorVisitorPrioritizationCloudletPolicy:getPropertyRulesBuilderRulesV20230105BehaviorVisitorPrioritizationCloudletPolicy"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "userIdentificationByCookie": {
          "type": "boolean"
        },
        "userIdentificationByHeaders": {
          "type": "boolean"
        },
        "userIdentificationByIp": {
          "type": "boolean"
        },
        "userIdentificationByParams": {
          "type": "boolean"
        },
        "userIdentificationKeyCookie": {
          "type": "string"
        },
        "userIdentificationKeyHeaders": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userIdentificationKeyParams": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userIdentificationTitle": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "waitingRoomCacheTtl": {
          "type": "integer"
        },
        "waitingRoomCookieAdvanced": {
          "type": "boolean"
        },
        "waitingRoomCookieAutomaticSalt": {
          "type": "boolean"
        },
        "waitingRoomCookieDomain": {
          "type": "string"
        },
        "waitingRoomCookieDomainType": {
          "type": "string"
        },
        "waitingRoomCookieDuration": {
          "type": "integer"
        },
        "waitingRoomCookieEnabled": {
          "type": "boolean"
        },
        "waitingRoomCookieHttpOnly": {
          "type": "boolean"
        },
        "waitingRoomCookieLabel": {
          "type": "string"
        },
        "waitingRoomCookieManagementTitle": {
          "type": "string"
        },
        "waitingRoomCookieSalt": {
          "type": "string"
        },
        "waitingRoomCookieShareLabel": {
          "type": "boolean"
        },
        "waitingRoomCpCode": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorVisitorPrioritizationWaitingRoomCpCode:getPropertyRulesBuilderRulesV20230105BehaviorVisitorPrioritizationWaitingRoomCpCode"
        },
        "waitingRoomDirectory": {
          "type": "string"
        },
        "waitingRoomManagementTitle": {
          "type": "string"
        },
        "waitingRoomNetStorage": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorVisitorPrioritizationWaitingRoomNetStorage:getPropertyRulesBuilderRulesV20230105BehaviorVisitorPrioritizationWaitingRoomNetStorage"
        },
        "waitingRoomStatusCode": {
          "type": "integer"
        },
        "waitingRoomUseCpCode": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorVisitorPrioritizationCloudletPolicy:getPropertyRulesBuilderRulesV20230105BehaviorVisitorPrioritizationCloudletPolicy": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorVisitorPrioritizationFifo:getPropertyRulesBuilderRulesV20230105BehaviorVisitorPrioritizationFifo": {
      "properties": {
        "accessTitle": {
          "type": "string"
        },
        "cloudletSharedPolicy": {
          "type": "integer"
        },
        "customCookieDomain": {
          "type": "string"
        },
        "domainConfig": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "sessionAutoProlong": {
          "type": "boolean"
        },
        "sessionDuration": {
          "type": "integer"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "waitingRoomAssetsPaths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "waitingRoomPath": {
          "type": "string"
        },
        "waitingRoomTitle": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorVisitorPrioritizationFifoStandalone:getPropertyRulesBuilderRulesV20230105BehaviorVisitorPrioritizationFifoStandalone": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorVisitorPrioritizationWaitingRoomCpCode:getPropertyRulesBuilderRulesV20230105BehaviorVisitorPrioritizationWaitingRoomCpCode": {
      "properties": {
        "cpCodeLimits": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorVisitorPrioritizationWaitingRoomCpCodeCpCodeLimits:getPropertyRulesBuilderRulesV20230105BehaviorVisitorPrioritizationWaitingRoomCpCodeCpCodeLimits"
        },
        "createdDate": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorVisitorPrioritizationWaitingRoomCpCodeCpCodeLimits:getPropertyRulesBuilderRulesV20230105BehaviorVisitorPrioritizationWaitingRoomCpCodeCpCodeLimits": {
      "properties": {
        "currentCapacity": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "limitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorVisitorPrioritizationWaitingRoomNetStorage:getPropertyRulesBuilderRulesV20230105BehaviorVisitorPrioritizationWaitingRoomNetStorage": {
      "properties": {
        "cpCode": {
          "type": "integer"
        },
        "downloadDomainName": {
          "type": "string"
        },
        "g2oToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorWatermarking:getPropertyRulesBuilderRulesV20230105BehaviorWatermarking": {
      "properties": {
        "abVariantLocation": {
          "type": "string"
        },
        "decryptionPassword1": {
          "type": "string"
        },
        "decryptionPassword2": {
          "type": "string"
        },
        "decryptionPasswordId1": {
          "type": "string"
        },
        "decryptionPasswordId2": {
          "type": "string"
        },
        "enable": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "miscellaneousSettingsTitle": {
          "type": "string"
        },
        "patternDecryptionEnable": {
          "type": "boolean"
        },
        "patternEncryptionTitle": {
          "type": "string"
        },
        "signatureVerificationEnable": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "tokenSigningTitle": {
          "type": "string"
        },
        "useOriginalAsA": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        },
        "verificationKeyId1": {
          "type": "string"
        },
        "verificationKeyId2": {
          "type": "string"
        },
        "verificationPublicKey1": {
          "type": "string"
        },
        "verificationPublicKey2": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorWebApplicationFirewall:getPropertyRulesBuilderRulesV20230105BehaviorWebApplicationFirewall": {
      "properties": {
        "firewallConfiguration": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorWebApplicationFirewallFirewallConfiguration:getPropertyRulesBuilderRulesV20230105BehaviorWebApplicationFirewallFirewallConfiguration"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorWebApplicationFirewallFirewallConfiguration:getPropertyRulesBuilderRulesV20230105BehaviorWebApplicationFirewallFirewallConfiguration": {
      "properties": {
        "configId": {
          "type": "integer"
        },
        "fileName": {
          "type": "string"
        },
        "productionStatus": {
          "type": "string"
        },
        "productionVersion": {
          "type": "integer"
        },
        "stagingStatus": {
          "type": "string"
        },
        "stagingVersion": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorWebSockets:getPropertyRulesBuilderRulesV20230105BehaviorWebSockets": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105BehaviorWebdav:getPropertyRulesBuilderRulesV20230105BehaviorWebdav": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105Criterion:getPropertyRulesBuilderRulesV20230105Criterion": {
      "properties": {
        "advancedImMatch": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionAdvancedImMatch:getPropertyRulesBuilderRulesV20230105CriterionAdvancedImMatch"
        },
        "bucket": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionBucket:getPropertyRulesBuilderRulesV20230105CriterionBucket"
        },
        "cacheability": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionCacheability:getPropertyRulesBuilderRulesV20230105CriterionCacheability"
        },
        "chinaCdnRegion": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionChinaCdnRegion:getPropertyRulesBuilderRulesV20230105CriterionChinaCdnRegion"
        },
        "clientCertificate": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionClientCertificate:getPropertyRulesBuilderRulesV20230105CriterionClientCertificate"
        },
        "clientIp": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionClientIp:getPropertyRulesBuilderRulesV20230105CriterionClientIp"
        },
        "clientIpVersion": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionClientIpVersion:getPropertyRulesBuilderRulesV20230105CriterionClientIpVersion"
        },
        "cloudletsOrigin": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionCloudletsOrigin:getPropertyRulesBuilderRulesV20230105CriterionCloudletsOrigin"
        },
        "contentDeliveryNetwork": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionContentDeliveryNetwork:getPropertyRulesBuilderRulesV20230105CriterionContentDeliveryNetwork"
        },
        "contentType": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionContentType:getPropertyRulesBuilderRulesV20230105CriterionContentType"
        },
        "deviceCharacteristic": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionDeviceCharacteristic:getPropertyRulesBuilderRulesV20230105CriterionDeviceCharacteristic"
        },
        "ecmdAuthGroups": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionEcmdAuthGroups:getPropertyRulesBuilderRulesV20230105CriterionEcmdAuthGroups"
        },
        "ecmdAuthScheme": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionEcmdAuthScheme:getPropertyRulesBuilderRulesV20230105CriterionEcmdAuthScheme"
        },
        "ecmdIsAuthenticated": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionEcmdIsAuthenticated:getPropertyRulesBuilderRulesV20230105CriterionEcmdIsAuthenticated"
        },
        "ecmdUsername": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionEcmdUsername:getPropertyRulesBuilderRulesV20230105CriterionEcmdUsername"
        },
        "edgeWorkersFailure": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionEdgeWorkersFailure:getPropertyRulesBuilderRulesV20230105CriterionEdgeWorkersFailure"
        },
        "fileExtension": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionFileExtension:getPropertyRulesBuilderRulesV20230105CriterionFileExtension"
        },
        "filename": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionFilename:getPropertyRulesBuilderRulesV20230105CriterionFilename"
        },
        "hostname": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionHostname:getPropertyRulesBuilderRulesV20230105CriterionHostname"
        },
        "matchAdvanced": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionMatchAdvanced:getPropertyRulesBuilderRulesV20230105CriterionMatchAdvanced"
        },
        "matchCpCode": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionMatchCpCode:getPropertyRulesBuilderRulesV20230105CriterionMatchCpCode"
        },
        "matchResponseCode": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionMatchResponseCode:getPropertyRulesBuilderRulesV20230105CriterionMatchResponseCode"
        },
        "matchVariable": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionMatchVariable:getPropertyRulesBuilderRulesV20230105CriterionMatchVariable"
        },
        "metadataStage": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionMetadataStage:getPropertyRulesBuilderRulesV20230105CriterionMetadataStage"
        },
        "originTimeout": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionOriginTimeout:getPropertyRulesBuilderRulesV20230105CriterionOriginTimeout"
        },
        "path": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionPath:getPropertyRulesBuilderRulesV20230105CriterionPath"
        },
        "queryStringParameter": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionQueryStringParameter:getPropertyRulesBuilderRulesV20230105CriterionQueryStringParameter"
        },
        "random": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionRandom:getPropertyRulesBuilderRulesV20230105CriterionRandom"
        },
        "recoveryConfig": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionRecoveryConfig:getPropertyRulesBuilderRulesV20230105CriterionRecoveryConfig"
        },
        "regularExpression": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionRegularExpression:getPropertyRulesBuilderRulesV20230105CriterionRegularExpression"
        },
        "requestCookie": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionRequestCookie:getPropertyRulesBuilderRulesV20230105CriterionRequestCookie"
        },
        "requestHeader": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionRequestHeader:getPropertyRulesBuilderRulesV20230105CriterionRequestHeader"
        },
        "requestMethod": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionRequestMethod:getPropertyRulesBuilderRulesV20230105CriterionRequestMethod"
        },
        "requestProtocol": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionRequestProtocol:getPropertyRulesBuilderRulesV20230105CriterionRequestProtocol"
        },
        "requestType": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionRequestType:getPropertyRulesBuilderRulesV20230105CriterionRequestType"
        },
        "responseHeader": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionResponseHeader:getPropertyRulesBuilderRulesV20230105CriterionResponseHeader"
        },
        "time": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionTime:getPropertyRulesBuilderRulesV20230105CriterionTime"
        },
        "tokenAuthorization": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionTokenAuthorization:getPropertyRulesBuilderRulesV20230105CriterionTokenAuthorization"
        },
        "userAgent": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionUserAgent:getPropertyRulesBuilderRulesV20230105CriterionUserAgent"
        },
        "userLocation": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionUserLocation:getPropertyRulesBuilderRulesV20230105CriterionUserLocation"
        },
        "userNetwork": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionUserNetwork:getPropertyRulesBuilderRulesV20230105CriterionUserNetwork"
        },
        "variableError": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionVariableError:getPropertyRulesBuilderRulesV20230105CriterionVariableError"
        },
        "virtualWaitingRoomRequest": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionVirtualWaitingRoomRequest:getPropertyRulesBuilderRulesV20230105CriterionVirtualWaitingRoomRequest"
        },
        "visitorPrioritizationRequest": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionVisitorPrioritizationRequest:getPropertyRulesBuilderRulesV20230105CriterionVisitorPrioritizationRequest"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionAdvancedImMatch:getPropertyRulesBuilderRulesV20230105CriterionAdvancedImMatch": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchOn": {
          "type": "string"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionBucket:getPropertyRulesBuilderRulesV20230105CriterionBucket": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "percentage": {
          "type": "integer"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionCacheability:getPropertyRulesBuilderRulesV20230105CriterionCacheability": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionChinaCdnRegion:getPropertyRulesBuilderRulesV20230105CriterionChinaCdnRegion": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionClientCertificate:getPropertyRulesBuilderRulesV20230105CriterionClientCertificate": {
      "properties": {
        "isCertificatePresent": {
          "type": "boolean"
        },
        "isCertificateValid": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionClientIp:getPropertyRulesBuilderRulesV20230105CriterionClientIp": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "useHeaders": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionClientIpVersion:getPropertyRulesBuilderRulesV20230105CriterionClientIpVersion": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "useXForwardedFor": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionCloudletsOrigin:getPropertyRulesBuilderRulesV20230105CriterionCloudletsOrigin": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "originId": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionContentDeliveryNetwork:getPropertyRulesBuilderRulesV20230105CriterionContentDeliveryNetwork": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "network": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionContentType:getPropertyRulesBuilderRulesV20230105CriterionContentType": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchCaseSensitive": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "matchWildcard": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionDeviceCharacteristic:getPropertyRulesBuilderRulesV20230105CriterionDeviceCharacteristic": {
      "properties": {
        "booleanValue": {
          "type": "boolean"
        },
        "characteristic": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "matchCaseSensitive": {
          "type": "boolean"
        },
        "matchWildcard": {
          "type": "boolean"
        },
        "numericMatchOperator": {
          "type": "string"
        },
        "numericValue": {
          "type": "integer"
        },
        "stringMatchOperator": {
          "type": "string"
        },
        "stringValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "versionMatchOperator": {
          "type": "string"
        },
        "versionValue": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionEcmdAuthGroups:getPropertyRulesBuilderRulesV20230105CriterionEcmdAuthGroups": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionEcmdAuthScheme:getPropertyRulesBuilderRulesV20230105CriterionEcmdAuthScheme": {
      "properties": {
        "authScheme": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionEcmdIsAuthenticated:getPropertyRulesBuilderRulesV20230105CriterionEcmdIsAuthenticated": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionEcmdUsername:getPropertyRulesBuilderRulesV20230105CriterionEcmdUsername": {
      "properties": {
        "length": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionEdgeWorkersFailure:getPropertyRulesBuilderRulesV20230105CriterionEdgeWorkersFailure": {
      "properties": {
        "execStatus": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionFileExtension:getPropertyRulesBuilderRulesV20230105CriterionFileExtension": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchCaseSensitive": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionFilename:getPropertyRulesBuilderRulesV20230105CriterionFilename": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchCaseSensitive": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionHostname:getPropertyRulesBuilderRulesV20230105CriterionHostname": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionMatchAdvanced:getPropertyRulesBuilderRulesV20230105CriterionMatchAdvanced": {
      "properties": {
        "closeXml": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "openXml": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionMatchCpCode:getPropertyRulesBuilderRulesV20230105CriterionMatchCpCode": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionMatchCpCodeValue:getPropertyRulesBuilderRulesV20230105CriterionMatchCpCodeValue"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionMatchCpCodeValue:getPropertyRulesBuilderRulesV20230105CriterionMatchCpCodeValue": {
      "properties": {
        "cpCodeLimits": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105CriterionMatchCpCodeValueCpCodeLimits:getPropertyRulesBuilderRulesV20230105CriterionMatchCpCodeValueCpCodeLimits"
        },
        "createdDate": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionMatchCpCodeValueCpCodeLimits:getPropertyRulesBuilderRulesV20230105CriterionMatchCpCodeValueCpCodeLimits": {
      "properties": {
        "currentCapacity": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "limitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionMatchResponseCode:getPropertyRulesBuilderRulesV20230105CriterionMatchResponseCode": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "lowerBound": {
          "type": "integer"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "upperBound": {
          "type": "integer"
        },
        "uuid": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionMatchVariable:getPropertyRulesBuilderRulesV20230105CriterionMatchVariable": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "lowerBound": {
          "type": "string"
        },
        "matchCaseSensitive": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "matchWildcard": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "upperBound": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "variableExpression": {
          "type": "string"
        },
        "variableName": {
          "type": "string"
        },
        "variableValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionMetadataStage:getPropertyRulesBuilderRulesV20230105CriterionMetadataStage": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionOriginTimeout:getPropertyRulesBuilderRulesV20230105CriterionOriginTimeout": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionPath:getPropertyRulesBuilderRulesV20230105CriterionPath": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchCaseSensitive": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "normalize": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionQueryStringParameter:getPropertyRulesBuilderRulesV20230105CriterionQueryStringParameter": {
      "properties": {
        "escapeValue": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "lowerBound": {
          "type": "integer"
        },
        "matchCaseSensitiveName": {
          "type": "boolean"
        },
        "matchCaseSensitiveValue": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "matchWildcardName": {
          "type": "boolean"
        },
        "matchWildcardValue": {
          "type": "boolean"
        },
        "parameterName": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "upperBound": {
          "type": "integer"
        },
        "uuid": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionRandom:getPropertyRulesBuilderRulesV20230105CriterionRandom": {
      "properties": {
        "bucket": {
          "type": "integer"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionRecoveryConfig:getPropertyRulesBuilderRulesV20230105CriterionRecoveryConfig": {
      "properties": {
        "configName": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionRegularExpression:getPropertyRulesBuilderRulesV20230105CriterionRegularExpression": {
      "properties": {
        "caseSensitive": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "matchString": {
          "type": "string"
        },
        "regex": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionRequestCookie:getPropertyRulesBuilderRulesV20230105CriterionRequestCookie": {
      "properties": {
        "cookieName": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "lowerBound": {
          "type": "integer"
        },
        "matchCaseSensitiveName": {
          "type": "boolean"
        },
        "matchCaseSensitiveValue": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "matchWildcardName": {
          "type": "boolean"
        },
        "matchWildcardValue": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "upperBound": {
          "type": "integer"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionRequestHeader:getPropertyRulesBuilderRulesV20230105CriterionRequestHeader": {
      "properties": {
        "headerName": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "matchCaseSensitiveValue": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "matchWildcardName": {
          "type": "boolean"
        },
        "matchWildcardValue": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionRequestMethod:getPropertyRulesBuilderRulesV20230105CriterionRequestMethod": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionRequestProtocol:getPropertyRulesBuilderRulesV20230105CriterionRequestProtocol": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionRequestType:getPropertyRulesBuilderRulesV20230105CriterionRequestType": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionResponseHeader:getPropertyRulesBuilderRulesV20230105CriterionResponseHeader": {
      "properties": {
        "headerName": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "lowerBound": {
          "type": "integer"
        },
        "matchCaseSensitiveValue": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "matchWildcardName": {
          "type": "boolean"
        },
        "matchWildcardValue": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "upperBound": {
          "type": "integer"
        },
        "uuid": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionTime:getPropertyRulesBuilderRulesV20230105CriterionTime": {
      "properties": {
        "applyDaylightSavingsTime": {
          "type": "boolean"
        },
        "beginDate": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        },
        "lastingDate": {
          "type": "string"
        },
        "lastingDuration": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "repeatBeginDate": {
          "type": "string"
        },
        "repeatDuration": {
          "type": "string"
        },
        "repeatInterval": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionTokenAuthorization:getPropertyRulesBuilderRulesV20230105CriterionTokenAuthorization": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "statusLists": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionUserAgent:getPropertyRulesBuilderRulesV20230105CriterionUserAgent": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchCaseSensitive": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "matchWildcard": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionUserLocation:getPropertyRulesBuilderRulesV20230105CriterionUserLocation": {
      "properties": {
        "checkIps": {
          "type": "string"
        },
        "continentValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "countryValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "field": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "regionValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "templateUuid": {
          "type": "string"
        },
        "useOnlyFirstXForwardedForIp": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionUserNetwork:getPropertyRulesBuilderRulesV20230105CriterionUserNetwork": {
      "properties": {
        "bandwidthValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "checkIps": {
          "type": "string"
        },
        "field": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "networkTypeValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "networkValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "templateUuid": {
          "type": "string"
        },
        "useOnlyFirstXForwardedForIp": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionVariableError:getPropertyRulesBuilderRulesV20230105CriterionVariableError": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "result": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "variableNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionVirtualWaitingRoomRequest:getPropertyRulesBuilderRulesV20230105CriterionVirtualWaitingRoomRequest": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchOn": {
          "type": "string"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CriterionVisitorPrioritizationRequest:getPropertyRulesBuilderRulesV20230105CriterionVisitorPrioritizationRequest": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchOn": {
          "type": "string"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105CustomOverride:getPropertyRulesBuilderRulesV20230105CustomOverride": {
      "properties": {
        "name": {
          "type": "string"
        },
        "overrideId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230105Variable:getPropertyRulesBuilderRulesV20230105Variable": {
      "properties": {
        "description": {
          "type": "string"
        },
        "hidden": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "sensitive": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "description",
        "hidden",
        "name",
        "sensitive",
        "value"
      ]
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530:getPropertyRulesBuilderRulesV20230530": {
      "properties": {
        "advancedOverride": {
          "type": "string"
        },
        "behaviors": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530Behavior:getPropertyRulesBuilderRulesV20230530Behavior"
          }
        },
        "childrens": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "comments": {
          "type": "string"
        },
        "criteriaLocked": {
          "type": "boolean"
        },
        "criteriaMustSatisfy": {
          "type": "string"
        },
        "criterions": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530Criterion:getPropertyRulesBuilderRulesV20230530Criterion"
          }
        },
        "customOverride": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CustomOverride:getPropertyRulesBuilderRulesV20230530CustomOverride"
        },
        "isSecure": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "templateLink": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "variables": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530Variable:getPropertyRulesBuilderRulesV20230530Variable"
          }
        }
      },
      "type": "object",
      "required": [
        "name"
      ]
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530Behavior:getPropertyRulesBuilderRulesV20230530Behavior": {
      "properties": {
        "adScalerCircuitBreaker": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAdScalerCircuitBreaker:getPropertyRulesBuilderRulesV20230530BehaviorAdScalerCircuitBreaker"
        },
        "adaptiveAcceleration": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAdaptiveAcceleration:getPropertyRulesBuilderRulesV20230530BehaviorAdaptiveAcceleration"
        },
        "adaptiveImageCompression": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAdaptiveImageCompression:getPropertyRulesBuilderRulesV20230530BehaviorAdaptiveImageCompression"
        },
        "advanced": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAdvanced:getPropertyRulesBuilderRulesV20230530BehaviorAdvanced"
        },
        "aggregatedReporting": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAggregatedReporting:getPropertyRulesBuilderRulesV20230530BehaviorAggregatedReporting"
        },
        "akamaizer": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAkamaizer:getPropertyRulesBuilderRulesV20230530BehaviorAkamaizer"
        },
        "akamaizerTag": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAkamaizerTag:getPropertyRulesBuilderRulesV20230530BehaviorAkamaizerTag"
        },
        "allHttpInCacheHierarchy": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAllHttpInCacheHierarchy:getPropertyRulesBuilderRulesV20230530BehaviorAllHttpInCacheHierarchy"
        },
        "allowCloudletsOrigins": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAllowCloudletsOrigins:getPropertyRulesBuilderRulesV20230530BehaviorAllowCloudletsOrigins"
        },
        "allowDelete": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAllowDelete:getPropertyRulesBuilderRulesV20230530BehaviorAllowDelete"
        },
        "allowHttpsCacheKeySharing": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAllowHttpsCacheKeySharing:getPropertyRulesBuilderRulesV20230530BehaviorAllowHttpsCacheKeySharing"
        },
        "allowHttpsDowngrade": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAllowHttpsDowngrade:getPropertyRulesBuilderRulesV20230530BehaviorAllowHttpsDowngrade"
        },
        "allowOptions": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAllowOptions:getPropertyRulesBuilderRulesV20230530BehaviorAllowOptions"
        },
        "allowPatch": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAllowPatch:getPropertyRulesBuilderRulesV20230530BehaviorAllowPatch"
        },
        "allowPost": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAllowPost:getPropertyRulesBuilderRulesV20230530BehaviorAllowPost"
        },
        "allowPut": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAllowPut:getPropertyRulesBuilderRulesV20230530BehaviorAllowPut"
        },
        "allowTransferEncoding": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAllowTransferEncoding:getPropertyRulesBuilderRulesV20230530BehaviorAllowTransferEncoding"
        },
        "altSvcHeader": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAltSvcHeader:getPropertyRulesBuilderRulesV20230530BehaviorAltSvcHeader"
        },
        "apiPrioritization": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorApiPrioritization:getPropertyRulesBuilderRulesV20230530BehaviorApiPrioritization"
        },
        "applicationLoadBalancer": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorApplicationLoadBalancer:getPropertyRulesBuilderRulesV20230530BehaviorApplicationLoadBalancer"
        },
        "audienceSegmentation": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAudienceSegmentation:getPropertyRulesBuilderRulesV20230530BehaviorAudienceSegmentation"
        },
        "autoDomainValidation": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAutoDomainValidation:getPropertyRulesBuilderRulesV20230530BehaviorAutoDomainValidation"
        },
        "baseDirectory": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorBaseDirectory:getPropertyRulesBuilderRulesV20230530BehaviorBaseDirectory"
        },
        "bossBeaconing": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorBossBeaconing:getPropertyRulesBuilderRulesV20230530BehaviorBossBeaconing"
        },
        "breadcrumbs": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorBreadcrumbs:getPropertyRulesBuilderRulesV20230530BehaviorBreadcrumbs"
        },
        "breakConnection": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorBreakConnection:getPropertyRulesBuilderRulesV20230530BehaviorBreakConnection"
        },
        "brotli": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorBrotli:getPropertyRulesBuilderRulesV20230530BehaviorBrotli"
        },
        "cacheError": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCacheError:getPropertyRulesBuilderRulesV20230530BehaviorCacheError"
        },
        "cacheId": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCacheId:getPropertyRulesBuilderRulesV20230530BehaviorCacheId"
        },
        "cacheKeyIgnoreCase": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCacheKeyIgnoreCase:getPropertyRulesBuilderRulesV20230530BehaviorCacheKeyIgnoreCase"
        },
        "cacheKeyQueryParams": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCacheKeyQueryParams:getPropertyRulesBuilderRulesV20230530BehaviorCacheKeyQueryParams"
        },
        "cacheKeyRewrite": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCacheKeyRewrite:getPropertyRulesBuilderRulesV20230530BehaviorCacheKeyRewrite"
        },
        "cachePost": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCachePost:getPropertyRulesBuilderRulesV20230530BehaviorCachePost"
        },
        "cacheRedirect": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCacheRedirect:getPropertyRulesBuilderRulesV20230530BehaviorCacheRedirect"
        },
        "cacheTag": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCacheTag:getPropertyRulesBuilderRulesV20230530BehaviorCacheTag"
        },
        "cacheTagVisible": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCacheTagVisible:getPropertyRulesBuilderRulesV20230530BehaviorCacheTagVisible"
        },
        "caching": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCaching:getPropertyRulesBuilderRulesV20230530BehaviorCaching"
        },
        "centralAuthorization": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCentralAuthorization:getPropertyRulesBuilderRulesV20230530BehaviorCentralAuthorization"
        },
        "chaseRedirects": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorChaseRedirects:getPropertyRulesBuilderRulesV20230530BehaviorChaseRedirects"
        },
        "clientCharacteristics": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorClientCharacteristics:getPropertyRulesBuilderRulesV20230530BehaviorClientCharacteristics"
        },
        "cloudInterconnects": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCloudInterconnects:getPropertyRulesBuilderRulesV20230530BehaviorCloudInterconnects"
        },
        "cloudWrapper": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCloudWrapper:getPropertyRulesBuilderRulesV20230530BehaviorCloudWrapper"
        },
        "cloudWrapperAdvanced": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCloudWrapperAdvanced:getPropertyRulesBuilderRulesV20230530BehaviorCloudWrapperAdvanced"
        },
        "commonMediaClientData": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCommonMediaClientData:getPropertyRulesBuilderRulesV20230530BehaviorCommonMediaClientData"
        },
        "conditionalOrigin": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorConditionalOrigin:getPropertyRulesBuilderRulesV20230530BehaviorConditionalOrigin"
        },
        "constructResponse": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorConstructResponse:getPropertyRulesBuilderRulesV20230530BehaviorConstructResponse"
        },
        "contentCharacteristics": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristics:getPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristics"
        },
        "contentCharacteristicsAmd": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsAmd:getPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsAmd"
        },
        "contentCharacteristicsDd": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsDd:getPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsDd"
        },
        "contentCharacteristicsWsdLargeFile": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsWsdLargeFile:getPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsWsdLargeFile"
        },
        "contentCharacteristicsWsdLive": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsWsdLive:getPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsWsdLive"
        },
        "contentCharacteristicsWsdVod": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsWsdVod:getPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsWsdVod"
        },
        "contentPrePosition": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorContentPrePosition:getPropertyRulesBuilderRulesV20230530BehaviorContentPrePosition"
        },
        "contentTargetingProtection": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorContentTargetingProtection:getPropertyRulesBuilderRulesV20230530BehaviorContentTargetingProtection"
        },
        "corsSupport": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCorsSupport:getPropertyRulesBuilderRulesV20230530BehaviorCorsSupport"
        },
        "cpCode": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCpCode:getPropertyRulesBuilderRulesV20230530BehaviorCpCode"
        },
        "customBehavior": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCustomBehavior:getPropertyRulesBuilderRulesV20230530BehaviorCustomBehavior"
        },
        "datastream": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDatastream:getPropertyRulesBuilderRulesV20230530BehaviorDatastream"
        },
        "dcp": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDcp:getPropertyRulesBuilderRulesV20230530BehaviorDcp"
        },
        "dcpAuthHmacTransformation": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDcpAuthHmacTransformation:getPropertyRulesBuilderRulesV20230530BehaviorDcpAuthHmacTransformation"
        },
        "dcpAuthRegexTransformation": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDcpAuthRegexTransformation:getPropertyRulesBuilderRulesV20230530BehaviorDcpAuthRegexTransformation"
        },
        "dcpAuthSubstringTransformation": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDcpAuthSubstringTransformation:getPropertyRulesBuilderRulesV20230530BehaviorDcpAuthSubstringTransformation"
        },
        "dcpAuthVariableExtractor": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDcpAuthVariableExtractor:getPropertyRulesBuilderRulesV20230530BehaviorDcpAuthVariableExtractor"
        },
        "dcpDefaultAuthzGroups": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDcpDefaultAuthzGroups:getPropertyRulesBuilderRulesV20230530BehaviorDcpDefaultAuthzGroups"
        },
        "dcpDevRelations": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDcpDevRelations:getPropertyRulesBuilderRulesV20230530BehaviorDcpDevRelations"
        },
        "dcpRealTimeAuth": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDcpRealTimeAuth:getPropertyRulesBuilderRulesV20230530BehaviorDcpRealTimeAuth"
        },
        "deliveryReceipt": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDeliveryReceipt:getPropertyRulesBuilderRulesV20230530BehaviorDeliveryReceipt"
        },
        "denyAccess": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDenyAccess:getPropertyRulesBuilderRulesV20230530BehaviorDenyAccess"
        },
        "denyDirectFailoverAccess": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDenyDirectFailoverAccess:getPropertyRulesBuilderRulesV20230530BehaviorDenyDirectFailoverAccess"
        },
        "deviceCharacteristicCacheId": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDeviceCharacteristicCacheId:getPropertyRulesBuilderRulesV20230530BehaviorDeviceCharacteristicCacheId"
        },
        "deviceCharacteristicHeader": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDeviceCharacteristicHeader:getPropertyRulesBuilderRulesV20230530BehaviorDeviceCharacteristicHeader"
        },
        "dnsAsyncRefresh": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDnsAsyncRefresh:getPropertyRulesBuilderRulesV20230530BehaviorDnsAsyncRefresh"
        },
        "dnsPrefresh": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDnsPrefresh:getPropertyRulesBuilderRulesV20230530BehaviorDnsPrefresh"
        },
        "downgradeProtocol": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDowngradeProtocol:getPropertyRulesBuilderRulesV20230530BehaviorDowngradeProtocol"
        },
        "downloadCompleteMarker": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDownloadCompleteMarker:getPropertyRulesBuilderRulesV20230530BehaviorDownloadCompleteMarker"
        },
        "downloadNotification": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDownloadNotification:getPropertyRulesBuilderRulesV20230530BehaviorDownloadNotification"
        },
        "downstreamCache": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDownstreamCache:getPropertyRulesBuilderRulesV20230530BehaviorDownstreamCache"
        },
        "dynamicThroughtputOptimization": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDynamicThroughtputOptimization:getPropertyRulesBuilderRulesV20230530BehaviorDynamicThroughtputOptimization"
        },
        "dynamicThroughtputOptimizationOverride": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDynamicThroughtputOptimizationOverride:getPropertyRulesBuilderRulesV20230530BehaviorDynamicThroughtputOptimizationOverride"
        },
        "dynamicWebContent": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDynamicWebContent:getPropertyRulesBuilderRulesV20230530BehaviorDynamicWebContent"
        },
        "ecmsBulkUpload": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEcmsBulkUpload:getPropertyRulesBuilderRulesV20230530BehaviorEcmsBulkUpload"
        },
        "ecmsDatabase": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEcmsDatabase:getPropertyRulesBuilderRulesV20230530BehaviorEcmsDatabase"
        },
        "ecmsDataset": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEcmsDataset:getPropertyRulesBuilderRulesV20230530BehaviorEcmsDataset"
        },
        "ecmsObjectKey": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEcmsObjectKey:getPropertyRulesBuilderRulesV20230530BehaviorEcmsObjectKey"
        },
        "edgeConnect": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEdgeConnect:getPropertyRulesBuilderRulesV20230530BehaviorEdgeConnect"
        },
        "edgeLoadBalancingAdvanced": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEdgeLoadBalancingAdvanced:getPropertyRulesBuilderRulesV20230530BehaviorEdgeLoadBalancingAdvanced"
        },
        "edgeLoadBalancingDataCenter": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEdgeLoadBalancingDataCenter:getPropertyRulesBuilderRulesV20230530BehaviorEdgeLoadBalancingDataCenter"
        },
        "edgeLoadBalancingOrigin": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEdgeLoadBalancingOrigin:getPropertyRulesBuilderRulesV20230530BehaviorEdgeLoadBalancingOrigin"
        },
        "edgeOriginAuthorization": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEdgeOriginAuthorization:getPropertyRulesBuilderRulesV20230530BehaviorEdgeOriginAuthorization"
        },
        "edgeRedirector": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEdgeRedirector:getPropertyRulesBuilderRulesV20230530BehaviorEdgeRedirector"
        },
        "edgeScape": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEdgeScape:getPropertyRulesBuilderRulesV20230530BehaviorEdgeScape"
        },
        "edgeSideIncludes": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEdgeSideIncludes:getPropertyRulesBuilderRulesV20230530BehaviorEdgeSideIncludes"
        },
        "edgeWorker": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEdgeWorker:getPropertyRulesBuilderRulesV20230530BehaviorEdgeWorker"
        },
        "enhancedAkamaiProtocol": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEnhancedAkamaiProtocol:getPropertyRulesBuilderRulesV20230530BehaviorEnhancedAkamaiProtocol"
        },
        "enhancedProxyDetection": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEnhancedProxyDetection:getPropertyRulesBuilderRulesV20230530BehaviorEnhancedProxyDetection"
        },
        "epdForwardHeaderEnrichment": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEpdForwardHeaderEnrichment:getPropertyRulesBuilderRulesV20230530BehaviorEpdForwardHeaderEnrichment"
        },
        "failAction": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorFailAction:getPropertyRulesBuilderRulesV20230530BehaviorFailAction"
        },
        "failoverBotManagerFeatureCompatibility": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorFailoverBotManagerFeatureCompatibility:getPropertyRulesBuilderRulesV20230530BehaviorFailoverBotManagerFeatureCompatibility"
        },
        "fastInvalidate": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorFastInvalidate:getPropertyRulesBuilderRulesV20230530BehaviorFastInvalidate"
        },
        "firstPartyMarketing": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorFirstPartyMarketing:getPropertyRulesBuilderRulesV20230530BehaviorFirstPartyMarketing"
        },
        "firstPartyMarketingPlus": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorFirstPartyMarketingPlus:getPropertyRulesBuilderRulesV20230530BehaviorFirstPartyMarketingPlus"
        },
        "forwardRewrite": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorForwardRewrite:getPropertyRulesBuilderRulesV20230530BehaviorForwardRewrite"
        },
        "g2oheader": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorG2oheader:getPropertyRulesBuilderRulesV20230530BehaviorG2oheader"
        },
        "globalRequestNumber": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorGlobalRequestNumber:getPropertyRulesBuilderRulesV20230530BehaviorGlobalRequestNumber"
        },
        "graphqlCaching": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorGraphqlCaching:getPropertyRulesBuilderRulesV20230530BehaviorGraphqlCaching"
        },
        "gzipResponse": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorGzipResponse:getPropertyRulesBuilderRulesV20230530BehaviorGzipResponse"
        },
        "hdDataAdvanced": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorHdDataAdvanced:getPropertyRulesBuilderRulesV20230530BehaviorHdDataAdvanced"
        },
        "healthDetection": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorHealthDetection:getPropertyRulesBuilderRulesV20230530BehaviorHealthDetection"
        },
        "hsafEipBinding": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorHsafEipBinding:getPropertyRulesBuilderRulesV20230530BehaviorHsafEipBinding"
        },
        "http2": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorHttp2:getPropertyRulesBuilderRulesV20230530BehaviorHttp2"
        },
        "http3": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorHttp3:getPropertyRulesBuilderRulesV20230530BehaviorHttp3"
        },
        "httpStrictTransportSecurity": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorHttpStrictTransportSecurity:getPropertyRulesBuilderRulesV20230530BehaviorHttpStrictTransportSecurity"
        },
        "httpToHttpsUpgrade": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorHttpToHttpsUpgrade:getPropertyRulesBuilderRulesV20230530BehaviorHttpToHttpsUpgrade"
        },
        "imOverride": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImOverride:getPropertyRulesBuilderRulesV20230530BehaviorImOverride"
        },
        "imageAndVideoManager": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImageAndVideoManager:getPropertyRulesBuilderRulesV20230530BehaviorImageAndVideoManager"
        },
        "imageManager": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImageManager:getPropertyRulesBuilderRulesV20230530BehaviorImageManager"
        },
        "imageManagerVideo": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImageManagerVideo:getPropertyRulesBuilderRulesV20230530BehaviorImageManagerVideo"
        },
        "include": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorInclude:getPropertyRulesBuilderRulesV20230530BehaviorInclude"
        },
        "instant": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorInstant:getPropertyRulesBuilderRulesV20230530BehaviorInstant"
        },
        "instantConfig": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorInstantConfig:getPropertyRulesBuilderRulesV20230530BehaviorInstantConfig"
        },
        "largeFileOptimization": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorLargeFileOptimization:getPropertyRulesBuilderRulesV20230530BehaviorLargeFileOptimization"
        },
        "largeFileOptimizationAdvanced": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorLargeFileOptimizationAdvanced:getPropertyRulesBuilderRulesV20230530BehaviorLargeFileOptimizationAdvanced"
        },
        "limitBitRate": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorLimitBitRate:getPropertyRulesBuilderRulesV20230530BehaviorLimitBitRate"
        },
        "logCustom": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorLogCustom:getPropertyRulesBuilderRulesV20230530BehaviorLogCustom"
        },
        "mPulse": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorMPulse:getPropertyRulesBuilderRulesV20230530BehaviorMPulse"
        },
        "manifestPersonalization": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorManifestPersonalization:getPropertyRulesBuilderRulesV20230530BehaviorManifestPersonalization"
        },
        "manifestRerouting": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorManifestRerouting:getPropertyRulesBuilderRulesV20230530BehaviorManifestRerouting"
        },
        "manualServerPush": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorManualServerPush:getPropertyRulesBuilderRulesV20230530BehaviorManualServerPush"
        },
        "mediaAcceleration": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorMediaAcceleration:getPropertyRulesBuilderRulesV20230530BehaviorMediaAcceleration"
        },
        "mediaAccelerationQuicOptout": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorMediaAccelerationQuicOptout:getPropertyRulesBuilderRulesV20230530BehaviorMediaAccelerationQuicOptout"
        },
        "mediaClient": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorMediaClient:getPropertyRulesBuilderRulesV20230530BehaviorMediaClient"
        },
        "mediaFileRetrievalOptimization": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorMediaFileRetrievalOptimization:getPropertyRulesBuilderRulesV20230530BehaviorMediaFileRetrievalOptimization"
        },
        "mediaOriginFailover": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorMediaOriginFailover:getPropertyRulesBuilderRulesV20230530BehaviorMediaOriginFailover"
        },
        "metadataCaching": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorMetadataCaching:getPropertyRulesBuilderRulesV20230530BehaviorMetadataCaching"
        },
        "mobileSdkPerformance": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorMobileSdkPerformance:getPropertyRulesBuilderRulesV20230530BehaviorMobileSdkPerformance"
        },
        "modifyIncomingRequestHeader": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorModifyIncomingRequestHeader:getPropertyRulesBuilderRulesV20230530BehaviorModifyIncomingRequestHeader"
        },
        "modifyIncomingResponseHeader": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorModifyIncomingResponseHeader:getPropertyRulesBuilderRulesV20230530BehaviorModifyIncomingResponseHeader"
        },
        "modifyOutgoingRequestHeader": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorModifyOutgoingRequestHeader:getPropertyRulesBuilderRulesV20230530BehaviorModifyOutgoingRequestHeader"
        },
        "modifyOutgoingResponseHeader": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorModifyOutgoingResponseHeader:getPropertyRulesBuilderRulesV20230530BehaviorModifyOutgoingResponseHeader"
        },
        "modifyViaHeader": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorModifyViaHeader:getPropertyRulesBuilderRulesV20230530BehaviorModifyViaHeader"
        },
        "origin": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorOrigin:getPropertyRulesBuilderRulesV20230530BehaviorOrigin"
        },
        "originCharacteristics": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorOriginCharacteristics:getPropertyRulesBuilderRulesV20230530BehaviorOriginCharacteristics"
        },
        "originCharacteristicsWsd": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorOriginCharacteristicsWsd:getPropertyRulesBuilderRulesV20230530BehaviorOriginCharacteristicsWsd"
        },
        "originFailureRecoveryMethod": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorOriginFailureRecoveryMethod:getPropertyRulesBuilderRulesV20230530BehaviorOriginFailureRecoveryMethod"
        },
        "originFailureRecoveryPolicy": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorOriginFailureRecoveryPolicy:getPropertyRulesBuilderRulesV20230530BehaviorOriginFailureRecoveryPolicy"
        },
        "originIpAcl": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorOriginIpAcl:getPropertyRulesBuilderRulesV20230530BehaviorOriginIpAcl"
        },
        "persistentClientConnection": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorPersistentClientConnection:getPropertyRulesBuilderRulesV20230530BehaviorPersistentClientConnection"
        },
        "persistentConnection": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorPersistentConnection:getPropertyRulesBuilderRulesV20230530BehaviorPersistentConnection"
        },
        "personallyIdentifiableInformation": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorPersonallyIdentifiableInformation:getPropertyRulesBuilderRulesV20230530BehaviorPersonallyIdentifiableInformation"
        },
        "phasedRelease": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorPhasedRelease:getPropertyRulesBuilderRulesV20230530BehaviorPhasedRelease"
        },
        "preconnect": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorPreconnect:getPropertyRulesBuilderRulesV20230530BehaviorPreconnect"
        },
        "predictiveContentDelivery": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorPredictiveContentDelivery:getPropertyRulesBuilderRulesV20230530BehaviorPredictiveContentDelivery"
        },
        "predictivePrefetching": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorPredictivePrefetching:getPropertyRulesBuilderRulesV20230530BehaviorPredictivePrefetching"
        },
        "prefetch": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorPrefetch:getPropertyRulesBuilderRulesV20230530BehaviorPrefetch"
        },
        "prefetchable": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorPrefetchable:getPropertyRulesBuilderRulesV20230530BehaviorPrefetchable"
        },
        "prefreshCache": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorPrefreshCache:getPropertyRulesBuilderRulesV20230530BehaviorPrefreshCache"
        },
        "quality": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorQuality:getPropertyRulesBuilderRulesV20230530BehaviorQuality"
        },
        "quicBeta": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorQuicBeta:getPropertyRulesBuilderRulesV20230530BehaviorQuicBeta"
        },
        "randomSeek": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRandomSeek:getPropertyRulesBuilderRulesV20230530BehaviorRandomSeek"
        },
        "rapid": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRapid:getPropertyRulesBuilderRulesV20230530BehaviorRapid"
        },
        "readTimeout": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorReadTimeout:getPropertyRulesBuilderRulesV20230530BehaviorReadTimeout"
        },
        "realTimeReporting": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRealTimeReporting:getPropertyRulesBuilderRulesV20230530BehaviorRealTimeReporting"
        },
        "realUserMonitoring": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRealUserMonitoring:getPropertyRulesBuilderRulesV20230530BehaviorRealUserMonitoring"
        },
        "redirect": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRedirect:getPropertyRulesBuilderRulesV20230530BehaviorRedirect"
        },
        "redirectplus": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRedirectplus:getPropertyRulesBuilderRulesV20230530BehaviorRedirectplus"
        },
        "refererChecking": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRefererChecking:getPropertyRulesBuilderRulesV20230530BehaviorRefererChecking"
        },
        "removeQueryParameter": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRemoveQueryParameter:getPropertyRulesBuilderRulesV20230530BehaviorRemoveQueryParameter"
        },
        "removeVary": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRemoveVary:getPropertyRulesBuilderRulesV20230530BehaviorRemoveVary"
        },
        "report": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorReport:getPropertyRulesBuilderRulesV20230530BehaviorReport"
        },
        "requestControl": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRequestControl:getPropertyRulesBuilderRulesV20230530BehaviorRequestControl"
        },
        "requestTypeMarker": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRequestTypeMarker:getPropertyRulesBuilderRulesV20230530BehaviorRequestTypeMarker"
        },
        "resourceOptimizer": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorResourceOptimizer:getPropertyRulesBuilderRulesV20230530BehaviorResourceOptimizer"
        },
        "resourceOptimizerExtendedCompatibility": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorResourceOptimizerExtendedCompatibility:getPropertyRulesBuilderRulesV20230530BehaviorResourceOptimizerExtendedCompatibility"
        },
        "responseCode": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorResponseCode:getPropertyRulesBuilderRulesV20230530BehaviorResponseCode"
        },
        "responseCookie": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorResponseCookie:getPropertyRulesBuilderRulesV20230530BehaviorResponseCookie"
        },
        "restrictObjectCaching": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRestrictObjectCaching:getPropertyRulesBuilderRulesV20230530BehaviorRestrictObjectCaching"
        },
        "returnCacheStatus": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorReturnCacheStatus:getPropertyRulesBuilderRulesV20230530BehaviorReturnCacheStatus"
        },
        "rewriteUrl": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRewriteUrl:getPropertyRulesBuilderRulesV20230530BehaviorRewriteUrl"
        },
        "rumCustom": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRumCustom:getPropertyRulesBuilderRulesV20230530BehaviorRumCustom"
        },
        "saasDefinitions": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorSaasDefinitions:getPropertyRulesBuilderRulesV20230530BehaviorSaasDefinitions"
        },
        "salesForceCommerceCloudClient": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorSalesForceCommerceCloudClient:getPropertyRulesBuilderRulesV20230530BehaviorSalesForceCommerceCloudClient"
        },
        "salesForceCommerceCloudProvider": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorSalesForceCommerceCloudProvider:getPropertyRulesBuilderRulesV20230530BehaviorSalesForceCommerceCloudProvider"
        },
        "salesForceCommerceCloudProviderHostHeader": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorSalesForceCommerceCloudProviderHostHeader:getPropertyRulesBuilderRulesV20230530BehaviorSalesForceCommerceCloudProviderHostHeader"
        },
        "savePostDcaProcessing": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorSavePostDcaProcessing:getPropertyRulesBuilderRulesV20230530BehaviorSavePostDcaProcessing"
        },
        "scheduleInvalidation": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorScheduleInvalidation:getPropertyRulesBuilderRulesV20230530BehaviorScheduleInvalidation"
        },
        "scriptManagement": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorScriptManagement:getPropertyRulesBuilderRulesV20230530BehaviorScriptManagement"
        },
        "segmentedContentProtection": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorSegmentedContentProtection:getPropertyRulesBuilderRulesV20230530BehaviorSegmentedContentProtection"
        },
        "segmentedMediaOptimization": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorSegmentedMediaOptimization:getPropertyRulesBuilderRulesV20230530BehaviorSegmentedMediaOptimization"
        },
        "segmentedMediaStreamingPrefetch": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorSegmentedMediaStreamingPrefetch:getPropertyRulesBuilderRulesV20230530BehaviorSegmentedMediaStreamingPrefetch"
        },
        "setVariable": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorSetVariable:getPropertyRulesBuilderRulesV20230530BehaviorSetVariable"
        },
        "simulateErrorCode": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorSimulateErrorCode:getPropertyRulesBuilderRulesV20230530BehaviorSimulateErrorCode"
        },
        "siteShield": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorSiteShield:getPropertyRulesBuilderRulesV20230530BehaviorSiteShield"
        },
        "standardTlsMigration": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorStandardTlsMigration:getPropertyRulesBuilderRulesV20230530BehaviorStandardTlsMigration"
        },
        "standardTlsMigrationOverride": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorStandardTlsMigrationOverride:getPropertyRulesBuilderRulesV20230530BehaviorStandardTlsMigrationOverride"
        },
        "strictHeaderParsing": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorStrictHeaderParsing:getPropertyRulesBuilderRulesV20230530BehaviorStrictHeaderParsing"
        },
        "subCustomer": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorSubCustomer:getPropertyRulesBuilderRulesV20230530BehaviorSubCustomer"
        },
        "sureRoute": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorSureRoute:getPropertyRulesBuilderRulesV20230530BehaviorSureRoute"
        },
        "tcpOptimization": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorTcpOptimization:getPropertyRulesBuilderRulesV20230530BehaviorTcpOptimization"
        },
        "teaLeaf": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorTeaLeaf:getPropertyRulesBuilderRulesV20230530BehaviorTeaLeaf"
        },
        "tieredDistribution": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorTieredDistribution:getPropertyRulesBuilderRulesV20230530BehaviorTieredDistribution"
        },
        "tieredDistributionAdvanced": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorTieredDistributionAdvanced:getPropertyRulesBuilderRulesV20230530BehaviorTieredDistributionAdvanced"
        },
        "tieredDistributionCustomization": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorTieredDistributionCustomization:getPropertyRulesBuilderRulesV20230530BehaviorTieredDistributionCustomization"
        },
        "timeout": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorTimeout:getPropertyRulesBuilderRulesV20230530BehaviorTimeout"
        },
        "uidConfiguration": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorUidConfiguration:getPropertyRulesBuilderRulesV20230530BehaviorUidConfiguration"
        },
        "validateEntityTag": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorValidateEntityTag:getPropertyRulesBuilderRulesV20230530BehaviorValidateEntityTag"
        },
        "verifyJsonWebToken": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorVerifyJsonWebToken:getPropertyRulesBuilderRulesV20230530BehaviorVerifyJsonWebToken"
        },
        "verifyJsonWebTokenForDcp": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorVerifyJsonWebTokenForDcp:getPropertyRulesBuilderRulesV20230530BehaviorVerifyJsonWebTokenForDcp"
        },
        "verifyTokenAuthorization": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorVerifyTokenAuthorization:getPropertyRulesBuilderRulesV20230530BehaviorVerifyTokenAuthorization"
        },
        "virtualWaitingRoom": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorVirtualWaitingRoom:getPropertyRulesBuilderRulesV20230530BehaviorVirtualWaitingRoom"
        },
        "virtualWaitingRoomWithEdgeWorkers": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorVirtualWaitingRoomWithEdgeWorkers:getPropertyRulesBuilderRulesV20230530BehaviorVirtualWaitingRoomWithEdgeWorkers"
        },
        "visitorPrioritization": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritization:getPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritization"
        },
        "visitorPrioritizationFifo": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationFifo:getPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationFifo"
        },
        "visitorPrioritizationFifoStandalone": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationFifoStandalone:getPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationFifoStandalone"
        },
        "watermarking": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorWatermarking:getPropertyRulesBuilderRulesV20230530BehaviorWatermarking"
        },
        "webApplicationFirewall": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorWebApplicationFirewall:getPropertyRulesBuilderRulesV20230530BehaviorWebApplicationFirewall"
        },
        "webSockets": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorWebSockets:getPropertyRulesBuilderRulesV20230530BehaviorWebSockets"
        },
        "webdav": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorWebdav:getPropertyRulesBuilderRulesV20230530BehaviorWebdav"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAdScalerCircuitBreaker:getPropertyRulesBuilderRulesV20230530BehaviorAdScalerCircuitBreaker": {
      "properties": {
        "fallbackActionResponseCodeBased": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "responseCodeBased": {
          "type": "boolean"
        },
        "responseCodes": {
          "type": "string"
        },
        "responseDelayBased": {
          "type": "boolean"
        },
        "responseDelayThreshold": {
          "type": "string"
        },
        "returnErrorResponseCodeBased": {
          "type": "string"
        },
        "specifyYourOwnResponseCodeBased": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAdaptiveAcceleration:getPropertyRulesBuilderRulesV20230530BehaviorAdaptiveAcceleration": {
      "properties": {
        "abLogic": {
          "type": "string"
        },
        "abTesting": {
          "type": "string"
        },
        "compression": {
          "type": "string"
        },
        "cookieName": {
          "type": "string"
        },
        "enableBrotliCompression": {
          "type": "boolean"
        },
        "enableForNoncacheable": {
          "type": "boolean"
        },
        "enablePreconnect": {
          "type": "boolean"
        },
        "enablePush": {
          "type": "boolean"
        },
        "enableRo": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "preloadEnable": {
          "type": "boolean"
        },
        "source": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "titleBrotli": {
          "type": "string"
        },
        "titleHttp2ServerPush": {
          "type": "string"
        },
        "titlePreconnect": {
          "type": "string"
        },
        "titlePreload": {
          "type": "string"
        },
        "titleRo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAdaptiveImageCompression:getPropertyRulesBuilderRulesV20230530BehaviorAdaptiveImageCompression": {
      "properties": {
        "compressMobile": {
          "type": "boolean"
        },
        "compressStandard": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "tier1MobileCompressionMethod": {
          "type": "string"
        },
        "tier1MobileCompressionValue": {
          "type": "integer"
        },
        "tier1StandardCompressionMethod": {
          "type": "string"
        },
        "tier1StandardCompressionValue": {
          "type": "integer"
        },
        "tier2MobileCompressionMethod": {
          "type": "string"
        },
        "tier2MobileCompressionValue": {
          "type": "integer"
        },
        "tier2StandardCompressionMethod": {
          "type": "string"
        },
        "tier2StandardCompressionValue": {
          "type": "integer"
        },
        "tier3MobileCompressionMethod": {
          "type": "string"
        },
        "tier3MobileCompressionValue": {
          "type": "integer"
        },
        "tier3StandardCompressionMethod": {
          "type": "string"
        },
        "tier3StandardCompressionValue": {
          "type": "integer"
        },
        "titleAicMobile": {
          "type": "string"
        },
        "titleAicNonmobile": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAdvanced:getPropertyRulesBuilderRulesV20230530BehaviorAdvanced": {
      "properties": {
        "description": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "xml": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAggregatedReporting:getPropertyRulesBuilderRulesV20230530BehaviorAggregatedReporting": {
      "properties": {
        "attribute1": {
          "type": "string"
        },
        "attribute2": {
          "type": "string"
        },
        "attribute3": {
          "type": "string"
        },
        "attribute4": {
          "type": "string"
        },
        "attributesCount": {
          "type": "integer"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "reportName": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAkamaizer:getPropertyRulesBuilderRulesV20230530BehaviorAkamaizer": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAkamaizerTag:getPropertyRulesBuilderRulesV20230530BehaviorAkamaizerTag": {
      "properties": {
        "includeTagsAttribute": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "matchHostname": {
          "type": "string"
        },
        "replaceAll": {
          "type": "boolean"
        },
        "replacementHostname": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "tagsAttribute": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAllHttpInCacheHierarchy:getPropertyRulesBuilderRulesV20230530BehaviorAllHttpInCacheHierarchy": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAllowCloudletsOrigins:getPropertyRulesBuilderRulesV20230530BehaviorAllowCloudletsOrigins": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "honorBaseDirectory": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "purgeOriginQueryParameter": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAllowDelete:getPropertyRulesBuilderRulesV20230530BehaviorAllowDelete": {
      "properties": {
        "allowBody": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAllowHttpsCacheKeySharing:getPropertyRulesBuilderRulesV20230530BehaviorAllowHttpsCacheKeySharing": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAllowHttpsDowngrade:getPropertyRulesBuilderRulesV20230530BehaviorAllowHttpsDowngrade": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAllowOptions:getPropertyRulesBuilderRulesV20230530BehaviorAllowOptions": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAllowPatch:getPropertyRulesBuilderRulesV20230530BehaviorAllowPatch": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAllowPost:getPropertyRulesBuilderRulesV20230530BehaviorAllowPost": {
      "properties": {
        "allowWithoutContentLength": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAllowPut:getPropertyRulesBuilderRulesV20230530BehaviorAllowPut": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAllowTransferEncoding:getPropertyRulesBuilderRulesV20230530BehaviorAllowTransferEncoding": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAltSvcHeader:getPropertyRulesBuilderRulesV20230530BehaviorAltSvcHeader": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "maxAge": {
          "type": "integer"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorApiPrioritization:getPropertyRulesBuilderRulesV20230530BehaviorApiPrioritization": {
      "properties": {
        "alternateResponseCacheTtl": {
          "type": "integer"
        },
        "cloudletPolicy": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorApiPrioritizationCloudletPolicy:getPropertyRulesBuilderRulesV20230530BehaviorApiPrioritizationCloudletPolicy"
        },
        "cloudletSharedPolicy": {
          "type": "integer"
        },
        "enabled": {
          "type": "boolean"
        },
        "isSharedPolicy": {
          "type": "boolean"
        },
        "label": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "netStorage": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorApiPrioritizationNetStorage:getPropertyRulesBuilderRulesV20230530BehaviorApiPrioritizationNetStorage"
        },
        "netStoragePath": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "throttledCpCode": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorApiPrioritizationThrottledCpCode:getPropertyRulesBuilderRulesV20230530BehaviorApiPrioritizationThrottledCpCode"
        },
        "throttledStatusCode": {
          "type": "integer"
        },
        "useThrottledCpCode": {
          "type": "boolean"
        },
        "useThrottledStatusCode": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorApiPrioritizationCloudletPolicy:getPropertyRulesBuilderRulesV20230530BehaviorApiPrioritizationCloudletPolicy": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorApiPrioritizationNetStorage:getPropertyRulesBuilderRulesV20230530BehaviorApiPrioritizationNetStorage": {
      "properties": {
        "cpCode": {
          "type": "integer"
        },
        "downloadDomainName": {
          "type": "string"
        },
        "g2oToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorApiPrioritizationThrottledCpCode:getPropertyRulesBuilderRulesV20230530BehaviorApiPrioritizationThrottledCpCode": {
      "properties": {
        "cpCodeLimits": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorApiPrioritizationThrottledCpCodeCpCodeLimits:getPropertyRulesBuilderRulesV20230530BehaviorApiPrioritizationThrottledCpCodeCpCodeLimits"
        },
        "createdDate": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorApiPrioritizationThrottledCpCodeCpCodeLimits:getPropertyRulesBuilderRulesV20230530BehaviorApiPrioritizationThrottledCpCodeCpCodeLimits": {
      "properties": {
        "currentCapacity": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "limitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorApplicationLoadBalancer:getPropertyRulesBuilderRulesV20230530BehaviorApplicationLoadBalancer": {
      "properties": {
        "allDownNetStorage": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorApplicationLoadBalancerAllDownNetStorage:getPropertyRulesBuilderRulesV20230530BehaviorApplicationLoadBalancerAllDownNetStorage"
        },
        "allDownNetStorageFile": {
          "type": "string"
        },
        "allDownStatusCode": {
          "type": "string"
        },
        "allDownTitle": {
          "type": "string"
        },
        "allowCachePrefresh": {
          "type": "boolean"
        },
        "cachedContentTitle": {
          "type": "string"
        },
        "cloudletPolicy": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorApplicationLoadBalancerCloudletPolicy:getPropertyRulesBuilderRulesV20230530BehaviorApplicationLoadBalancerCloudletPolicy"
        },
        "enabled": {
          "type": "boolean"
        },
        "failoverAttemptsThreshold": {
          "type": "integer"
        },
        "failoverMode": {
          "type": "string"
        },
        "failoverOriginMaps": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorApplicationLoadBalancerFailoverOriginMap:getPropertyRulesBuilderRulesV20230530BehaviorApplicationLoadBalancerFailoverOriginMap"
          }
        },
        "failoverStatusCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "failoverTitle": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "originCookieName": {
          "type": "string"
        },
        "specifyStickinessCookieDomain": {
          "type": "boolean"
        },
        "stickinessCookieAutomaticSalt": {
          "type": "boolean"
        },
        "stickinessCookieDomain": {
          "type": "string"
        },
        "stickinessCookieSalt": {
          "type": "string"
        },
        "stickinessCookieSetHttpOnlyFlag": {
          "type": "boolean"
        },
        "stickinessCookieType": {
          "type": "string"
        },
        "stickinessDuration": {
          "type": "string"
        },
        "stickinessExpirationDate": {
          "type": "string"
        },
        "stickinessRefresh": {
          "type": "boolean"
        },
        "stickinessTitle": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorApplicationLoadBalancerAllDownNetStorage:getPropertyRulesBuilderRulesV20230530BehaviorApplicationLoadBalancerAllDownNetStorage": {
      "properties": {
        "cpCode": {
          "type": "integer"
        },
        "downloadDomainName": {
          "type": "string"
        },
        "g2oToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorApplicationLoadBalancerCloudletPolicy:getPropertyRulesBuilderRulesV20230530BehaviorApplicationLoadBalancerCloudletPolicy": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorApplicationLoadBalancerFailoverOriginMap:getPropertyRulesBuilderRulesV20230530BehaviorApplicationLoadBalancerFailoverOriginMap": {
      "properties": {
        "fromOriginId": {
          "type": "string"
        },
        "toOriginIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAudienceSegmentation:getPropertyRulesBuilderRulesV20230530BehaviorAudienceSegmentation": {
      "properties": {
        "cloudletPolicy": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAudienceSegmentationCloudletPolicy:getPropertyRulesBuilderRulesV20230530BehaviorAudienceSegmentationCloudletPolicy"
        },
        "cloudletSharedPolicy": {
          "type": "integer"
        },
        "enabled": {
          "type": "boolean"
        },
        "isSharedPolicy": {
          "type": "boolean"
        },
        "label": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "populationCookieAutomaticSalt": {
          "type": "boolean"
        },
        "populationCookieDomain": {
          "type": "string"
        },
        "populationCookieIncludeRuleName": {
          "type": "boolean"
        },
        "populationCookieSalt": {
          "type": "string"
        },
        "populationCookieType": {
          "type": "string"
        },
        "populationDuration": {
          "type": "string"
        },
        "populationRefresh": {
          "type": "boolean"
        },
        "populationTitle": {
          "type": "string"
        },
        "segmentTrackingCookieName": {
          "type": "string"
        },
        "segmentTrackingCustomHeader": {
          "type": "string"
        },
        "segmentTrackingMethod": {
          "type": "string"
        },
        "segmentTrackingQueryParam": {
          "type": "string"
        },
        "segmentTrackingTitle": {
          "type": "string"
        },
        "specifyPopulationCookieDomain": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAudienceSegmentationCloudletPolicy:getPropertyRulesBuilderRulesV20230530BehaviorAudienceSegmentationCloudletPolicy": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorAutoDomainValidation:getPropertyRulesBuilderRulesV20230530BehaviorAutoDomainValidation": {
      "properties": {
        "autodv": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorBaseDirectory:getPropertyRulesBuilderRulesV20230530BehaviorBaseDirectory": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorBossBeaconing:getPropertyRulesBuilderRulesV20230530BehaviorBossBeaconing": {
      "properties": {
        "conditionalErrorPattern": {
          "type": "string"
        },
        "conditionalHttpStatuses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "conditionalSamplingFrequency": {
          "type": "string"
        },
        "cpcodes": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "forwardType": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "requestType": {
          "type": "string"
        },
        "samplingFrequency": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorBreadcrumbs:getPropertyRulesBuilderRulesV20230530BehaviorBreadcrumbs": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "loggingEnabled": {
          "type": "boolean"
        },
        "optMode": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorBreakConnection:getPropertyRulesBuilderRulesV20230530BehaviorBreakConnection": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorBrotli:getPropertyRulesBuilderRulesV20230530BehaviorBrotli": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCacheError:getPropertyRulesBuilderRulesV20230530BehaviorCacheError": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "preserveStale": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "ttl": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCacheId:getPropertyRulesBuilderRulesV20230530BehaviorCacheId": {
      "properties": {
        "elements": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includeValue": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "optional": {
          "type": "boolean"
        },
        "rule": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "variableName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCacheKeyIgnoreCase:getPropertyRulesBuilderRulesV20230530BehaviorCacheKeyIgnoreCase": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCacheKeyQueryParams:getPropertyRulesBuilderRulesV20230530BehaviorCacheKeyQueryParams": {
      "properties": {
        "behavior": {
          "type": "string"
        },
        "exactMatch": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "parameters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCacheKeyRewrite:getPropertyRulesBuilderRulesV20230530BehaviorCacheKeyRewrite": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "purgeKey": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCachePost:getPropertyRulesBuilderRulesV20230530BehaviorCachePost": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "useBody": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCacheRedirect:getPropertyRulesBuilderRulesV20230530BehaviorCacheRedirect": {
      "properties": {
        "enabled": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCacheTag:getPropertyRulesBuilderRulesV20230530BehaviorCacheTag": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "tag": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCacheTagVisible:getPropertyRulesBuilderRulesV20230530BehaviorCacheTagVisible": {
      "properties": {
        "behavior": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCaching:getPropertyRulesBuilderRulesV20230530BehaviorCaching": {
      "properties": {
        "behavior": {
          "type": "string"
        },
        "cacheControlDirectives": {
          "type": "string"
        },
        "cacheabilitySettings": {
          "type": "string"
        },
        "defaultTtl": {
          "type": "string"
        },
        "enhancedRfcSupport": {
          "type": "boolean"
        },
        "expirationSettings": {
          "type": "string"
        },
        "honorMaxAge": {
          "type": "boolean"
        },
        "honorMustRevalidate": {
          "type": "boolean"
        },
        "honorNoCache": {
          "type": "boolean"
        },
        "honorNoStore": {
          "type": "boolean"
        },
        "honorPrivate": {
          "type": "boolean"
        },
        "honorProxyRevalidate": {
          "type": "boolean"
        },
        "honorSMaxage": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "mustRevalidate": {
          "type": "boolean"
        },
        "revalidationSettings": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "ttl": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCentralAuthorization:getPropertyRulesBuilderRulesV20230530BehaviorCentralAuthorization": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorChaseRedirects:getPropertyRulesBuilderRulesV20230530BehaviorChaseRedirects": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "limit": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "serve404": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorClientCharacteristics:getPropertyRulesBuilderRulesV20230530BehaviorClientCharacteristics": {
      "properties": {
        "country": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCloudInterconnects:getPropertyRulesBuilderRulesV20230530BehaviorCloudInterconnects": {
      "properties": {
        "cloudLocations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCloudWrapper:getPropertyRulesBuilderRulesV20230530BehaviorCloudWrapper": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "location": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCloudWrapperAdvanced:getPropertyRulesBuilderRulesV20230530BehaviorCloudWrapperAdvanced": {
      "properties": {
        "customFailoverMap": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "failoverMap": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCommonMediaClientData:getPropertyRulesBuilderRulesV20230530BehaviorCommonMediaClientData": {
      "properties": {
        "enableCmcdSegmentPrefetch": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorConditionalOrigin:getPropertyRulesBuilderRulesV20230530BehaviorConditionalOrigin": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "originId": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorConstructResponse:getPropertyRulesBuilderRulesV20230530BehaviorConstructResponse": {
      "properties": {
        "body": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "forceEviction": {
          "type": "boolean"
        },
        "ignorePurge": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "responseCode": {
          "type": "integer"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristics:getPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristics": {
      "properties": {
        "catalogSize": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "objectSize": {
          "type": "string"
        },
        "popularityDistribution": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsAmd:getPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsAmd": {
      "properties": {
        "catalogSize": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "dash": {
          "type": "boolean"
        },
        "hds": {
          "type": "boolean"
        },
        "hls": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "popularityDistribution": {
          "type": "string"
        },
        "segmentDurationDash": {
          "type": "string"
        },
        "segmentDurationDashCustom": {
          "type": "integer"
        },
        "segmentDurationHds": {
          "type": "string"
        },
        "segmentDurationHdsCustom": {
          "type": "integer"
        },
        "segmentDurationHls": {
          "type": "string"
        },
        "segmentDurationHlsCustom": {
          "type": "number"
        },
        "segmentDurationSmooth": {
          "type": "string"
        },
        "segmentDurationSmoothCustom": {
          "type": "number"
        },
        "segmentSizeDash": {
          "type": "string"
        },
        "segmentSizeHds": {
          "type": "string"
        },
        "segmentSizeHls": {
          "type": "string"
        },
        "segmentSizeSmooth": {
          "type": "string"
        },
        "smooth": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsDd:getPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsDd": {
      "properties": {
        "catalogSize": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "objectSize": {
          "type": "string"
        },
        "optimizeOption": {
          "type": "boolean"
        },
        "popularityDistribution": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsWsdLargeFile:getPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsWsdLargeFile": {
      "properties": {
        "catalogSize": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "objectSize": {
          "type": "string"
        },
        "popularityDistribution": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsWsdLive:getPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsWsdLive": {
      "properties": {
        "catalogSize": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "dash": {
          "type": "boolean"
        },
        "hds": {
          "type": "boolean"
        },
        "hls": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "popularityDistribution": {
          "type": "string"
        },
        "segmentDurationDash": {
          "type": "string"
        },
        "segmentDurationHds": {
          "type": "string"
        },
        "segmentDurationHls": {
          "type": "string"
        },
        "segmentDurationSmooth": {
          "type": "string"
        },
        "segmentSizeDash": {
          "type": "string"
        },
        "segmentSizeHds": {
          "type": "string"
        },
        "segmentSizeHls": {
          "type": "string"
        },
        "segmentSizeSmooth": {
          "type": "string"
        },
        "smooth": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsWsdVod:getPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsWsdVod": {
      "properties": {
        "catalogSize": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "dash": {
          "type": "boolean"
        },
        "hds": {
          "type": "boolean"
        },
        "hls": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "popularityDistribution": {
          "type": "string"
        },
        "segmentDurationDash": {
          "type": "string"
        },
        "segmentDurationHds": {
          "type": "string"
        },
        "segmentDurationHls": {
          "type": "string"
        },
        "segmentDurationSmooth": {
          "type": "string"
        },
        "segmentSizeDash": {
          "type": "string"
        },
        "segmentSizeHds": {
          "type": "string"
        },
        "segmentSizeHls": {
          "type": "string"
        },
        "segmentSizeSmooth": {
          "type": "string"
        },
        "smooth": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorContentPrePosition:getPropertyRulesBuilderRulesV20230530BehaviorContentPrePosition": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "firstLocation": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "secondLocation": {
          "type": "string"
        },
        "sourceType": {
          "type": "string"
        },
        "targets": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorContentTargetingProtection:getPropertyRulesBuilderRulesV20230530BehaviorContentTargetingProtection": {
      "properties": {
        "countries": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dmas": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enableGeoProtection": {
          "type": "boolean"
        },
        "enableGeoRedirectOnDeny": {
          "type": "boolean"
        },
        "enableIpProtection": {
          "type": "boolean"
        },
        "enableIpRedirectOnDeny": {
          "type": "boolean"
        },
        "enableReferrerProtection": {
          "type": "boolean"
        },
        "enableReferrerRedirectOnDeny": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "geoProtectionMode": {
          "type": "string"
        },
        "geoProtectionTitle": {
          "type": "string"
        },
        "geoRedirectUrl": {
          "type": "string"
        },
        "ipAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ipProtectionMode": {
          "type": "string"
        },
        "ipProtectionTitle": {
          "type": "string"
        },
        "ipRedirectUrl": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "overrideIpAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "referrerDomains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "referrerProtectionMode": {
          "type": "string"
        },
        "referrerProtectionTitle": {
          "type": "string"
        },
        "referrerRedirectUrl": {
          "type": "string"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCorsSupport:getPropertyRulesBuilderRulesV20230530BehaviorCorsSupport": {
      "properties": {
        "allowCredentials": {
          "type": "boolean"
        },
        "allowHeaders": {
          "type": "string"
        },
        "allowOrigins": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "exposeHeaders": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "headers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locked": {
          "type": "boolean"
        },
        "methods": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "origins": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "preflightMaxAge": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCpCode:getPropertyRulesBuilderRulesV20230530BehaviorCpCode": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCpCodeValue:getPropertyRulesBuilderRulesV20230530BehaviorCpCodeValue"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCpCodeValue:getPropertyRulesBuilderRulesV20230530BehaviorCpCodeValue": {
      "properties": {
        "cpCodeLimits": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCpCodeValueCpCodeLimits:getPropertyRulesBuilderRulesV20230530BehaviorCpCodeValueCpCodeLimits"
        },
        "createdDate": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCpCodeValueCpCodeLimits:getPropertyRulesBuilderRulesV20230530BehaviorCpCodeValueCpCodeLimits": {
      "properties": {
        "currentCapacity": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "limitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorCustomBehavior:getPropertyRulesBuilderRulesV20230530BehaviorCustomBehavior": {
      "properties": {
        "behaviorId": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDatastream:getPropertyRulesBuilderRulesV20230530BehaviorDatastream": {
      "properties": {
        "beaconStreamTitle": {
          "type": "string"
        },
        "collectMidgressTraffic": {
          "type": "boolean"
        },
        "datastreamIds": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "logEnabled": {
          "type": "boolean"
        },
        "logStreamNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "logStreamTitle": {
          "type": "string"
        },
        "samplingPercentage": {
          "type": "integer"
        },
        "streamType": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDcp:getPropertyRulesBuilderRulesV20230530BehaviorDcp": {
      "properties": {
        "anonymous": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "gwenabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "namespaceId": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "tlsenabled": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        },
        "wsenabled": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDcpAuthHmacTransformation:getPropertyRulesBuilderRulesV20230530BehaviorDcpAuthHmacTransformation": {
      "properties": {
        "hashConversionAlgorithm": {
          "type": "string"
        },
        "hashConversionKey": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDcpAuthRegexTransformation:getPropertyRulesBuilderRulesV20230530BehaviorDcpAuthRegexTransformation": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "regexPattern": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDcpAuthSubstringTransformation:getPropertyRulesBuilderRulesV20230530BehaviorDcpAuthSubstringTransformation": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "substringEnd": {
          "type": "string"
        },
        "substringStart": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDcpAuthVariableExtractor:getPropertyRulesBuilderRulesV20230530BehaviorDcpAuthVariableExtractor": {
      "properties": {
        "certificateField": {
          "type": "string"
        },
        "dcpMutualAuthProcessingVariableId": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDcpDefaultAuthzGroups:getPropertyRulesBuilderRulesV20230530BehaviorDcpDefaultAuthzGroups": {
      "properties": {
        "groupNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDcpDevRelations:getPropertyRulesBuilderRulesV20230530BehaviorDcpDevRelations": {
      "properties": {
        "customValues": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "hostname": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "path": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDcpRealTimeAuth:getPropertyRulesBuilderRulesV20230530BehaviorDcpRealTimeAuth": {
      "properties": {
        "extractHostname": {
          "type": "boolean"
        },
        "extractJurisdiction": {
          "type": "boolean"
        },
        "extractNamespace": {
          "type": "boolean"
        },
        "hostnameClaim": {
          "type": "string"
        },
        "jurisdictionClaim": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "namespaceClaim": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDeliveryReceipt:getPropertyRulesBuilderRulesV20230530BehaviorDeliveryReceipt": {
      "properties": {
        "enabled": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDenyAccess:getPropertyRulesBuilderRulesV20230530BehaviorDenyAccess": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "reason": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDenyDirectFailoverAccess:getPropertyRulesBuilderRulesV20230530BehaviorDenyDirectFailoverAccess": {
      "properties": {
        "enabled": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDeviceCharacteristicCacheId:getPropertyRulesBuilderRulesV20230530BehaviorDeviceCharacteristicCacheId": {
      "properties": {
        "elements": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDeviceCharacteristicHeader:getPropertyRulesBuilderRulesV20230530BehaviorDeviceCharacteristicHeader": {
      "properties": {
        "elements": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDnsAsyncRefresh:getPropertyRulesBuilderRulesV20230530BehaviorDnsAsyncRefresh": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "timeout": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDnsPrefresh:getPropertyRulesBuilderRulesV20230530BehaviorDnsPrefresh": {
      "properties": {
        "delay": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "timeout": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDowngradeProtocol:getPropertyRulesBuilderRulesV20230530BehaviorDowngradeProtocol": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDownloadCompleteMarker:getPropertyRulesBuilderRulesV20230530BehaviorDownloadCompleteMarker": {
      "properties": {
        "enabled": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDownloadNotification:getPropertyRulesBuilderRulesV20230530BehaviorDownloadNotification": {
      "properties": {
        "enabled": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDownstreamCache:getPropertyRulesBuilderRulesV20230530BehaviorDownstreamCache": {
      "properties": {
        "allowBehavior": {
          "type": "string"
        },
        "behavior": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "sendHeaders": {
          "type": "string"
        },
        "sendPrivate": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "ttl": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDynamicThroughtputOptimization:getPropertyRulesBuilderRulesV20230530BehaviorDynamicThroughtputOptimization": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDynamicThroughtputOptimizationOverride:getPropertyRulesBuilderRulesV20230530BehaviorDynamicThroughtputOptimizationOverride": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "throughput": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorDynamicWebContent:getPropertyRulesBuilderRulesV20230530BehaviorDynamicWebContent": {
      "properties": {
        "imageCompression": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "prefetch": {
          "type": "boolean"
        },
        "realUserMonitoring": {
          "type": "boolean"
        },
        "sureRoute": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEcmsBulkUpload:getPropertyRulesBuilderRulesV20230530BehaviorEcmsBulkUpload": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEcmsDatabase:getPropertyRulesBuilderRulesV20230530BehaviorEcmsDatabase": {
      "properties": {
        "database": {
          "type": "string"
        },
        "extractLocation": {
          "type": "string"
        },
        "headerName": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "queryParameterName": {
          "type": "string"
        },
        "regexPattern": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEcmsDataset:getPropertyRulesBuilderRulesV20230530BehaviorEcmsDataset": {
      "properties": {
        "dataset": {
          "type": "string"
        },
        "extractLocation": {
          "type": "string"
        },
        "headerName": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "queryParameterName": {
          "type": "string"
        },
        "regexPattern": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEcmsObjectKey:getPropertyRulesBuilderRulesV20230530BehaviorEcmsObjectKey": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "regex": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEdgeConnect:getPropertyRulesBuilderRulesV20230530BehaviorEdgeConnect": {
      "properties": {
        "aggregateLines": {
          "type": "string"
        },
        "aggregateSize": {
          "type": "string"
        },
        "aggregateTime": {
          "type": "string"
        },
        "apiConnector": {
          "type": "string"
        },
        "apiDataElements": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "destinationHostname": {
          "type": "string"
        },
        "destinationPath": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "overrideAggregateSettings": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEdgeLoadBalancingAdvanced:getPropertyRulesBuilderRulesV20230530BehaviorEdgeLoadBalancingAdvanced": {
      "properties": {
        "description": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "xml": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEdgeLoadBalancingDataCenter:getPropertyRulesBuilderRulesV20230530BehaviorEdgeLoadBalancingDataCenter": {
      "properties": {
        "cookieName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "enableFailover": {
          "type": "boolean"
        },
        "failoverRules": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEdgeLoadBalancingDataCenterFailoverRule:getPropertyRulesBuilderRulesV20230530BehaviorEdgeLoadBalancingDataCenterFailoverRule"
          }
        },
        "failoverTitle": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "originId": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEdgeLoadBalancingDataCenterFailoverRule:getPropertyRulesBuilderRulesV20230530BehaviorEdgeLoadBalancingDataCenterFailoverRule": {
      "properties": {
        "absolutePath": {
          "type": "boolean"
        },
        "contextRoot": {
          "type": "string"
        },
        "failoverHostname": {
          "type": "string"
        },
        "modifyRequest": {
          "type": "boolean"
        },
        "overrideHostname": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEdgeLoadBalancingOrigin:getPropertyRulesBuilderRulesV20230530BehaviorEdgeLoadBalancingOrigin": {
      "properties": {
        "cookieName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "enableSessionPersistence": {
          "type": "boolean"
        },
        "hostname": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "sessionPersistenceTitle": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEdgeOriginAuthorization:getPropertyRulesBuilderRulesV20230530BehaviorEdgeOriginAuthorization": {
      "properties": {
        "cookieName": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEdgeRedirector:getPropertyRulesBuilderRulesV20230530BehaviorEdgeRedirector": {
      "properties": {
        "cloudletPolicy": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEdgeRedirectorCloudletPolicy:getPropertyRulesBuilderRulesV20230530BehaviorEdgeRedirectorCloudletPolicy"
        },
        "cloudletSharedPolicy": {
          "type": "integer"
        },
        "enabled": {
          "type": "boolean"
        },
        "isSharedPolicy": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEdgeRedirectorCloudletPolicy:getPropertyRulesBuilderRulesV20230530BehaviorEdgeRedirectorCloudletPolicy": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEdgeScape:getPropertyRulesBuilderRulesV20230530BehaviorEdgeScape": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEdgeSideIncludes:getPropertyRulesBuilderRulesV20230530BehaviorEdgeSideIncludes": {
      "properties": {
        "detectInjection": {
          "type": "boolean"
        },
        "enableViaHttp": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "i18nCharsets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "i18nStatus": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "passClientIp": {
          "type": "boolean"
        },
        "passSetCookie": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEdgeWorker:getPropertyRulesBuilderRulesV20230530BehaviorEdgeWorker": {
      "properties": {
        "createEdgeWorker": {
          "type": "string"
        },
        "edgeWorkerId": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "resourceTier": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEnhancedAkamaiProtocol:getPropertyRulesBuilderRulesV20230530BehaviorEnhancedAkamaiProtocol": {
      "properties": {
        "display": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEnhancedProxyDetection:getPropertyRulesBuilderRulesV20230530BehaviorEnhancedProxyDetection": {
      "properties": {
        "anonymousVpn": {
          "type": "string"
        },
        "bestPracticeAction": {
          "type": "string"
        },
        "bestPracticeRedirecturl": {
          "type": "string"
        },
        "detectAnonymousVpn": {
          "type": "boolean"
        },
        "detectAnonymousVpnAction": {
          "type": "string"
        },
        "detectAnonymousVpnRedirecturl": {
          "type": "string"
        },
        "detectHostingProvider": {
          "type": "boolean"
        },
        "detectHostingProviderAction": {
          "type": "string"
        },
        "detectHostingProviderRedirecturl": {
          "type": "string"
        },
        "detectPublicProxy": {
          "type": "boolean"
        },
        "detectPublicProxyAction": {
          "type": "string"
        },
        "detectPublicProxyRedirecturl": {
          "type": "string"
        },
        "detectResidentialProxy": {
          "type": "boolean"
        },
        "detectResidentialProxyAction": {
          "type": "string"
        },
        "detectResidentialProxyRedirecturl": {
          "type": "string"
        },
        "detectSmartDnsProxy": {
          "type": "boolean"
        },
        "detectSmartDnsProxyAction": {
          "type": "string"
        },
        "detectSmartDnsProxyRedirecturl": {
          "type": "string"
        },
        "detectTorExitNode": {
          "type": "boolean"
        },
        "detectTorExitNodeAction": {
          "type": "string"
        },
        "detectTorExitNodeRedirecturl": {
          "type": "string"
        },
        "detectVpnDataCenter": {
          "type": "boolean"
        },
        "detectVpnDataCenterAction": {
          "type": "string"
        },
        "detectVpnDataCenterRedirecturl": {
          "type": "string"
        },
        "enableConfigurationMode": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "forwardHeaderEnrichment": {
          "type": "boolean"
        },
        "hostingProvider": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "publicProxy": {
          "type": "string"
        },
        "residentialProxy": {
          "type": "string"
        },
        "smartDnsProxy": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "torExitNode": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "vpnDataCenter": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorEpdForwardHeaderEnrichment:getPropertyRulesBuilderRulesV20230530BehaviorEpdForwardHeaderEnrichment": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorFailAction:getPropertyRulesBuilderRulesV20230530BehaviorFailAction": {
      "properties": {
        "actionType": {
          "type": "string"
        },
        "allowFcmParentOverride": {
          "type": "boolean"
        },
        "cexCustomPath": {
          "type": "boolean"
        },
        "cexHostname": {
          "type": "string"
        },
        "cexPath": {
          "type": "string"
        },
        "contentCustomPath": {
          "type": "boolean"
        },
        "contentHostname": {
          "type": "string"
        },
        "contentPath": {
          "type": "string"
        },
        "cpCode": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorFailActionCpCode:getPropertyRulesBuilderRulesV20230530BehaviorFailActionCpCode"
        },
        "dynamicCustomPath": {
          "type": "boolean"
        },
        "dynamicMethod": {
          "type": "string"
        },
        "dynamicPath": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "modifyProtocol": {
          "type": "boolean"
        },
        "netStorageHostname": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorFailActionNetStorageHostname:getPropertyRulesBuilderRulesV20230530BehaviorFailActionNetStorageHostname"
        },
        "netStoragePath": {
          "type": "string"
        },
        "preserveQueryString": {
          "type": "boolean"
        },
        "protocol": {
          "type": "string"
        },
        "redirectCustomPath": {
          "type": "boolean"
        },
        "redirectHostname": {
          "type": "string"
        },
        "redirectHostnameType": {
          "type": "string"
        },
        "redirectMethod": {
          "type": "integer"
        },
        "redirectPath": {
          "type": "string"
        },
        "saasCnameEnabled": {
          "type": "boolean"
        },
        "saasCnameLevel": {
          "type": "integer"
        },
        "saasCookie": {
          "type": "string"
        },
        "saasQueryString": {
          "type": "string"
        },
        "saasRegex": {
          "type": "string"
        },
        "saasReplace": {
          "type": "string"
        },
        "saasSuffix": {
          "type": "string"
        },
        "saasType": {
          "type": "string"
        },
        "statusCode": {
          "type": "integer"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorFailActionCpCode:getPropertyRulesBuilderRulesV20230530BehaviorFailActionCpCode": {
      "properties": {
        "cpCodeLimits": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorFailActionCpCodeCpCodeLimits:getPropertyRulesBuilderRulesV20230530BehaviorFailActionCpCodeCpCodeLimits"
        },
        "createdDate": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorFailActionCpCodeCpCodeLimits:getPropertyRulesBuilderRulesV20230530BehaviorFailActionCpCodeCpCodeLimits": {
      "properties": {
        "currentCapacity": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "limitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorFailActionNetStorageHostname:getPropertyRulesBuilderRulesV20230530BehaviorFailActionNetStorageHostname": {
      "properties": {
        "cpCode": {
          "type": "integer"
        },
        "downloadDomainName": {
          "type": "string"
        },
        "g2oToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorFailoverBotManagerFeatureCompatibility:getPropertyRulesBuilderRulesV20230530BehaviorFailoverBotManagerFeatureCompatibility": {
      "properties": {
        "compatibility": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorFastInvalidate:getPropertyRulesBuilderRulesV20230530BehaviorFastInvalidate": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorFirstPartyMarketing:getPropertyRulesBuilderRulesV20230530BehaviorFirstPartyMarketing": {
      "properties": {
        "cloudletPolicy": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorFirstPartyMarketingCloudletPolicy:getPropertyRulesBuilderRulesV20230530BehaviorFirstPartyMarketingCloudletPolicy"
        },
        "enabled": {
          "type": "boolean"
        },
        "javaScriptInsertionRule": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "mediaMathPrefix": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorFirstPartyMarketingCloudletPolicy:getPropertyRulesBuilderRulesV20230530BehaviorFirstPartyMarketingCloudletPolicy": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorFirstPartyMarketingPlus:getPropertyRulesBuilderRulesV20230530BehaviorFirstPartyMarketingPlus": {
      "properties": {
        "cloudletPolicy": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorFirstPartyMarketingPlusCloudletPolicy:getPropertyRulesBuilderRulesV20230530BehaviorFirstPartyMarketingPlusCloudletPolicy"
        },
        "enabled": {
          "type": "boolean"
        },
        "javaScriptInsertionRule": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "mediaMathPrefix": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorFirstPartyMarketingPlusCloudletPolicy:getPropertyRulesBuilderRulesV20230530BehaviorFirstPartyMarketingPlusCloudletPolicy": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorForwardRewrite:getPropertyRulesBuilderRulesV20230530BehaviorForwardRewrite": {
      "properties": {
        "cloudletPolicy": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorForwardRewriteCloudletPolicy:getPropertyRulesBuilderRulesV20230530BehaviorForwardRewriteCloudletPolicy"
        },
        "cloudletSharedPolicy": {
          "type": "integer"
        },
        "enabled": {
          "type": "boolean"
        },
        "isSharedPolicy": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorForwardRewriteCloudletPolicy:getPropertyRulesBuilderRulesV20230530BehaviorForwardRewriteCloudletPolicy": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorG2oheader:getPropertyRulesBuilderRulesV20230530BehaviorG2oheader": {
      "properties": {
        "customSignStrings": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dataHeader": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "encodingVersion": {
          "type": "integer"
        },
        "locked": {
          "type": "boolean"
        },
        "nonce": {
          "type": "string"
        },
        "secretKey": {
          "type": "string"
        },
        "signedHeader": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "useCustomSignString": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorGlobalRequestNumber:getPropertyRulesBuilderRulesV20230530BehaviorGlobalRequestNumber": {
      "properties": {
        "headerName": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "outputOption": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "variableName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorGraphqlCaching:getPropertyRulesBuilderRulesV20230530BehaviorGraphqlCaching": {
      "properties": {
        "advanced": {
          "type": "string"
        },
        "cacheResponsesWithErrors": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "operationsJsonBodyParameterName": {
          "type": "string"
        },
        "operationsUrlQueryParameterName": {
          "type": "string"
        },
        "postRequestProcessingErrorHandling": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorGzipResponse:getPropertyRulesBuilderRulesV20230530BehaviorGzipResponse": {
      "properties": {
        "behavior": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorHdDataAdvanced:getPropertyRulesBuilderRulesV20230530BehaviorHdDataAdvanced": {
      "properties": {
        "description": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "xml": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorHealthDetection:getPropertyRulesBuilderRulesV20230530BehaviorHealthDetection": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "maximumReconnects": {
          "type": "integer"
        },
        "retryCount": {
          "type": "integer"
        },
        "retryInterval": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorHsafEipBinding:getPropertyRulesBuilderRulesV20230530BehaviorHsafEipBinding": {
      "properties": {
        "customExtractedSerial": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "hashMaxValue": {
          "type": "integer"
        },
        "hashMinValue": {
          "type": "integer"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "tier": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorHttp2:getPropertyRulesBuilderRulesV20230530BehaviorHttp2": {
      "properties": {
        "enabled": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorHttp3:getPropertyRulesBuilderRulesV20230530BehaviorHttp3": {
      "properties": {
        "enable": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorHttpStrictTransportSecurity:getPropertyRulesBuilderRulesV20230530BehaviorHttpStrictTransportSecurity": {
      "properties": {
        "enable": {
          "type": "boolean"
        },
        "includeSubDomains": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "maxAge": {
          "type": "string"
        },
        "preload": {
          "type": "boolean"
        },
        "redirect": {
          "type": "boolean"
        },
        "redirectStatusCode": {
          "type": "integer"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorHttpToHttpsUpgrade:getPropertyRulesBuilderRulesV20230530BehaviorHttpToHttpsUpgrade": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "upgrade": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImOverride:getPropertyRulesBuilderRulesV20230530BehaviorImOverride": {
      "properties": {
        "dpr": {
          "type": "number"
        },
        "dprvar": {
          "type": "string"
        },
        "excludeAllQueryParameters": {
          "type": "boolean"
        },
        "excludedQueryParameters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "format": {
          "type": "string"
        },
        "formatvar": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "override": {
          "type": "string"
        },
        "policy": {
          "type": "string"
        },
        "policyvar": {
          "type": "string"
        },
        "policyvarIMvar": {
          "type": "string"
        },
        "policyvarName": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "typesel": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "width": {
          "type": "number"
        },
        "widthvar": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImageAndVideoManager:getPropertyRulesBuilderRulesV20230530BehaviorImageAndVideoManager": {
      "properties": {
        "applyBestFileType": {
          "type": "boolean"
        },
        "cpCodeOriginal": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImageAndVideoManagerCpCodeOriginal:getPropertyRulesBuilderRulesV20230530BehaviorImageAndVideoManagerCpCodeOriginal"
        },
        "cpCodeTransformed": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImageAndVideoManagerCpCodeTransformed:getPropertyRulesBuilderRulesV20230530BehaviorImageAndVideoManagerCpCodeTransformed"
        },
        "enabled": {
          "type": "boolean"
        },
        "imageSet": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "policySetType": {
          "type": "string"
        },
        "resize": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "videoSet": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImageAndVideoManagerCpCodeOriginal:getPropertyRulesBuilderRulesV20230530BehaviorImageAndVideoManagerCpCodeOriginal": {
      "properties": {
        "cpCodeLimits": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImageAndVideoManagerCpCodeOriginalCpCodeLimits:getPropertyRulesBuilderRulesV20230530BehaviorImageAndVideoManagerCpCodeOriginalCpCodeLimits"
        },
        "createdDate": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImageAndVideoManagerCpCodeOriginalCpCodeLimits:getPropertyRulesBuilderRulesV20230530BehaviorImageAndVideoManagerCpCodeOriginalCpCodeLimits": {
      "properties": {
        "currentCapacity": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "limitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImageAndVideoManagerCpCodeTransformed:getPropertyRulesBuilderRulesV20230530BehaviorImageAndVideoManagerCpCodeTransformed": {
      "properties": {
        "cpCodeLimits": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImageAndVideoManagerCpCodeTransformedCpCodeLimits:getPropertyRulesBuilderRulesV20230530BehaviorImageAndVideoManagerCpCodeTransformedCpCodeLimits"
        },
        "createdDate": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImageAndVideoManagerCpCodeTransformedCpCodeLimits:getPropertyRulesBuilderRulesV20230530BehaviorImageAndVideoManagerCpCodeTransformedCpCodeLimits": {
      "properties": {
        "currentCapacity": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "limitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImageManager:getPropertyRulesBuilderRulesV20230530BehaviorImageManager": {
      "properties": {
        "advanced": {
          "type": "boolean"
        },
        "apiReferenceTitle": {
          "type": "string"
        },
        "applyBestFileType": {
          "type": "boolean"
        },
        "cpCodeOriginal": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImageManagerCpCodeOriginal:getPropertyRulesBuilderRulesV20230530BehaviorImageManagerCpCodeOriginal"
        },
        "cpCodeTransformed": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImageManagerCpCodeTransformed:getPropertyRulesBuilderRulesV20230530BehaviorImageManagerCpCodeTransformed"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "policySet": {
          "type": "string"
        },
        "policyToken": {
          "type": "string"
        },
        "policyTokenDefault": {
          "type": "string"
        },
        "resize": {
          "type": "boolean"
        },
        "settingsTitle": {
          "type": "string"
        },
        "superCacheRegion": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "trafficTitle": {
          "type": "string"
        },
        "useExistingPolicySet": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImageManagerCpCodeOriginal:getPropertyRulesBuilderRulesV20230530BehaviorImageManagerCpCodeOriginal": {
      "properties": {
        "cpCodeLimits": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImageManagerCpCodeOriginalCpCodeLimits:getPropertyRulesBuilderRulesV20230530BehaviorImageManagerCpCodeOriginalCpCodeLimits"
        },
        "createdDate": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImageManagerCpCodeOriginalCpCodeLimits:getPropertyRulesBuilderRulesV20230530BehaviorImageManagerCpCodeOriginalCpCodeLimits": {
      "properties": {
        "currentCapacity": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "limitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImageManagerCpCodeTransformed:getPropertyRulesBuilderRulesV20230530BehaviorImageManagerCpCodeTransformed": {
      "properties": {
        "cpCodeLimits": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImageManagerCpCodeTransformedCpCodeLimits:getPropertyRulesBuilderRulesV20230530BehaviorImageManagerCpCodeTransformedCpCodeLimits"
        },
        "createdDate": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImageManagerCpCodeTransformedCpCodeLimits:getPropertyRulesBuilderRulesV20230530BehaviorImageManagerCpCodeTransformedCpCodeLimits": {
      "properties": {
        "currentCapacity": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "limitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImageManagerVideo:getPropertyRulesBuilderRulesV20230530BehaviorImageManagerVideo": {
      "properties": {
        "advanced": {
          "type": "boolean"
        },
        "apiReferenceTitle": {
          "type": "string"
        },
        "applyBestFileType": {
          "type": "boolean"
        },
        "cpCodeOriginal": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImageManagerVideoCpCodeOriginal:getPropertyRulesBuilderRulesV20230530BehaviorImageManagerVideoCpCodeOriginal"
        },
        "cpCodeTransformed": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImageManagerVideoCpCodeTransformed:getPropertyRulesBuilderRulesV20230530BehaviorImageManagerVideoCpCodeTransformed"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "policySet": {
          "type": "string"
        },
        "policyToken": {
          "type": "string"
        },
        "policyTokenDefault": {
          "type": "string"
        },
        "resize": {
          "type": "boolean"
        },
        "settingsTitle": {
          "type": "string"
        },
        "superCacheRegion": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "trafficTitle": {
          "type": "string"
        },
        "useExistingPolicySet": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImageManagerVideoCpCodeOriginal:getPropertyRulesBuilderRulesV20230530BehaviorImageManagerVideoCpCodeOriginal": {
      "properties": {
        "cpCodeLimits": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImageManagerVideoCpCodeOriginalCpCodeLimits:getPropertyRulesBuilderRulesV20230530BehaviorImageManagerVideoCpCodeOriginalCpCodeLimits"
        },
        "createdDate": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImageManagerVideoCpCodeOriginalCpCodeLimits:getPropertyRulesBuilderRulesV20230530BehaviorImageManagerVideoCpCodeOriginalCpCodeLimits": {
      "properties": {
        "currentCapacity": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "limitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImageManagerVideoCpCodeTransformed:getPropertyRulesBuilderRulesV20230530BehaviorImageManagerVideoCpCodeTransformed": {
      "properties": {
        "cpCodeLimits": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImageManagerVideoCpCodeTransformedCpCodeLimits:getPropertyRulesBuilderRulesV20230530BehaviorImageManagerVideoCpCodeTransformedCpCodeLimits"
        },
        "createdDate": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorImageManagerVideoCpCodeTransformedCpCodeLimits:getPropertyRulesBuilderRulesV20230530BehaviorImageManagerVideoCpCodeTransformedCpCodeLimits": {
      "properties": {
        "currentCapacity": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "limitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorInclude:getPropertyRulesBuilderRulesV20230530BehaviorInclude": {
      "properties": {
        "id": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorInstant:getPropertyRulesBuilderRulesV20230530BehaviorInstant": {
      "properties": {
        "customLinkRelations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locked": {
          "type": "boolean"
        },
        "prefetchCacheable": {
          "type": "boolean"
        },
        "prefetchHtml": {
          "type": "boolean"
        },
        "prefetchNoStore": {
          "type": "boolean"
        },
        "prefetchNoStoreExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorInstantConfig:getPropertyRulesBuilderRulesV20230530BehaviorInstantConfig": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorLargeFileOptimization:getPropertyRulesBuilderRulesV20230530BehaviorLargeFileOptimization": {
      "properties": {
        "enablePartialObjectCaching": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "maximumSize": {
          "type": "string"
        },
        "minimumSize": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "useVersioning": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorLargeFileOptimizationAdvanced:getPropertyRulesBuilderRulesV20230530BehaviorLargeFileOptimizationAdvanced": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "fragmentSize": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "objectSize": {
          "type": "string"
        },
        "prefetchAfterRequest": {
          "type": "integer"
        },
        "prefetchDuringRequest": {
          "type": "integer"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorLimitBitRate:getPropertyRulesBuilderRulesV20230530BehaviorLimitBitRate": {
      "properties": {
        "bitrateTables": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorLimitBitRateBitrateTable:getPropertyRulesBuilderRulesV20230530BehaviorLimitBitRateBitrateTable"
          }
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "thresholdTables": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorLimitBitRateThresholdTable:getPropertyRulesBuilderRulesV20230530BehaviorLimitBitRateThresholdTable"
          }
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorLimitBitRateBitrateTable:getPropertyRulesBuilderRulesV20230530BehaviorLimitBitRateBitrateTable": {
      "properties": {
        "bitrateUnit": {
          "type": "string"
        },
        "bitrateValue": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorLimitBitRateThresholdTable:getPropertyRulesBuilderRulesV20230530BehaviorLimitBitRateThresholdTable": {
      "properties": {
        "thresholdUnit": {
          "type": "string"
        },
        "thresholdValue": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorLogCustom:getPropertyRulesBuilderRulesV20230530BehaviorLogCustom": {
      "properties": {
        "customLogField": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "logCustomLogField": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorMPulse:getPropertyRulesBuilderRulesV20230530BehaviorMPulse": {
      "properties": {
        "apiKey": {
          "type": "string"
        },
        "bufferSize": {
          "type": "string"
        },
        "configOverride": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "loaderVersion": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "requirePci": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "titleOptional": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorManifestPersonalization:getPropertyRulesBuilderRulesV20230530BehaviorManifestPersonalization": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "hlsEnableDebugHeaders": {
          "type": "boolean"
        },
        "hlsEnabled": {
          "type": "boolean"
        },
        "hlsFilterInBitrateRanges": {
          "type": "string"
        },
        "hlsFilterInBitrates": {
          "type": "string"
        },
        "hlsMode": {
          "type": "string"
        },
        "hlsPreferredBitrate": {
          "type": "string"
        },
        "hlsQueryParamEnabled": {
          "type": "boolean"
        },
        "hlsQueryParamSecretKey": {
          "type": "string"
        },
        "hlsQueryParamTransitionKey": {
          "type": "string"
        },
        "hlsShowAdvanced": {
          "type": "boolean"
        },
        "hlsTitle": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorManifestRerouting:getPropertyRulesBuilderRulesV20230530BehaviorManifestRerouting": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "partner": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorManualServerPush:getPropertyRulesBuilderRulesV20230530BehaviorManualServerPush": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "serverpushlists": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorMediaAcceleration:getPropertyRulesBuilderRulesV20230530BehaviorMediaAcceleration": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorMediaAccelerationQuicOptout:getPropertyRulesBuilderRulesV20230530BehaviorMediaAccelerationQuicOptout": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "optout": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorMediaClient:getPropertyRulesBuilderRulesV20230530BehaviorMediaClient": {
      "properties": {
        "beaconId": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "useHybridHttpUdp": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorMediaFileRetrievalOptimization:getPropertyRulesBuilderRulesV20230530BehaviorMediaFileRetrievalOptimization": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorMediaOriginFailover:getPropertyRulesBuilderRulesV20230530BehaviorMediaOriginFailover": {
      "properties": {
        "cacheErrorResponse": {
          "type": "boolean"
        },
        "cacheWindow": {
          "type": "string"
        },
        "clientResponseCode": {
          "type": "string"
        },
        "detectObjectUnavailable": {
          "type": "boolean"
        },
        "detectObjectUnavailableTitle": {
          "type": "string"
        },
        "detectOriginUnavailable": {
          "type": "boolean"
        },
        "detectOriginUnavailableTitle": {
          "type": "string"
        },
        "detectOriginUnresponsive": {
          "type": "boolean"
        },
        "detectOriginUnresponsiveTitle": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "objectUnavailableAlternateHost": {
          "type": "string"
        },
        "objectUnavailableBackupHost": {
          "type": "string"
        },
        "objectUnavailableBlacklistOriginIp": {
          "type": "boolean"
        },
        "objectUnavailableBlacklistWindow": {
          "type": "string"
        },
        "objectUnavailableChangeProtocol": {
          "type": "boolean"
        },
        "objectUnavailableDetectionLevel": {
          "type": "string"
        },
        "objectUnavailableIncludeQueryString": {
          "type": "boolean"
        },
        "objectUnavailableModifiedPath": {
          "type": "string"
        },
        "objectUnavailableModifyRequestPath": {
          "type": "boolean"
        },
        "objectUnavailableProtocol": {
          "type": "string"
        },
        "objectUnavailableRecovery": {
          "type": "string"
        },
        "objectUnavailableRedirectMethod": {
          "type": "integer"
        },
        "objectUnavailableResponseCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "objectUnavailableRetryLimit": {
          "type": "string"
        },
        "originUnavailableAlternateHost": {
          "type": "string"
        },
        "originUnavailableBackupHost": {
          "type": "string"
        },
        "originUnavailableBlacklistOriginIp": {
          "type": "boolean"
        },
        "originUnavailableBlacklistWindow": {
          "type": "string"
        },
        "originUnavailableChangeProtocol": {
          "type": "boolean"
        },
        "originUnavailableDetectionLevel": {
          "type": "string"
        },
        "originUnavailableIncludeQueryString": {
          "type": "boolean"
        },
        "originUnavailableModifiedPath": {
          "type": "string"
        },
        "originUnavailableModifyRequestPath": {
          "type": "boolean"
        },
        "originUnavailableProtocol": {
          "type": "string"
        },
        "originUnavailableRecovery": {
          "type": "string"
        },
        "originUnavailableRedirectMethod": {
          "type": "integer"
        },
        "originUnavailableResponseCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "originUnavailableRetryLimit": {
          "type": "string"
        },
        "originUnresponsiveAlternateHost": {
          "type": "string"
        },
        "originUnresponsiveBackupHost": {
          "type": "string"
        },
        "originUnresponsiveBlacklistOriginIp": {
          "type": "boolean"
        },
        "originUnresponsiveBlacklistWindow": {
          "type": "string"
        },
        "originUnresponsiveChangeProtocol": {
          "type": "boolean"
        },
        "originUnresponsiveDetectionLevel": {
          "type": "string"
        },
        "originUnresponsiveIncludeQueryString": {
          "type": "boolean"
        },
        "originUnresponsiveModifiedPath": {
          "type": "string"
        },
        "originUnresponsiveModifyRequestPath": {
          "type": "boolean"
        },
        "originUnresponsiveProtocol": {
          "type": "string"
        },
        "originUnresponsiveRecovery": {
          "type": "string"
        },
        "originUnresponsiveRedirectMethod": {
          "type": "integer"
        },
        "originUnresponsiveRetryLimit": {
          "type": "string"
        },
        "otherOptions": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorMetadataCaching:getPropertyRulesBuilderRulesV20230530BehaviorMetadataCaching": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorMobileSdkPerformance:getPropertyRulesBuilderRulesV20230530BehaviorMobileSdkPerformance": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "secondaryMultipathToOrigin": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorModifyIncomingRequestHeader:getPropertyRulesBuilderRulesV20230530BehaviorModifyIncomingRequestHeader": {
      "properties": {
        "action": {
          "type": "string"
        },
        "avoidDuplicateHeaders": {
          "type": "boolean"
        },
        "customHeaderName": {
          "type": "string"
        },
        "headerValue": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "newHeaderValue": {
          "type": "string"
        },
        "standardAddHeaderName": {
          "type": "string"
        },
        "standardDeleteHeaderName": {
          "type": "string"
        },
        "standardModifyHeaderName": {
          "type": "string"
        },
        "standardPassHeaderName": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorModifyIncomingResponseHeader:getPropertyRulesBuilderRulesV20230530BehaviorModifyIncomingResponseHeader": {
      "properties": {
        "action": {
          "type": "string"
        },
        "avoidDuplicateHeaders": {
          "type": "boolean"
        },
        "customHeaderName": {
          "type": "string"
        },
        "headerValue": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "newHeaderValue": {
          "type": "string"
        },
        "standardAddHeaderName": {
          "type": "string"
        },
        "standardDeleteHeaderName": {
          "type": "string"
        },
        "standardModifyHeaderName": {
          "type": "string"
        },
        "standardPassHeaderName": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorModifyOutgoingRequestHeader:getPropertyRulesBuilderRulesV20230530BehaviorModifyOutgoingRequestHeader": {
      "properties": {
        "action": {
          "type": "string"
        },
        "avoidDuplicateHeaders": {
          "type": "boolean"
        },
        "customHeaderName": {
          "type": "string"
        },
        "headerValue": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "matchMultiple": {
          "type": "boolean"
        },
        "newHeaderValue": {
          "type": "string"
        },
        "regexHeaderMatch": {
          "type": "string"
        },
        "regexHeaderReplace": {
          "type": "string"
        },
        "standardAddHeaderName": {
          "type": "string"
        },
        "standardDeleteHeaderName": {
          "type": "string"
        },
        "standardModifyHeaderName": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorModifyOutgoingResponseHeader:getPropertyRulesBuilderRulesV20230530BehaviorModifyOutgoingResponseHeader": {
      "properties": {
        "action": {
          "type": "string"
        },
        "avoidDuplicateHeaders": {
          "type": "boolean"
        },
        "customHeaderName": {
          "type": "string"
        },
        "headerValue": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "matchMultiple": {
          "type": "boolean"
        },
        "newHeaderValue": {
          "type": "string"
        },
        "regexHeaderMatch": {
          "type": "string"
        },
        "regexHeaderReplace": {
          "type": "string"
        },
        "standardAddHeaderName": {
          "type": "string"
        },
        "standardDeleteHeaderName": {
          "type": "string"
        },
        "standardModifyHeaderName": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorModifyViaHeader:getPropertyRulesBuilderRulesV20230530BehaviorModifyViaHeader": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "modificationOption": {
          "type": "string"
        },
        "renameHeaderTo": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorOrigin:getPropertyRulesBuilderRulesV20230530BehaviorOrigin": {
      "properties": {
        "cacheKeyHostname": {
          "type": "string"
        },
        "compress": {
          "type": "boolean"
        },
        "customCertificateAuthorities": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificateAuthority:getPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificateAuthority"
          }
        },
        "customCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificate:getPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificate"
          }
        },
        "customForwardHostHeader": {
          "type": "string"
        },
        "customValidCnValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enableTrueClientIp": {
          "type": "boolean"
        },
        "forwardHostHeader": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "httpPort": {
          "type": "integer"
        },
        "httpsPort": {
          "type": "integer"
        },
        "ipVersion": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "mslorigin": {
          "type": "string"
        },
        "netStorage": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorOriginNetStorage:getPropertyRulesBuilderRulesV20230530BehaviorOriginNetStorage"
        },
        "originCertificate": {
          "type": "string"
        },
        "originCertsToHonor": {
          "type": "string"
        },
        "originId": {
          "type": "string"
        },
        "originSni": {
          "type": "boolean"
        },
        "originType": {
          "type": "string"
        },
        "ports": {
          "type": "string"
        },
        "saasCnameEnabled": {
          "type": "boolean"
        },
        "saasCnameLevel": {
          "type": "integer"
        },
        "saasCookie": {
          "type": "string"
        },
        "saasQueryString": {
          "type": "string"
        },
        "saasRegex": {
          "type": "string"
        },
        "saasReplace": {
          "type": "string"
        },
        "saasSuffix": {
          "type": "string"
        },
        "saasType": {
          "type": "string"
        },
        "secondHostname": {
          "type": "string"
        },
        "secondHostnameEnabled": {
          "type": "boolean"
        },
        "standardCertificateAuthorities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "templateUuid": {
          "type": "string"
        },
        "trueClientIpClientSetting": {
          "type": "boolean"
        },
        "trueClientIpHeader": {
          "type": "string"
        },
        "useUniqueCacheKey": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        },
        "verificationMode": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorOriginCharacteristics:getPropertyRulesBuilderRulesV20230530BehaviorOriginCharacteristics": {
      "properties": {
        "accessKeyEncryptedStorage": {
          "type": "boolean"
        },
        "adcTitle": {
          "type": "string"
        },
        "authenticationMethod": {
          "type": "string"
        },
        "authenticationMethodTitle": {
          "type": "string"
        },
        "awsAccessKeyId": {
          "type": "string"
        },
        "awsAccessKeyVersionGuid": {
          "type": "string"
        },
        "awsArRegion": {
          "type": "string"
        },
        "awsHost": {
          "type": "string"
        },
        "awsRegion": {
          "type": "string"
        },
        "awsSecretAccessKey": {
          "type": "string"
        },
        "awsService": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "customSignStrings": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "directConnectGeo": {
          "type": "string"
        },
        "encodingVersion": {
          "type": "integer"
        },
        "endPointService": {
          "type": "string"
        },
        "gcsAccessKeyVersionGuid": {
          "type": "string"
        },
        "gcsHmacKeyAccessId": {
          "type": "string"
        },
        "gcsHmacKeySecret": {
          "type": "string"
        },
        "hostnameTag": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "mslkey": {
          "type": "string"
        },
        "mslname": {
          "type": "string"
        },
        "nonce": {
          "type": "string"
        },
        "originLocationTitle": {
          "type": "string"
        },
        "propertyIdTag": {
          "type": "boolean"
        },
        "roleArn": {
          "type": "string"
        },
        "secretKey": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "useCustomSignString": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorOriginCharacteristicsWsd:getPropertyRulesBuilderRulesV20230530BehaviorOriginCharacteristicsWsd": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "origintype": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificate:getPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificate": {
      "properties": {
        "canBeCa": {
          "type": "boolean"
        },
        "canBeLeaf": {
          "type": "boolean"
        },
        "issuerRdns": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificateIssuerRdns:getPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificateIssuerRdns"
        },
        "notAfter": {
          "type": "integer"
        },
        "notBefore": {
          "type": "integer"
        },
        "pemEncodedCert": {
          "type": "string"
        },
        "publicKey": {
          "type": "string"
        },
        "publicKeyAlgorithm": {
          "type": "string"
        },
        "publicKeyFormat": {
          "type": "string"
        },
        "selfSigned": {
          "type": "boolean"
        },
        "serialNumber": {
          "type": "string"
        },
        "sha1Fingerprint": {
          "type": "string"
        },
        "sigAlgName": {
          "type": "string"
        },
        "subjectAlternativeNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subjectCn": {
          "type": "string"
        },
        "subjectRdns": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificateSubjectRdns:getPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificateSubjectRdns"
        },
        "version": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificateAuthority:getPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificateAuthority": {
      "properties": {
        "canBeCa": {
          "type": "boolean"
        },
        "canBeLeaf": {
          "type": "boolean"
        },
        "issuerRdns": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificateAuthorityIssuerRdns:getPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificateAuthorityIssuerRdns"
        },
        "notAfter": {
          "type": "integer"
        },
        "notBefore": {
          "type": "integer"
        },
        "pemEncodedCert": {
          "type": "string"
        },
        "publicKey": {
          "type": "string"
        },
        "publicKeyAlgorithm": {
          "type": "string"
        },
        "publicKeyFormat": {
          "type": "string"
        },
        "selfSigned": {
          "type": "boolean"
        },
        "serialNumber": {
          "type": "string"
        },
        "sha1Fingerprint": {
          "type": "string"
        },
        "sigAlgName": {
          "type": "string"
        },
        "subjectAlternativeNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subjectCn": {
          "type": "string"
        },
        "subjectRdns": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificateAuthoritySubjectRdns:getPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificateAuthoritySubjectRdns"
        },
        "version": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificateAuthorityIssuerRdns:getPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificateAuthorityIssuerRdns": {
      "properties": {
        "c": {
          "type": "string"
        },
        "cn": {
          "type": "string"
        },
        "o": {
          "type": "string"
        },
        "ou": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificateAuthoritySubjectRdns:getPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificateAuthoritySubjectRdns": {
      "properties": {
        "c": {
          "type": "string"
        },
        "cn": {
          "type": "string"
        },
        "o": {
          "type": "string"
        },
        "ou": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificateIssuerRdns:getPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificateIssuerRdns": {
      "properties": {
        "c": {
          "type": "string"
        },
        "cn": {
          "type": "string"
        },
        "o": {
          "type": "string"
        },
        "ou": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificateSubjectRdns:getPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificateSubjectRdns": {
      "properties": {
        "c": {
          "type": "string"
        },
        "cn": {
          "type": "string"
        },
        "o": {
          "type": "string"
        },
        "ou": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorOriginFailureRecoveryMethod:getPropertyRulesBuilderRulesV20230530BehaviorOriginFailureRecoveryMethod": {
      "properties": {
        "customStatusCode": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "recoveryMethod": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorOriginFailureRecoveryPolicy:getPropertyRulesBuilderRulesV20230530BehaviorOriginFailureRecoveryPolicy": {
      "properties": {
        "binaryEquivalentContent": {
          "type": "boolean"
        },
        "enableIpAvoidance": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "ipAvoidanceErrorThreshold": {
          "type": "integer"
        },
        "ipAvoidanceRetryInterval": {
          "type": "integer"
        },
        "locked": {
          "type": "boolean"
        },
        "monitorOriginResponsiveness": {
          "type": "boolean"
        },
        "monitorResponseCodes1s": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "monitorResponseCodes2s": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "monitorResponseCodes3s": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "monitorStatusCodes1": {
          "type": "boolean"
        },
        "monitorStatusCodes1EnableRecovery": {
          "type": "boolean"
        },
        "monitorStatusCodes1EnableRetry": {
          "type": "boolean"
        },
        "monitorStatusCodes1RecoveryConfigName": {
          "type": "string"
        },
        "monitorStatusCodes2": {
          "type": "boolean"
        },
        "monitorStatusCodes2EnableRecovery": {
          "type": "boolean"
        },
        "monitorStatusCodes2EnableRetry": {
          "type": "boolean"
        },
        "monitorStatusCodes2RecoveryConfigName": {
          "type": "string"
        },
        "monitorStatusCodes3": {
          "type": "boolean"
        },
        "monitorStatusCodes3EnableRecovery": {
          "type": "boolean"
        },
        "monitorStatusCodes3EnableRetry": {
          "type": "boolean"
        },
        "monitorStatusCodes3RecoveryConfigName": {
          "type": "string"
        },
        "originResponsivenessCustomTimeout": {
          "type": "integer"
        },
        "originResponsivenessEnableRecovery": {
          "type": "boolean"
        },
        "originResponsivenessEnableRetry": {
          "type": "boolean"
        },
        "originResponsivenessMonitoring": {
          "type": "string"
        },
        "originResponsivenessRecoveryConfigName": {
          "type": "string"
        },
        "originResponsivenessTimeout": {
          "type": "string"
        },
        "statusCodeMonitoring1": {
          "type": "string"
        },
        "statusCodeMonitoring2": {
          "type": "string"
        },
        "statusCodeMonitoring3": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "tuningParameters": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorOriginIpAcl:getPropertyRulesBuilderRulesV20230530BehaviorOriginIpAcl": {
      "properties": {
        "enable": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorOriginNetStorage:getPropertyRulesBuilderRulesV20230530BehaviorOriginNetStorage": {
      "properties": {
        "cpCode": {
          "type": "integer"
        },
        "downloadDomainName": {
          "type": "string"
        },
        "g2oToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorPersistentClientConnection:getPropertyRulesBuilderRulesV20230530BehaviorPersistentClientConnection": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "timeout": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorPersistentConnection:getPropertyRulesBuilderRulesV20230530BehaviorPersistentConnection": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "timeout": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorPersonallyIdentifiableInformation:getPropertyRulesBuilderRulesV20230530BehaviorPersonallyIdentifiableInformation": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorPhasedRelease:getPropertyRulesBuilderRulesV20230530BehaviorPhasedRelease": {
      "properties": {
        "cloudletPolicy": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorPhasedReleaseCloudletPolicy:getPropertyRulesBuilderRulesV20230530BehaviorPhasedReleaseCloudletPolicy"
        },
        "cloudletSharedPolicy": {
          "type": "integer"
        },
        "enabled": {
          "type": "boolean"
        },
        "failoverDuration": {
          "type": "integer"
        },
        "failoverEnabled": {
          "type": "boolean"
        },
        "failoverResponseCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "failoverTitle": {
          "type": "string"
        },
        "isSharedPolicy": {
          "type": "boolean"
        },
        "label": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "populationCookieType": {
          "type": "string"
        },
        "populationDuration": {
          "type": "string"
        },
        "populationExpirationDate": {
          "type": "string"
        },
        "populationRefresh": {
          "type": "boolean"
        },
        "populationTitle": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorPhasedReleaseCloudletPolicy:getPropertyRulesBuilderRulesV20230530BehaviorPhasedReleaseCloudletPolicy": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorPreconnect:getPropertyRulesBuilderRulesV20230530BehaviorPreconnect": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "preconnectlists": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorPredictiveContentDelivery:getPropertyRulesBuilderRulesV20230530BehaviorPredictiveContentDelivery": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorPredictivePrefetching:getPropertyRulesBuilderRulesV20230530BehaviorPredictivePrefetching": {
      "properties": {
        "accuracyTarget": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorPrefetch:getPropertyRulesBuilderRulesV20230530BehaviorPrefetch": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorPrefetchable:getPropertyRulesBuilderRulesV20230530BehaviorPrefetchable": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorPrefreshCache:getPropertyRulesBuilderRulesV20230530BehaviorPrefreshCache": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "prefreshval": {
          "type": "integer"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorQuality:getPropertyRulesBuilderRulesV20230530BehaviorQuality": {
      "properties": {
        "audienceSettings": {
          "type": "string"
        },
        "catalogSize": {
          "type": "string"
        },
        "contentSettings": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "deliveryFormat": {
          "type": "string"
        },
        "deliveryType": {
          "type": "string"
        },
        "downloadType": {
          "type": "string"
        },
        "endUserLocation": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "maximumConcurrentUsers": {
          "type": "string"
        },
        "objectSize": {
          "type": "string"
        },
        "optimizeFor": {
          "type": "string"
        },
        "originSettings": {
          "type": "string"
        },
        "popularityDistribution": {
          "type": "string"
        },
        "refreshRate": {
          "type": "string"
        },
        "segmentDuration": {
          "type": "integer"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorQuicBeta:getPropertyRulesBuilderRulesV20230530BehaviorQuicBeta": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "quicOfferPercentage": {
          "type": "integer"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRandomSeek:getPropertyRulesBuilderRulesV20230530BehaviorRandomSeek": {
      "properties": {
        "flv": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "maximumSize": {
          "type": "string"
        },
        "mp4": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRapid:getPropertyRulesBuilderRulesV20230530BehaviorRapid": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorReadTimeout:getPropertyRulesBuilderRulesV20230530BehaviorReadTimeout": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRealTimeReporting:getPropertyRulesBuilderRulesV20230530BehaviorRealTimeReporting": {
      "properties": {
        "advanced": {
          "type": "boolean"
        },
        "beaconSamplingPercentage": {
          "type": "number"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRealUserMonitoring:getPropertyRulesBuilderRulesV20230530BehaviorRealUserMonitoring": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRedirect:getPropertyRulesBuilderRulesV20230530BehaviorRedirect": {
      "properties": {
        "destinationHostname": {
          "type": "string"
        },
        "destinationHostnameOther": {
          "type": "string"
        },
        "destinationHostnameSibling": {
          "type": "string"
        },
        "destinationHostnameSubdomain": {
          "type": "string"
        },
        "destinationPath": {
          "type": "string"
        },
        "destinationPathOther": {
          "type": "string"
        },
        "destinationPathPrefix": {
          "type": "string"
        },
        "destinationPathSuffix": {
          "type": "string"
        },
        "destinationPathSuffixStatus": {
          "type": "string"
        },
        "destinationProtocol": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "mobileDefaultChoice": {
          "type": "string"
        },
        "queryString": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRedirectplus:getPropertyRulesBuilderRulesV20230530BehaviorRedirectplus": {
      "properties": {
        "destination": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "responseCode": {
          "type": "integer"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRefererChecking:getPropertyRulesBuilderRulesV20230530BehaviorRefererChecking": {
      "properties": {
        "allowChildren": {
          "type": "boolean"
        },
        "domains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "strict": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRemoveQueryParameter:getPropertyRulesBuilderRulesV20230530BehaviorRemoveQueryParameter": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "parameters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRemoveVary:getPropertyRulesBuilderRulesV20230530BehaviorRemoveVary": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorReport:getPropertyRulesBuilderRulesV20230530BehaviorReport": {
      "properties": {
        "cookies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customLogField": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "logAcceptLanguage": {
          "type": "boolean"
        },
        "logCookies": {
          "type": "string"
        },
        "logCustomLogField": {
          "type": "boolean"
        },
        "logEdgeIp": {
          "type": "boolean"
        },
        "logHost": {
          "type": "boolean"
        },
        "logReferer": {
          "type": "boolean"
        },
        "logUserAgent": {
          "type": "boolean"
        },
        "logXForwardedFor": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRequestControl:getPropertyRulesBuilderRulesV20230530BehaviorRequestControl": {
      "properties": {
        "branded403File": {
          "type": "string"
        },
        "branded403StatusCode": {
          "type": "integer"
        },
        "branded403Url": {
          "type": "string"
        },
        "brandedDenyCacheTtl": {
          "type": "integer"
        },
        "cloudletPolicy": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRequestControlCloudletPolicy:getPropertyRulesBuilderRulesV20230530BehaviorRequestControlCloudletPolicy"
        },
        "cloudletSharedPolicy": {
          "type": "integer"
        },
        "enableBranded403": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "isSharedPolicy": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "netStorage": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRequestControlNetStorage:getPropertyRulesBuilderRulesV20230530BehaviorRequestControlNetStorage"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRequestControlCloudletPolicy:getPropertyRulesBuilderRulesV20230530BehaviorRequestControlCloudletPolicy": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRequestControlNetStorage:getPropertyRulesBuilderRulesV20230530BehaviorRequestControlNetStorage": {
      "properties": {
        "cpCode": {
          "type": "integer"
        },
        "downloadDomainName": {
          "type": "string"
        },
        "g2oToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRequestTypeMarker:getPropertyRulesBuilderRulesV20230530BehaviorRequestTypeMarker": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "requestType": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorResourceOptimizer:getPropertyRulesBuilderRulesV20230530BehaviorResourceOptimizer": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorResourceOptimizerExtendedCompatibility:getPropertyRulesBuilderRulesV20230530BehaviorResourceOptimizerExtendedCompatibility": {
      "properties": {
        "enableAllFeatures": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorResponseCode:getPropertyRulesBuilderRulesV20230530BehaviorResponseCode": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "override206": {
          "type": "boolean"
        },
        "statusCode": {
          "type": "integer"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorResponseCookie:getPropertyRulesBuilderRulesV20230530BehaviorResponseCookie": {
      "properties": {
        "cookieName": {
          "type": "string"
        },
        "defaultDomain": {
          "type": "boolean"
        },
        "defaultPath": {
          "type": "boolean"
        },
        "domain": {
          "type": "string"
        },
        "duration": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "expirationDate": {
          "type": "string"
        },
        "expires": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "httpOnly": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "path": {
          "type": "string"
        },
        "sameSite": {
          "type": "string"
        },
        "secure": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRestrictObjectCaching:getPropertyRulesBuilderRulesV20230530BehaviorRestrictObjectCaching": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "maximumSize": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorReturnCacheStatus:getPropertyRulesBuilderRulesV20230530BehaviorReturnCacheStatus": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "responseHeaderName": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRewriteUrl:getPropertyRulesBuilderRulesV20230530BehaviorRewriteUrl": {
      "properties": {
        "behavior": {
          "type": "string"
        },
        "keepQueryString": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "match": {
          "type": "string"
        },
        "matchMultiple": {
          "type": "boolean"
        },
        "matchRegex": {
          "type": "string"
        },
        "targetPath": {
          "type": "string"
        },
        "targetPathPrepend": {
          "type": "string"
        },
        "targetRegex": {
          "type": "string"
        },
        "targetUrl": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorRumCustom:getPropertyRulesBuilderRulesV20230530BehaviorRumCustom": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "rumGroupName": {
          "type": "string"
        },
        "rumSampleRate": {
          "type": "integer"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorSaasDefinitions:getPropertyRulesBuilderRulesV20230530BehaviorSaasDefinitions": {
      "properties": {
        "applicationAction": {
          "type": "string"
        },
        "applicationCnameEnabled": {
          "type": "boolean"
        },
        "applicationCnameLevel": {
          "type": "integer"
        },
        "applicationCookie": {
          "type": "string"
        },
        "applicationQueryString": {
          "type": "string"
        },
        "applicationRegex": {
          "type": "string"
        },
        "applicationReplace": {
          "type": "string"
        },
        "applicationTitle": {
          "type": "string"
        },
        "customerAction": {
          "type": "string"
        },
        "customerCnameEnabled": {
          "type": "boolean"
        },
        "customerCnameLevel": {
          "type": "integer"
        },
        "customerCookie": {
          "type": "string"
        },
        "customerQueryString": {
          "type": "string"
        },
        "customerRegex": {
          "type": "string"
        },
        "customerReplace": {
          "type": "string"
        },
        "customerTitle": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "usersAction": {
          "type": "string"
        },
        "usersCnameEnabled": {
          "type": "boolean"
        },
        "usersCnameLevel": {
          "type": "integer"
        },
        "usersCookie": {
          "type": "string"
        },
        "usersQueryString": {
          "type": "string"
        },
        "usersRegex": {
          "type": "string"
        },
        "usersReplace": {
          "type": "string"
        },
        "usersTitle": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorSalesForceCommerceCloudClient:getPropertyRulesBuilderRulesV20230530BehaviorSalesForceCommerceCloudClient": {
      "properties": {
        "allowOverrideOriginCacheKey": {
          "type": "boolean"
        },
        "connectorId": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "originHostHeader": {
          "type": "string"
        },
        "originType": {
          "type": "string"
        },
        "sf3cOriginHost": {
          "type": "string"
        },
        "sf3cOriginHostHeader": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorSalesForceCommerceCloudProvider:getPropertyRulesBuilderRulesV20230530BehaviorSalesForceCommerceCloudProvider": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorSalesForceCommerceCloudProviderHostHeader:getPropertyRulesBuilderRulesV20230530BehaviorSalesForceCommerceCloudProviderHostHeader": {
      "properties": {
        "hostHeaderSource": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorSavePostDcaProcessing:getPropertyRulesBuilderRulesV20230530BehaviorSavePostDcaProcessing": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorScheduleInvalidation:getPropertyRulesBuilderRulesV20230530BehaviorScheduleInvalidation": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "refreshMethod": {
          "type": "string"
        },
        "repeat": {
          "type": "boolean"
        },
        "repeatInterval": {
          "type": "string"
        },
        "start": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorScriptManagement:getPropertyRulesBuilderRulesV20230530BehaviorScriptManagement": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "serviceworker": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "timestamp": {
          "type": "integer"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorSegmentedContentProtection:getPropertyRulesBuilderRulesV20230530BehaviorSegmentedContentProtection": {
      "properties": {
        "acl": {
          "type": "boolean"
        },
        "dashMediaEncryption": {
          "type": "boolean"
        },
        "dataPayload": {
          "type": "boolean"
        },
        "enableTokenInUri": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "fieldCarryOver": {
          "type": "string"
        },
        "headerForSalts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hlsMasterManifestFiles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hlsMediaEncryption": {
          "type": "boolean"
        },
        "ip": {
          "type": "boolean"
        },
        "key": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "mediaEncryptionTitle": {
          "type": "string"
        },
        "revokedListId": {
          "type": "integer"
        },
        "salt": {
          "type": "string"
        },
        "sessionId": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "tokenAuthHlsTitle": {
          "type": "string"
        },
        "tokenAuthenticationTitle": {
          "type": "string"
        },
        "tokenRevocationEnabled": {
          "type": "boolean"
        },
        "tokenRevocationTitle": {
          "type": "string"
        },
        "transitionKey": {
          "type": "string"
        },
        "useAdvanced": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorSegmentedMediaOptimization:getPropertyRulesBuilderRulesV20230530BehaviorSegmentedMediaOptimization": {
      "properties": {
        "behavior": {
          "type": "string"
        },
        "dvrType": {
          "type": "string"
        },
        "dvrWindow": {
          "type": "string"
        },
        "enableUllStreaming": {
          "type": "boolean"
        },
        "endTime": {
          "type": "string"
        },
        "liveType": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "showAdvanced": {
          "type": "boolean"
        },
        "startTime": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorSegmentedMediaStreamingPrefetch:getPropertyRulesBuilderRulesV20230530BehaviorSegmentedMediaStreamingPrefetch": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorSetVariable:getPropertyRulesBuilderRulesV20230530BehaviorSetVariable": {
      "properties": {
        "algorithm": {
          "type": "string"
        },
        "caseSensitive": {
          "type": "boolean"
        },
        "certificateFieldName": {
          "type": "string"
        },
        "cookieName": {
          "type": "string"
        },
        "deviceProfile": {
          "type": "string"
        },
        "encryptionKey": {
          "type": "string"
        },
        "encryptionMode": {
          "type": "string"
        },
        "endIndex": {
          "type": "string"
        },
        "exceptChars": {
          "type": "string"
        },
        "extractLocation": {
          "type": "string"
        },
        "forceChars": {
          "type": "string"
        },
        "formatString": {
          "type": "string"
        },
        "generator": {
          "type": "string"
        },
        "globalSubstitution": {
          "type": "boolean"
        },
        "headerName": {
          "type": "string"
        },
        "hmacAlgorithm": {
          "type": "string"
        },
        "hmacKey": {
          "type": "string"
        },
        "initializationVector": {
          "type": "string"
        },
        "ipVersion": {
          "type": "string"
        },
        "ipv4Prefix": {
          "type": "integer"
        },
        "ipv6Prefix": {
          "type": "integer"
        },
        "locationId": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "max": {
          "type": "integer"
        },
        "maxRandomNumber": {
          "type": "string"
        },
        "min": {
          "type": "integer"
        },
        "minRandomNumber": {
          "type": "string"
        },
        "nonce": {
          "type": "string"
        },
        "numberOfBytes": {
          "type": "integer"
        },
        "operandOne": {
          "type": "string"
        },
        "paramName": {
          "type": "string"
        },
        "pathComponentOffset": {
          "type": "string"
        },
        "prependBytes": {
          "type": "boolean"
        },
        "queryParameterName": {
          "type": "string"
        },
        "regex": {
          "type": "string"
        },
        "replacement": {
          "type": "string"
        },
        "responseHeaderName": {
          "type": "string"
        },
        "separator": {
          "type": "string"
        },
        "setCookieName": {
          "type": "string"
        },
        "startIndex": {
          "type": "string"
        },
        "subString": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "transform": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "valueSource": {
          "type": "string"
        },
        "variableName": {
          "type": "string"
        },
        "variableValue": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorSimulateErrorCode:getPropertyRulesBuilderRulesV20230530BehaviorSimulateErrorCode": {
      "properties": {
        "errorType": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "timeout": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorSiteShield:getPropertyRulesBuilderRulesV20230530BehaviorSiteShield": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "nossmap": {
          "type": "string"
        },
        "ssmap": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorSiteShieldSsmap:getPropertyRulesBuilderRulesV20230530BehaviorSiteShieldSsmap"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorSiteShieldSsmap:getPropertyRulesBuilderRulesV20230530BehaviorSiteShieldSsmap": {
      "properties": {
        "chinaCdnMap": {
          "type": "string"
        },
        "hasMixedHosts": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "src": {
          "type": "string"
        },
        "srmap": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorStandardTlsMigration:getPropertyRulesBuilderRulesV20230530BehaviorStandardTlsMigration": {
      "properties": {
        "allowHttpsDowngrade": {
          "type": "boolean"
        },
        "allowHttpsUpgrade": {
          "type": "boolean"
        },
        "cacheSharingDuration": {
          "type": "integer"
        },
        "cacheSharingStartTime": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "isCertificateSniOnly": {
          "type": "boolean"
        },
        "isTieredDistributionUsed": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "migrationDuration": {
          "type": "integer"
        },
        "migrationFrom": {
          "type": "string"
        },
        "migrationStartTime": {
          "type": "string"
        },
        "tdLocation": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorStandardTlsMigrationOverride:getPropertyRulesBuilderRulesV20230530BehaviorStandardTlsMigrationOverride": {
      "properties": {
        "info": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorStrictHeaderParsing:getPropertyRulesBuilderRulesV20230530BehaviorStrictHeaderParsing": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "strictMode": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "validMode": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorSubCustomer:getPropertyRulesBuilderRulesV20230530BehaviorSubCustomer": {
      "properties": {
        "accessControl": {
          "type": "boolean"
        },
        "cacheKey": {
          "type": "boolean"
        },
        "caching": {
          "type": "boolean"
        },
        "contentCompressor": {
          "type": "boolean"
        },
        "dynamicWebContent": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "geoLocation": {
          "type": "boolean"
        },
        "ip": {
          "type": "boolean"
        },
        "largeFileDelivery": {
          "type": "boolean"
        },
        "liveVideoDelivery": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "modifyPath": {
          "type": "boolean"
        },
        "onDemandVideoDelivery": {
          "type": "boolean"
        },
        "origin": {
          "type": "boolean"
        },
        "partnerDomainSuffix": {
          "type": "string"
        },
        "referrer": {
          "type": "boolean"
        },
        "refreshContent": {
          "type": "boolean"
        },
        "siteFailover": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "tokenAuthorization": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        },
        "webApplicationFirewall": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorSureRoute:getPropertyRulesBuilderRulesV20230530BehaviorSureRoute": {
      "properties": {
        "allowFcmParentOverride": {
          "type": "boolean"
        },
        "customMap": {
          "type": "string"
        },
        "customStatKey": {
          "type": "string"
        },
        "enableCustomKey": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "forceSslForward": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "raceStatTtl": {
          "type": "string"
        },
        "srDownloadLinkTitle": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "testObjectUrl": {
          "type": "string"
        },
        "toHost": {
          "type": "string"
        },
        "toHostStatus": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorTcpOptimization:getPropertyRulesBuilderRulesV20230530BehaviorTcpOptimization": {
      "properties": {
        "display": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorTeaLeaf:getPropertyRulesBuilderRulesV20230530BehaviorTeaLeaf": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "ibmCustomerId": {
          "type": "integer"
        },
        "limitToDynamic": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorTieredDistribution:getPropertyRulesBuilderRulesV20230530BehaviorTieredDistribution": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "tieredDistributionMap": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorTieredDistributionAdvanced:getPropertyRulesBuilderRulesV20230530BehaviorTieredDistributionAdvanced": {
      "properties": {
        "allowall": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "method": {
          "type": "string"
        },
        "policy": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "tieredDistributionMap": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorTieredDistributionCustomization:getPropertyRulesBuilderRulesV20230530BehaviorTieredDistributionCustomization": {
      "properties": {
        "cloudwrapperMapMigrationTitle": {
          "type": "string"
        },
        "customMapEnabled": {
          "type": "boolean"
        },
        "customMapName": {
          "type": "string"
        },
        "hashAlgorithm": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "mapMigrationEnabled": {
          "type": "boolean"
        },
        "migrationEndDate": {
          "type": "string"
        },
        "migrationStartDate": {
          "type": "string"
        },
        "migrationWithinCwMapsEnabled": {
          "type": "boolean"
        },
        "serialEnd": {
          "type": "string"
        },
        "serialStart": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "tier1Title": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorTimeout:getPropertyRulesBuilderRulesV20230530BehaviorTimeout": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorUidConfiguration:getPropertyRulesBuilderRulesV20230530BehaviorUidConfiguration": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "extractLocation": {
          "type": "string"
        },
        "headerName": {
          "type": "string"
        },
        "legalText": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "queryParameterName": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "variableName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorValidateEntityTag:getPropertyRulesBuilderRulesV20230530BehaviorValidateEntityTag": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorVerifyJsonWebToken:getPropertyRulesBuilderRulesV20230530BehaviorVerifyJsonWebToken": {
      "properties": {
        "enableEs256": {
          "type": "boolean"
        },
        "enableRs256": {
          "type": "boolean"
        },
        "extractLocation": {
          "type": "string"
        },
        "headerName": {
          "type": "string"
        },
        "jwt": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "queryParameterName": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorVerifyJsonWebTokenForDcp:getPropertyRulesBuilderRulesV20230530BehaviorVerifyJsonWebTokenForDcp": {
      "properties": {
        "authorizations": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "customHeader": {
          "type": "boolean"
        },
        "enableEs256": {
          "type": "boolean"
        },
        "enableRs256": {
          "type": "boolean"
        },
        "extractAuthorizations": {
          "type": "boolean"
        },
        "extractClientId": {
          "type": "boolean"
        },
        "extractLocation": {
          "type": "string"
        },
        "extractUserName": {
          "type": "boolean"
        },
        "headerName": {
          "type": "string"
        },
        "jwt": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "primaryLocation": {
          "type": "string"
        },
        "queryParameterName": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorVerifyTokenAuthorization:getPropertyRulesBuilderRulesV20230530BehaviorVerifyTokenAuthorization": {
      "properties": {
        "algorithm": {
          "type": "string"
        },
        "escapeHmacInputs": {
          "type": "boolean"
        },
        "failureResponse": {
          "type": "boolean"
        },
        "ignoreQueryString": {
          "type": "boolean"
        },
        "key": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "salt": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "transitionKey": {
          "type": "string"
        },
        "useAdvanced": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorVirtualWaitingRoom:getPropertyRulesBuilderRulesV20230530BehaviorVirtualWaitingRoom": {
      "properties": {
        "accessTitle": {
          "type": "string"
        },
        "cloudletSharedPolicy": {
          "type": "integer"
        },
        "customCookieDomain": {
          "type": "string"
        },
        "domainConfig": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "sessionAutoProlong": {
          "type": "boolean"
        },
        "sessionDuration": {
          "type": "integer"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "waitingRoomAssetsPaths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "waitingRoomPath": {
          "type": "string"
        },
        "waitingRoomTitle": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorVirtualWaitingRoomWithEdgeWorkers:getPropertyRulesBuilderRulesV20230530BehaviorVirtualWaitingRoomWithEdgeWorkers": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritization:getPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritization": {
      "properties": {
        "allowedUserCookieAdvanced": {
          "type": "boolean"
        },
        "allowedUserCookieAutomaticSalt": {
          "type": "boolean"
        },
        "allowedUserCookieDomain": {
          "type": "string"
        },
        "allowedUserCookieDomainType": {
          "type": "string"
        },
        "allowedUserCookieDuration": {
          "type": "integer"
        },
        "allowedUserCookieEnabled": {
          "type": "boolean"
        },
        "allowedUserCookieHttpOnly": {
          "type": "boolean"
        },
        "allowedUserCookieLabel": {
          "type": "string"
        },
        "allowedUserCookieManagementTitle": {
          "type": "string"
        },
        "allowedUserCookieRefresh": {
          "type": "boolean"
        },
        "allowedUserCookieSalt": {
          "type": "string"
        },
        "cloudletPolicy": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationCloudletPolicy:getPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationCloudletPolicy"
        },
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "userIdentificationByCookie": {
          "type": "boolean"
        },
        "userIdentificationByHeaders": {
          "type": "boolean"
        },
        "userIdentificationByIp": {
          "type": "boolean"
        },
        "userIdentificationByParams": {
          "type": "boolean"
        },
        "userIdentificationKeyCookie": {
          "type": "string"
        },
        "userIdentificationKeyHeaders": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userIdentificationKeyParams": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userIdentificationTitle": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "waitingRoomCacheTtl": {
          "type": "integer"
        },
        "waitingRoomCookieAdvanced": {
          "type": "boolean"
        },
        "waitingRoomCookieAutomaticSalt": {
          "type": "boolean"
        },
        "waitingRoomCookieDomain": {
          "type": "string"
        },
        "waitingRoomCookieDomainType": {
          "type": "string"
        },
        "waitingRoomCookieDuration": {
          "type": "integer"
        },
        "waitingRoomCookieEnabled": {
          "type": "boolean"
        },
        "waitingRoomCookieHttpOnly": {
          "type": "boolean"
        },
        "waitingRoomCookieLabel": {
          "type": "string"
        },
        "waitingRoomCookieManagementTitle": {
          "type": "string"
        },
        "waitingRoomCookieSalt": {
          "type": "string"
        },
        "waitingRoomCookieShareLabel": {
          "type": "boolean"
        },
        "waitingRoomCpCode": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationWaitingRoomCpCode:getPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationWaitingRoomCpCode"
        },
        "waitingRoomDirectory": {
          "type": "string"
        },
        "waitingRoomManagementTitle": {
          "type": "string"
        },
        "waitingRoomNetStorage": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationWaitingRoomNetStorage:getPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationWaitingRoomNetStorage"
        },
        "waitingRoomStatusCode": {
          "type": "integer"
        },
        "waitingRoomUseCpCode": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationCloudletPolicy:getPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationCloudletPolicy": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationFifo:getPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationFifo": {
      "properties": {
        "accessTitle": {
          "type": "string"
        },
        "cloudletSharedPolicy": {
          "type": "integer"
        },
        "customCookieDomain": {
          "type": "string"
        },
        "domainConfig": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "sessionAutoProlong": {
          "type": "boolean"
        },
        "sessionDuration": {
          "type": "integer"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "waitingRoomAssetsPaths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "waitingRoomPath": {
          "type": "string"
        },
        "waitingRoomTitle": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationFifoStandalone:getPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationFifoStandalone": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationWaitingRoomCpCode:getPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationWaitingRoomCpCode": {
      "properties": {
        "cpCodeLimits": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationWaitingRoomCpCodeCpCodeLimits:getPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationWaitingRoomCpCodeCpCodeLimits"
        },
        "createdDate": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationWaitingRoomCpCodeCpCodeLimits:getPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationWaitingRoomCpCodeCpCodeLimits": {
      "properties": {
        "currentCapacity": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "limitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationWaitingRoomNetStorage:getPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationWaitingRoomNetStorage": {
      "properties": {
        "cpCode": {
          "type": "integer"
        },
        "downloadDomainName": {
          "type": "string"
        },
        "g2oToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorWatermarking:getPropertyRulesBuilderRulesV20230530BehaviorWatermarking": {
      "properties": {
        "abVariantLocation": {
          "type": "string"
        },
        "decryptionPassword1": {
          "type": "string"
        },
        "decryptionPassword2": {
          "type": "string"
        },
        "decryptionPasswordId1": {
          "type": "string"
        },
        "decryptionPasswordId2": {
          "type": "string"
        },
        "enable": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "miscellaneousSettingsTitle": {
          "type": "string"
        },
        "patternDecryptionEnable": {
          "type": "boolean"
        },
        "patternEncryptionTitle": {
          "type": "string"
        },
        "signatureVerificationEnable": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "tokenSigningTitle": {
          "type": "string"
        },
        "useOriginalAsA": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        },
        "verificationKeyId1": {
          "type": "string"
        },
        "verificationKeyId2": {
          "type": "string"
        },
        "verificationPublicKey1": {
          "type": "string"
        },
        "verificationPublicKey2": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorWebApplicationFirewall:getPropertyRulesBuilderRulesV20230530BehaviorWebApplicationFirewall": {
      "properties": {
        "firewallConfiguration": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorWebApplicationFirewallFirewallConfiguration:getPropertyRulesBuilderRulesV20230530BehaviorWebApplicationFirewallFirewallConfiguration"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorWebApplicationFirewallFirewallConfiguration:getPropertyRulesBuilderRulesV20230530BehaviorWebApplicationFirewallFirewallConfiguration": {
      "properties": {
        "configId": {
          "type": "integer"
        },
        "fileName": {
          "type": "string"
        },
        "productionStatus": {
          "type": "string"
        },
        "productionVersion": {
          "type": "integer"
        },
        "stagingStatus": {
          "type": "string"
        },
        "stagingVersion": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorWebSockets:getPropertyRulesBuilderRulesV20230530BehaviorWebSockets": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530BehaviorWebdav:getPropertyRulesBuilderRulesV20230530BehaviorWebdav": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530Criterion:getPropertyRulesBuilderRulesV20230530Criterion": {
      "properties": {
        "advancedImMatch": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionAdvancedImMatch:getPropertyRulesBuilderRulesV20230530CriterionAdvancedImMatch"
        },
        "bucket": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionBucket:getPropertyRulesBuilderRulesV20230530CriterionBucket"
        },
        "cacheability": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionCacheability:getPropertyRulesBuilderRulesV20230530CriterionCacheability"
        },
        "chinaCdnRegion": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionChinaCdnRegion:getPropertyRulesBuilderRulesV20230530CriterionChinaCdnRegion"
        },
        "clientCertificate": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionClientCertificate:getPropertyRulesBuilderRulesV20230530CriterionClientCertificate"
        },
        "clientIp": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionClientIp:getPropertyRulesBuilderRulesV20230530CriterionClientIp"
        },
        "clientIpVersion": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionClientIpVersion:getPropertyRulesBuilderRulesV20230530CriterionClientIpVersion"
        },
        "cloudletsOrigin": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionCloudletsOrigin:getPropertyRulesBuilderRulesV20230530CriterionCloudletsOrigin"
        },
        "contentDeliveryNetwork": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionContentDeliveryNetwork:getPropertyRulesBuilderRulesV20230530CriterionContentDeliveryNetwork"
        },
        "contentType": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionContentType:getPropertyRulesBuilderRulesV20230530CriterionContentType"
        },
        "deviceCharacteristic": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionDeviceCharacteristic:getPropertyRulesBuilderRulesV20230530CriterionDeviceCharacteristic"
        },
        "ecmdAuthGroups": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionEcmdAuthGroups:getPropertyRulesBuilderRulesV20230530CriterionEcmdAuthGroups"
        },
        "ecmdAuthScheme": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionEcmdAuthScheme:getPropertyRulesBuilderRulesV20230530CriterionEcmdAuthScheme"
        },
        "ecmdIsAuthenticated": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionEcmdIsAuthenticated:getPropertyRulesBuilderRulesV20230530CriterionEcmdIsAuthenticated"
        },
        "ecmdUsername": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionEcmdUsername:getPropertyRulesBuilderRulesV20230530CriterionEcmdUsername"
        },
        "edgeWorkersFailure": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionEdgeWorkersFailure:getPropertyRulesBuilderRulesV20230530CriterionEdgeWorkersFailure"
        },
        "fileExtension": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionFileExtension:getPropertyRulesBuilderRulesV20230530CriterionFileExtension"
        },
        "filename": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionFilename:getPropertyRulesBuilderRulesV20230530CriterionFilename"
        },
        "hostname": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionHostname:getPropertyRulesBuilderRulesV20230530CriterionHostname"
        },
        "matchAdvanced": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionMatchAdvanced:getPropertyRulesBuilderRulesV20230530CriterionMatchAdvanced"
        },
        "matchCpCode": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionMatchCpCode:getPropertyRulesBuilderRulesV20230530CriterionMatchCpCode"
        },
        "matchResponseCode": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionMatchResponseCode:getPropertyRulesBuilderRulesV20230530CriterionMatchResponseCode"
        },
        "matchVariable": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionMatchVariable:getPropertyRulesBuilderRulesV20230530CriterionMatchVariable"
        },
        "metadataStage": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionMetadataStage:getPropertyRulesBuilderRulesV20230530CriterionMetadataStage"
        },
        "originTimeout": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionOriginTimeout:getPropertyRulesBuilderRulesV20230530CriterionOriginTimeout"
        },
        "path": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionPath:getPropertyRulesBuilderRulesV20230530CriterionPath"
        },
        "queryStringParameter": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionQueryStringParameter:getPropertyRulesBuilderRulesV20230530CriterionQueryStringParameter"
        },
        "random": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionRandom:getPropertyRulesBuilderRulesV20230530CriterionRandom"
        },
        "recoveryConfig": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionRecoveryConfig:getPropertyRulesBuilderRulesV20230530CriterionRecoveryConfig"
        },
        "regularExpression": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionRegularExpression:getPropertyRulesBuilderRulesV20230530CriterionRegularExpression"
        },
        "requestCookie": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionRequestCookie:getPropertyRulesBuilderRulesV20230530CriterionRequestCookie"
        },
        "requestHeader": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionRequestHeader:getPropertyRulesBuilderRulesV20230530CriterionRequestHeader"
        },
        "requestMethod": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionRequestMethod:getPropertyRulesBuilderRulesV20230530CriterionRequestMethod"
        },
        "requestProtocol": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionRequestProtocol:getPropertyRulesBuilderRulesV20230530CriterionRequestProtocol"
        },
        "requestType": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionRequestType:getPropertyRulesBuilderRulesV20230530CriterionRequestType"
        },
        "responseHeader": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionResponseHeader:getPropertyRulesBuilderRulesV20230530CriterionResponseHeader"
        },
        "serverLocation": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionServerLocation:getPropertyRulesBuilderRulesV20230530CriterionServerLocation"
        },
        "time": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionTime:getPropertyRulesBuilderRulesV20230530CriterionTime"
        },
        "tokenAuthorization": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionTokenAuthorization:getPropertyRulesBuilderRulesV20230530CriterionTokenAuthorization"
        },
        "userAgent": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionUserAgent:getPropertyRulesBuilderRulesV20230530CriterionUserAgent"
        },
        "userLocation": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionUserLocation:getPropertyRulesBuilderRulesV20230530CriterionUserLocation"
        },
        "userNetwork": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionUserNetwork:getPropertyRulesBuilderRulesV20230530CriterionUserNetwork"
        },
        "variableError": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionVariableError:getPropertyRulesBuilderRulesV20230530CriterionVariableError"
        },
        "virtualWaitingRoomRequest": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionVirtualWaitingRoomRequest:getPropertyRulesBuilderRulesV20230530CriterionVirtualWaitingRoomRequest"
        },
        "visitorPrioritizationRequest": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionVisitorPrioritizationRequest:getPropertyRulesBuilderRulesV20230530CriterionVisitorPrioritizationRequest"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionAdvancedImMatch:getPropertyRulesBuilderRulesV20230530CriterionAdvancedImMatch": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchOn": {
          "type": "string"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionBucket:getPropertyRulesBuilderRulesV20230530CriterionBucket": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "percentage": {
          "type": "integer"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionCacheability:getPropertyRulesBuilderRulesV20230530CriterionCacheability": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionChinaCdnRegion:getPropertyRulesBuilderRulesV20230530CriterionChinaCdnRegion": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionClientCertificate:getPropertyRulesBuilderRulesV20230530CriterionClientCertificate": {
      "properties": {
        "isCertificatePresent": {
          "type": "boolean"
        },
        "isCertificateValid": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionClientIp:getPropertyRulesBuilderRulesV20230530CriterionClientIp": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "useHeaders": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionClientIpVersion:getPropertyRulesBuilderRulesV20230530CriterionClientIpVersion": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "useXForwardedFor": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionCloudletsOrigin:getPropertyRulesBuilderRulesV20230530CriterionCloudletsOrigin": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "originId": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionContentDeliveryNetwork:getPropertyRulesBuilderRulesV20230530CriterionContentDeliveryNetwork": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "network": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionContentType:getPropertyRulesBuilderRulesV20230530CriterionContentType": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchCaseSensitive": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "matchWildcard": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionDeviceCharacteristic:getPropertyRulesBuilderRulesV20230530CriterionDeviceCharacteristic": {
      "properties": {
        "booleanValue": {
          "type": "boolean"
        },
        "characteristic": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "matchCaseSensitive": {
          "type": "boolean"
        },
        "matchWildcard": {
          "type": "boolean"
        },
        "numericMatchOperator": {
          "type": "string"
        },
        "numericValue": {
          "type": "integer"
        },
        "stringMatchOperator": {
          "type": "string"
        },
        "stringValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "versionMatchOperator": {
          "type": "string"
        },
        "versionValue": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionEcmdAuthGroups:getPropertyRulesBuilderRulesV20230530CriterionEcmdAuthGroups": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionEcmdAuthScheme:getPropertyRulesBuilderRulesV20230530CriterionEcmdAuthScheme": {
      "properties": {
        "authScheme": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionEcmdIsAuthenticated:getPropertyRulesBuilderRulesV20230530CriterionEcmdIsAuthenticated": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionEcmdUsername:getPropertyRulesBuilderRulesV20230530CriterionEcmdUsername": {
      "properties": {
        "length": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionEdgeWorkersFailure:getPropertyRulesBuilderRulesV20230530CriterionEdgeWorkersFailure": {
      "properties": {
        "execStatus": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionFileExtension:getPropertyRulesBuilderRulesV20230530CriterionFileExtension": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchCaseSensitive": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionFilename:getPropertyRulesBuilderRulesV20230530CriterionFilename": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchCaseSensitive": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionHostname:getPropertyRulesBuilderRulesV20230530CriterionHostname": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionMatchAdvanced:getPropertyRulesBuilderRulesV20230530CriterionMatchAdvanced": {
      "properties": {
        "closeXml": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "openXml": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionMatchCpCode:getPropertyRulesBuilderRulesV20230530CriterionMatchCpCode": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionMatchCpCodeValue:getPropertyRulesBuilderRulesV20230530CriterionMatchCpCodeValue"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionMatchCpCodeValue:getPropertyRulesBuilderRulesV20230530CriterionMatchCpCodeValue": {
      "properties": {
        "cpCodeLimits": {
          "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530CriterionMatchCpCodeValueCpCodeLimits:getPropertyRulesBuilderRulesV20230530CriterionMatchCpCodeValueCpCodeLimits"
        },
        "createdDate": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionMatchCpCodeValueCpCodeLimits:getPropertyRulesBuilderRulesV20230530CriterionMatchCpCodeValueCpCodeLimits": {
      "properties": {
        "currentCapacity": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "limitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionMatchResponseCode:getPropertyRulesBuilderRulesV20230530CriterionMatchResponseCode": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "lowerBound": {
          "type": "integer"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "upperBound": {
          "type": "integer"
        },
        "uuid": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionMatchVariable:getPropertyRulesBuilderRulesV20230530CriterionMatchVariable": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "lowerBound": {
          "type": "string"
        },
        "matchCaseSensitive": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "matchWildcard": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "upperBound": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "variableExpression": {
          "type": "string"
        },
        "variableName": {
          "type": "string"
        },
        "variableValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionMetadataStage:getPropertyRulesBuilderRulesV20230530CriterionMetadataStage": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionOriginTimeout:getPropertyRulesBuilderRulesV20230530CriterionOriginTimeout": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionPath:getPropertyRulesBuilderRulesV20230530CriterionPath": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchCaseSensitive": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "normalize": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionQueryStringParameter:getPropertyRulesBuilderRulesV20230530CriterionQueryStringParameter": {
      "properties": {
        "escapeValue": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "lowerBound": {
          "type": "integer"
        },
        "matchCaseSensitiveName": {
          "type": "boolean"
        },
        "matchCaseSensitiveValue": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "matchWildcardName": {
          "type": "boolean"
        },
        "matchWildcardValue": {
          "type": "boolean"
        },
        "parameterName": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "upperBound": {
          "type": "integer"
        },
        "uuid": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionRandom:getPropertyRulesBuilderRulesV20230530CriterionRandom": {
      "properties": {
        "bucket": {
          "type": "integer"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionRecoveryConfig:getPropertyRulesBuilderRulesV20230530CriterionRecoveryConfig": {
      "properties": {
        "configName": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionRegularExpression:getPropertyRulesBuilderRulesV20230530CriterionRegularExpression": {
      "properties": {
        "caseSensitive": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        },
        "matchString": {
          "type": "string"
        },
        "regex": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionRequestCookie:getPropertyRulesBuilderRulesV20230530CriterionRequestCookie": {
      "properties": {
        "cookieName": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "lowerBound": {
          "type": "integer"
        },
        "matchCaseSensitiveName": {
          "type": "boolean"
        },
        "matchCaseSensitiveValue": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "matchWildcardName": {
          "type": "boolean"
        },
        "matchWildcardValue": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "upperBound": {
          "type": "integer"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionRequestHeader:getPropertyRulesBuilderRulesV20230530CriterionRequestHeader": {
      "properties": {
        "headerName": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "matchCaseSensitiveValue": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "matchWildcardName": {
          "type": "boolean"
        },
        "matchWildcardValue": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionRequestMethod:getPropertyRulesBuilderRulesV20230530CriterionRequestMethod": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionRequestProtocol:getPropertyRulesBuilderRulesV20230530CriterionRequestProtocol": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionRequestType:getPropertyRulesBuilderRulesV20230530CriterionRequestType": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionResponseHeader:getPropertyRulesBuilderRulesV20230530CriterionResponseHeader": {
      "properties": {
        "headerName": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "lowerBound": {
          "type": "integer"
        },
        "matchCaseSensitiveValue": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "matchWildcardName": {
          "type": "boolean"
        },
        "matchWildcardValue": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "upperBound": {
          "type": "integer"
        },
        "uuid": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionServerLocation:getPropertyRulesBuilderRulesV20230530CriterionServerLocation": {
      "properties": {
        "continents": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "countries": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationType": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionTime:getPropertyRulesBuilderRulesV20230530CriterionTime": {
      "properties": {
        "applyDaylightSavingsTime": {
          "type": "boolean"
        },
        "beginDate": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        },
        "lastingDate": {
          "type": "string"
        },
        "lastingDuration": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "repeatBeginDate": {
          "type": "string"
        },
        "repeatDuration": {
          "type": "string"
        },
        "repeatInterval": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionTokenAuthorization:getPropertyRulesBuilderRulesV20230530CriterionTokenAuthorization": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "statusLists": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionUserAgent:getPropertyRulesBuilderRulesV20230530CriterionUserAgent": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchCaseSensitive": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "matchWildcard": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionUserLocation:getPropertyRulesBuilderRulesV20230530CriterionUserLocation": {
      "properties": {
        "checkIps": {
          "type": "string"
        },
        "continentValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "countryValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "field": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "regionValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "templateUuid": {
          "type": "string"
        },
        "useOnlyFirstXForwardedForIp": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionUserNetwork:getPropertyRulesBuilderRulesV20230530CriterionUserNetwork": {
      "properties": {
        "bandwidthValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "checkIps": {
          "type": "string"
        },
        "field": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "matchOperator": {
          "type": "string"
        },
        "networkTypeValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "networkValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "templateUuid": {
          "type": "string"
        },
        "useOnlyFirstXForwardedForIp": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionVariableError:getPropertyRulesBuilderRulesV20230530CriterionVariableError": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "result": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "variableNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionVirtualWaitingRoomRequest:getPropertyRulesBuilderRulesV20230530CriterionVirtualWaitingRoomRequest": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchOn": {
          "type": "string"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CriterionVisitorPrioritizationRequest:getPropertyRulesBuilderRulesV20230530CriterionVisitorPrioritizationRequest": {
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "matchOn": {
          "type": "string"
        },
        "matchOperator": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530CustomOverride:getPropertyRulesBuilderRulesV20230530CustomOverride": {
      "properties": {
        "name": {
          "type": "string"
        },
        "overrideId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "akamai:index/getPropertyRulesBuilderRulesV20230530Variable:getPropertyRulesBuilderRulesV20230530Variable": {
      "properties": {
        "description": {
          "type": "string"
        },
        "hidden": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "sensitive": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "description",
        "hidden",
        "name",
        "sensitive",
        "value"
      ]
    },
    "akamai:index/getPropertyRulesTemplateTemplate:getPropertyRulesTemplateTemplate": {
      "properties": {
        "templateData": {
          "type": "string"
        },
        "templateDir": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "templateData",
        "templateDir"
      ]
    },
    "akamai:index/getPropertyRulesTemplateVariable:getPropertyRulesTemplateVariable": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "name",
        "value"
      ]
    }
  },
  "provider": {
    "description": "The provider type for the akamai package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
    "properties": {
      "cacheEnabled": {
        "type": "boolean"
      },
      "config": {
        "$ref": "#/types/akamai:index/ProviderConfig:ProviderConfig",
        "language": {
          "csharp": {
            "name": "ConfigDetails"
          }
        }
      },
      "configSection": {
        "type": "string",
        "description": "The section of the edgerc file to use for configuration\n"
      },
      "edgerc": {
        "type": "string"
      },
      "requestLimit": {
        "type": "integer",
        "description": "The maximum number of API requests to be made per second (0 for no limit)\n"
      }
    },
    "inputProperties": {
      "cacheEnabled": {
        "type": "boolean"
      },
      "config": {
        "$ref": "#/types/akamai:index/ProviderConfig:ProviderConfig",
        "language": {
          "csharp": {
            "name": "ConfigDetails"
          }
        }
      },
      "configSection": {
        "type": "string",
        "description": "The section of the edgerc file to use for configuration\n"
      },
      "edgerc": {
        "type": "string"
      },
      "requestLimit": {
        "type": "integer",
        "description": "The maximum number of API requests to be made per second (0 for no limit)\n"
      }
    }
  },
  "resources": {
    "akamai:index/appSecActivations:AppSecActivations": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration to be activated\n"
        },
        "network": {
          "type": "string",
          "description": "Network on which to activate the configuration version (STAGING or PRODUCTION)\n"
        },
        "note": {
          "type": "string",
          "description": "Note describing the activation. Will use timestamp if omitted.\n"
        },
        "notificationEmails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of email addresses to be notified with the results of the activation\n"
        },
        "status": {
          "type": "string",
          "description": "The results of the activation\n"
        },
        "version": {
          "type": "integer",
          "description": "Version of the security configuration to be activated\n"
        }
      },
      "required": [
        "configId",
        "notificationEmails",
        "status",
        "version"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration to be activated\n"
        },
        "network": {
          "type": "string",
          "description": "Network on which to activate the configuration version (STAGING or PRODUCTION)\n"
        },
        "note": {
          "type": "string",
          "description": "Note describing the activation. Will use timestamp if omitted.\n"
        },
        "notificationEmails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of email addresses to be notified with the results of the activation\n"
        },
        "version": {
          "type": "integer",
          "description": "Version of the security configuration to be activated\n"
        }
      },
      "requiredInputs": [
        "configId",
        "notificationEmails",
        "version"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecActivations resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration to be activated\n"
          },
          "network": {
            "type": "string",
            "description": "Network on which to activate the configuration version (STAGING or PRODUCTION)\n"
          },
          "note": {
            "type": "string",
            "description": "Note describing the activation. Will use timestamp if omitted.\n"
          },
          "notificationEmails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of email addresses to be notified with the results of the activation\n"
          },
          "status": {
            "type": "string",
            "description": "The results of the activation\n"
          },
          "version": {
            "type": "integer",
            "description": "Version of the security configuration to be activated\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecAdvancedSettingsEvasivePathMatch:AppSecAdvancedSettingsEvasivePathMatch": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "enablePathMatch": {
          "type": "boolean",
          "description": "Whether to enable the evasive path match setting\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "required": [
        "configId",
        "enablePathMatch"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "enablePathMatch": {
          "type": "boolean",
          "description": "Whether to enable the evasive path match setting\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "requiredInputs": [
        "configId",
        "enablePathMatch"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecAdvancedSettingsEvasivePathMatch resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "enablePathMatch": {
            "type": "boolean",
            "description": "Whether to enable the evasive path match setting\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecAdvancedSettingsLogging:AppSecAdvancedSettingsLogging": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "logging": {
          "type": "string",
          "description": "Whether to enable, disable, or update HTTP header logging settings\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "required": [
        "configId",
        "logging"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "logging": {
          "type": "string",
          "description": "Whether to enable, disable, or update HTTP header logging settings\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "requiredInputs": [
        "configId",
        "logging"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecAdvancedSettingsLogging resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "logging": {
            "type": "string",
            "description": "Whether to enable, disable, or update HTTP header logging settings\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecAdvancedSettingsPragmaHeader:AppSecAdvancedSettingsPragmaHeader": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "pragmaHeader": {
          "type": "string",
          "description": "JSON-formatted information describing the conditions to exclude from the default remove action\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "required": [
        "configId",
        "pragmaHeader"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "pragmaHeader": {
          "type": "string",
          "description": "JSON-formatted information describing the conditions to exclude from the default remove action\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "requiredInputs": [
        "configId",
        "pragmaHeader"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecAdvancedSettingsPragmaHeader resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "pragmaHeader": {
            "type": "string",
            "description": "JSON-formatted information describing the conditions to exclude from the default remove action\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecAdvancedSettingsPrefetch:AppSecAdvancedSettingsPrefetch": {
      "properties": {
        "allExtensions": {
          "type": "boolean",
          "description": "Whether to enable prefetch requests for all file extensions\n"
        },
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "enableAppLayer": {
          "type": "boolean",
          "description": "Whether to enable or disable prefetch requests\n"
        },
        "enableRateControls": {
          "type": "boolean",
          "description": "Whether to enable prefetch requests for rate controls\n"
        },
        "extensions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of file extensions\n"
        }
      },
      "required": [
        "allExtensions",
        "configId",
        "enableAppLayer",
        "enableRateControls",
        "extensions"
      ],
      "inputProperties": {
        "allExtensions": {
          "type": "boolean",
          "description": "Whether to enable prefetch requests for all file extensions\n"
        },
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "enableAppLayer": {
          "type": "boolean",
          "description": "Whether to enable or disable prefetch requests\n"
        },
        "enableRateControls": {
          "type": "boolean",
          "description": "Whether to enable prefetch requests for rate controls\n"
        },
        "extensions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of file extensions\n"
        }
      },
      "requiredInputs": [
        "allExtensions",
        "configId",
        "enableAppLayer",
        "enableRateControls",
        "extensions"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecAdvancedSettingsPrefetch resources.\n",
        "properties": {
          "allExtensions": {
            "type": "boolean",
            "description": "Whether to enable prefetch requests for all file extensions\n"
          },
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "enableAppLayer": {
            "type": "boolean",
            "description": "Whether to enable or disable prefetch requests\n"
          },
          "enableRateControls": {
            "type": "boolean",
            "description": "Whether to enable prefetch requests for rate controls\n"
          },
          "extensions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of file extensions\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecApiConstraintsProtection:AppSecApiConstraintsProtection": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether to enable API constraints protection\n"
        },
        "outputText": {
          "type": "string",
          "description": "Text representation\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "required": [
        "configId",
        "enabled",
        "outputText",
        "securityPolicyId"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether to enable API constraints protection\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "requiredInputs": [
        "configId",
        "enabled",
        "securityPolicyId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecApiConstraintsProtection resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether to enable API constraints protection\n"
          },
          "outputText": {
            "type": "string",
            "description": "Text representation\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecApiRequestConstraints:AppSecApiRequestConstraints": {
      "properties": {
        "action": {
          "type": "string",
          "description": "Action to be taken when the API request constraint is triggered\n"
        },
        "apiEndpointId": {
          "type": "integer",
          "description": "Unique identifier of the API endpoint to which the constraint will be assigned\n"
        },
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "required": [
        "action",
        "configId",
        "securityPolicyId"
      ],
      "inputProperties": {
        "action": {
          "type": "string",
          "description": "Action to be taken when the API request constraint is triggered\n"
        },
        "apiEndpointId": {
          "type": "integer",
          "description": "Unique identifier of the API endpoint to which the constraint will be assigned\n"
        },
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "requiredInputs": [
        "action",
        "configId",
        "securityPolicyId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecApiRequestConstraints resources.\n",
        "properties": {
          "action": {
            "type": "string",
            "description": "Action to be taken when the API request constraint is triggered\n"
          },
          "apiEndpointId": {
            "type": "integer",
            "description": "Unique identifier of the API endpoint to which the constraint will be assigned\n"
          },
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecAttackGroup:AppSecAttackGroup": {
      "properties": {
        "attackGroup": {
          "type": "string",
          "description": "Unique name of the attack group to be modified\n"
        },
        "attackGroupAction": {
          "type": "string",
          "description": "Action to be taken when the attack group is triggered\n"
        },
        "conditionException": {
          "type": "string",
          "description": "JSON-formatted condition and exception information for the attack group\n"
        },
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "required": [
        "attackGroup",
        "attackGroupAction",
        "configId",
        "securityPolicyId"
      ],
      "inputProperties": {
        "attackGroup": {
          "type": "string",
          "description": "Unique name of the attack group to be modified\n"
        },
        "attackGroupAction": {
          "type": "string",
          "description": "Action to be taken when the attack group is triggered\n"
        },
        "conditionException": {
          "type": "string",
          "description": "JSON-formatted condition and exception information for the attack group\n"
        },
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "requiredInputs": [
        "attackGroup",
        "attackGroupAction",
        "configId",
        "securityPolicyId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecAttackGroup resources.\n",
        "properties": {
          "attackGroup": {
            "type": "string",
            "description": "Unique name of the attack group to be modified\n"
          },
          "attackGroupAction": {
            "type": "string",
            "description": "Action to be taken when the attack group is triggered\n"
          },
          "conditionException": {
            "type": "string",
            "description": "JSON-formatted condition and exception information for the attack group\n"
          },
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecByPassNetworkList:AppSecByPassNetworkList": {
      "properties": {
        "bypassNetworkLists": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of network list IDs that compose the bypass list\n"
        },
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "The unique identifier of the security policy governing the bypass network lists\n"
        }
      },
      "required": [
        "bypassNetworkLists",
        "configId",
        "securityPolicyId"
      ],
      "inputProperties": {
        "bypassNetworkLists": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of network list IDs that compose the bypass list\n"
        },
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "The unique identifier of the security policy governing the bypass network lists\n"
        }
      },
      "requiredInputs": [
        "bypassNetworkLists",
        "configId",
        "securityPolicyId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecByPassNetworkList resources.\n",
        "properties": {
          "bypassNetworkLists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of network list IDs that compose the bypass list\n"
          },
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "The unique identifier of the security policy governing the bypass network lists\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecConfiguration:AppSecConfiguration": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the new security configuration\n"
        },
        "contractId": {
          "type": "string",
          "description": "Unique identifier of the Akamai contract associated with the new configuration\n"
        },
        "createFromConfigId": {
          "type": "integer",
          "description": "Unique identifier of the existing configuration being cloned to create the new configuration\n"
        },
        "createFromVersion": {
          "type": "integer",
          "description": "Version number of the existing configuration being cloned to create the new configuration\n"
        },
        "description": {
          "type": "string",
          "description": "Brief description of the new configuration\n"
        },
        "groupId": {
          "type": "integer",
          "description": "Unique identifier of the contract group associated with the new configuration\n"
        },
        "hostNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Hostnames to be protected by the new configuration\n"
        },
        "name": {
          "type": "string",
          "description": "Name of the new configuration\n"
        }
      },
      "required": [
        "configId",
        "contractId",
        "description",
        "groupId",
        "hostNames",
        "name"
      ],
      "inputProperties": {
        "contractId": {
          "type": "string",
          "description": "Unique identifier of the Akamai contract associated with the new configuration\n"
        },
        "createFromConfigId": {
          "type": "integer",
          "description": "Unique identifier of the existing configuration being cloned to create the new configuration\n"
        },
        "createFromVersion": {
          "type": "integer",
          "description": "Version number of the existing configuration being cloned to create the new configuration\n"
        },
        "description": {
          "type": "string",
          "description": "Brief description of the new configuration\n"
        },
        "groupId": {
          "type": "integer",
          "description": "Unique identifier of the contract group associated with the new configuration\n"
        },
        "hostNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Hostnames to be protected by the new configuration\n"
        },
        "name": {
          "type": "string",
          "description": "Name of the new configuration\n"
        }
      },
      "requiredInputs": [
        "contractId",
        "description",
        "groupId",
        "hostNames"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecConfiguration resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the new security configuration\n"
          },
          "contractId": {
            "type": "string",
            "description": "Unique identifier of the Akamai contract associated with the new configuration\n"
          },
          "createFromConfigId": {
            "type": "integer",
            "description": "Unique identifier of the existing configuration being cloned to create the new configuration\n"
          },
          "createFromVersion": {
            "type": "integer",
            "description": "Version number of the existing configuration being cloned to create the new configuration\n"
          },
          "description": {
            "type": "string",
            "description": "Brief description of the new configuration\n"
          },
          "groupId": {
            "type": "integer",
            "description": "Unique identifier of the contract group associated with the new configuration\n"
          },
          "hostNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Hostnames to be protected by the new configuration\n"
          },
          "name": {
            "type": "string",
            "description": "Name of the new configuration\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecConfigurationRename:AppSecConfigurationRename": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "description": {
          "type": "string",
          "description": "Brief description of the security configuration\n"
        },
        "name": {
          "type": "string",
          "description": "New name for the security configuration\n"
        }
      },
      "required": [
        "configId",
        "description",
        "name"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "description": {
          "type": "string",
          "description": "Brief description of the security configuration\n"
        },
        "name": {
          "type": "string",
          "description": "New name for the security configuration\n"
        }
      },
      "requiredInputs": [
        "configId",
        "description"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecConfigurationRename resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "description": {
            "type": "string",
            "description": "Brief description of the security configuration\n"
          },
          "name": {
            "type": "string",
            "description": "New name for the security configuration\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecCustomDeny:AppSecCustomDeny": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "customDeny": {
          "type": "string",
          "description": "JSON-formatted information about the properties and property values for the custom deny\n"
        },
        "customDenyId": {
          "type": "string",
          "description": "custom_deny_id\n"
        }
      },
      "required": [
        "configId",
        "customDeny",
        "customDenyId"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "customDeny": {
          "type": "string",
          "description": "JSON-formatted information about the properties and property values for the custom deny\n"
        }
      },
      "requiredInputs": [
        "configId",
        "customDeny"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecCustomDeny resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "customDeny": {
            "type": "string",
            "description": "JSON-formatted information about the properties and property values for the custom deny\n"
          },
          "customDenyId": {
            "type": "string",
            "description": "custom_deny_id\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecCustomRule:AppSecCustomRule": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "customRule": {
          "type": "string",
          "description": "JSON-formatted definition of the custom rule\n"
        },
        "customRuleId": {
          "type": "integer"
        }
      },
      "required": [
        "configId",
        "customRule",
        "customRuleId"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "customRule": {
          "type": "string",
          "description": "JSON-formatted definition of the custom rule\n"
        }
      },
      "requiredInputs": [
        "configId",
        "customRule"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecCustomRule resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "customRule": {
            "type": "string",
            "description": "JSON-formatted definition of the custom rule\n"
          },
          "customRuleId": {
            "type": "integer"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecCustomRuleAction:AppSecCustomRuleAction": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "customRuleAction": {
          "type": "string",
          "description": "Action to be taken when the custom rule is invoked\n"
        },
        "customRuleId": {
          "type": "integer",
          "description": "Unique identifier of the custom rule whose action is being modified\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "required": [
        "configId",
        "customRuleAction",
        "customRuleId",
        "securityPolicyId"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "customRuleAction": {
          "type": "string",
          "description": "Action to be taken when the custom rule is invoked\n"
        },
        "customRuleId": {
          "type": "integer",
          "description": "Unique identifier of the custom rule whose action is being modified\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "requiredInputs": [
        "configId",
        "customRuleAction",
        "customRuleId",
        "securityPolicyId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecCustomRuleAction resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "customRuleAction": {
            "type": "string",
            "description": "Action to be taken when the custom rule is invoked\n"
          },
          "customRuleId": {
            "type": "integer",
            "description": "Unique identifier of the custom rule whose action is being modified\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecEval:AppSecEval": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "currentRuleset": {
          "type": "string",
          "description": "Versioning information for the Kona Rule Set currently in use in production\n"
        },
        "evalMode": {
          "type": "string",
          "description": "Evaluation mode (ASE_AUTO or ASE_MANUAL)\n"
        },
        "evalOperation": {
          "type": "string",
          "description": "Evaluation mode operation (START, STOP, RESTART, UPDATE or COMPLETE)\n"
        },
        "evalStatus": {
          "type": "string",
          "description": "Whether an evaluation is currently in progress\n"
        },
        "evaluatingRuleset": {
          "type": "string",
          "description": "Versioning information for the Kona Rule Set being evaluated\n"
        },
        "expirationDate": {
          "type": "string",
          "description": "Date when the evaluation period ends\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "required": [
        "configId",
        "currentRuleset",
        "evalOperation",
        "evalStatus",
        "evaluatingRuleset",
        "expirationDate",
        "securityPolicyId"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "evalMode": {
          "type": "string",
          "description": "Evaluation mode (ASE_AUTO or ASE_MANUAL)\n"
        },
        "evalOperation": {
          "type": "string",
          "description": "Evaluation mode operation (START, STOP, RESTART, UPDATE or COMPLETE)\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "requiredInputs": [
        "configId",
        "evalOperation",
        "securityPolicyId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecEval resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "currentRuleset": {
            "type": "string",
            "description": "Versioning information for the Kona Rule Set currently in use in production\n"
          },
          "evalMode": {
            "type": "string",
            "description": "Evaluation mode (ASE_AUTO or ASE_MANUAL)\n"
          },
          "evalOperation": {
            "type": "string",
            "description": "Evaluation mode operation (START, STOP, RESTART, UPDATE or COMPLETE)\n"
          },
          "evalStatus": {
            "type": "string",
            "description": "Whether an evaluation is currently in progress\n"
          },
          "evaluatingRuleset": {
            "type": "string",
            "description": "Versioning information for the Kona Rule Set being evaluated\n"
          },
          "expirationDate": {
            "type": "string",
            "description": "Date when the evaluation period ends\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecEvalGroup:AppSecEvalGroup": {
      "properties": {
        "attackGroup": {
          "type": "string",
          "description": "Unique identifier of the evaluation attack group being modified\n"
        },
        "attackGroupAction": {
          "type": "string",
          "description": "Action to be taken when the attack group is triggered\n"
        },
        "conditionException": {
          "type": "string",
          "description": "JSON-formatted condition and exception information for the evaluation attack group\n"
        },
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "required": [
        "attackGroup",
        "attackGroupAction",
        "configId",
        "securityPolicyId"
      ],
      "inputProperties": {
        "attackGroup": {
          "type": "string",
          "description": "Unique identifier of the evaluation attack group being modified\n"
        },
        "attackGroupAction": {
          "type": "string",
          "description": "Action to be taken when the attack group is triggered\n"
        },
        "conditionException": {
          "type": "string",
          "description": "JSON-formatted condition and exception information for the evaluation attack group\n"
        },
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "requiredInputs": [
        "attackGroup",
        "attackGroupAction",
        "configId",
        "securityPolicyId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecEvalGroup resources.\n",
        "properties": {
          "attackGroup": {
            "type": "string",
            "description": "Unique identifier of the evaluation attack group being modified\n"
          },
          "attackGroupAction": {
            "type": "string",
            "description": "Action to be taken when the attack group is triggered\n"
          },
          "conditionException": {
            "type": "string",
            "description": "JSON-formatted condition and exception information for the evaluation attack group\n"
          },
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecEvalPenaltyBox:AppSecEvalPenaltyBox": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "penaltyBoxAction": {
          "type": "string",
          "description": "Action applied to requests from clients in the penalty box\n"
        },
        "penaltyBoxProtection": {
          "type": "boolean",
          "description": "Whether to enable the penalty box for the specified security policy\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "required": [
        "configId",
        "penaltyBoxAction",
        "penaltyBoxProtection",
        "securityPolicyId"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "penaltyBoxAction": {
          "type": "string",
          "description": "Action applied to requests from clients in the penalty box\n"
        },
        "penaltyBoxProtection": {
          "type": "boolean",
          "description": "Whether to enable the penalty box for the specified security policy\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "requiredInputs": [
        "configId",
        "penaltyBoxAction",
        "penaltyBoxProtection",
        "securityPolicyId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecEvalPenaltyBox resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "penaltyBoxAction": {
            "type": "string",
            "description": "Action applied to requests from clients in the penalty box\n"
          },
          "penaltyBoxProtection": {
            "type": "boolean",
            "description": "Whether to enable the penalty box for the specified security policy\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecEvalRule:AppSecEvalRule": {
      "properties": {
        "conditionException": {
          "type": "string",
          "description": "JSON-formatted condition and exception information for the evaluation rule\n"
        },
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "ruleAction": {
          "type": "string",
          "description": "Action to be taken when the evaluation rule is triggered\n"
        },
        "ruleId": {
          "type": "integer",
          "description": "Unique identifier of the evaluation rule being modified\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "required": [
        "configId",
        "ruleAction",
        "ruleId",
        "securityPolicyId"
      ],
      "inputProperties": {
        "conditionException": {
          "type": "string",
          "description": "JSON-formatted condition and exception information for the evaluation rule\n"
        },
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "ruleAction": {
          "type": "string",
          "description": "Action to be taken when the evaluation rule is triggered\n"
        },
        "ruleId": {
          "type": "integer",
          "description": "Unique identifier of the evaluation rule being modified\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "requiredInputs": [
        "configId",
        "ruleAction",
        "ruleId",
        "securityPolicyId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecEvalRule resources.\n",
        "properties": {
          "conditionException": {
            "type": "string",
            "description": "JSON-formatted condition and exception information for the evaluation rule\n"
          },
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "ruleAction": {
            "type": "string",
            "description": "Action to be taken when the evaluation rule is triggered\n"
          },
          "ruleId": {
            "type": "integer",
            "description": "Unique identifier of the evaluation rule being modified\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecIPGeo:AppSecIPGeo": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "exceptionIpNetworkLists": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of IDs of network list that are always allowed\n"
        },
        "geoNetworkLists": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of IDs of geographic network list to be blocked\n"
        },
        "ipNetworkLists": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of IDs of IP network list to be blocked\n"
        },
        "mode": {
          "type": "string",
          "description": "Protection mode (block or allow)\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        },
        "ukraineGeoControlAction": {
          "type": "string",
          "description": "Action set for Ukraine geo control\n"
        }
      },
      "required": [
        "configId",
        "mode",
        "securityPolicyId"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "exceptionIpNetworkLists": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of IDs of network list that are always allowed\n"
        },
        "geoNetworkLists": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of IDs of geographic network list to be blocked\n"
        },
        "ipNetworkLists": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of IDs of IP network list to be blocked\n"
        },
        "mode": {
          "type": "string",
          "description": "Protection mode (block or allow)\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        },
        "ukraineGeoControlAction": {
          "type": "string",
          "description": "Action set for Ukraine geo control\n"
        }
      },
      "requiredInputs": [
        "configId",
        "mode",
        "securityPolicyId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecIPGeo resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "exceptionIpNetworkLists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of IDs of network list that are always allowed\n"
          },
          "geoNetworkLists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of IDs of geographic network list to be blocked\n"
          },
          "ipNetworkLists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of IDs of IP network list to be blocked\n"
          },
          "mode": {
            "type": "string",
            "description": "Protection mode (block or allow)\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          },
          "ukraineGeoControlAction": {
            "type": "string",
            "description": "Action set for Ukraine geo control\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecIPGeoProtection:AppSecIPGeoProtection": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether to enable IP/Geo protection\n"
        },
        "outputText": {
          "type": "string",
          "description": "Text representation\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "required": [
        "configId",
        "enabled",
        "outputText",
        "securityPolicyId"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether to enable IP/Geo protection\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "requiredInputs": [
        "configId",
        "enabled",
        "securityPolicyId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecIPGeoProtection resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether to enable IP/Geo protection\n"
          },
          "outputText": {
            "type": "string",
            "description": "Text representation\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecMalwarePolicy:AppSecMalwarePolicy": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "malwarePolicy": {
          "type": "string",
          "description": "JSON-formatted definition of the malware policy\n"
        },
        "malwarePolicyId": {
          "type": "integer",
          "description": "Unique identifier of the malware policy\n"
        }
      },
      "required": [
        "configId",
        "malwarePolicy",
        "malwarePolicyId"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "malwarePolicy": {
          "type": "string",
          "description": "JSON-formatted definition of the malware policy\n"
        }
      },
      "requiredInputs": [
        "configId",
        "malwarePolicy"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecMalwarePolicy resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "malwarePolicy": {
            "type": "string",
            "description": "JSON-formatted definition of the malware policy\n"
          },
          "malwarePolicyId": {
            "type": "integer",
            "description": "Unique identifier of the malware policy\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecMalwarePolicyAction:AppSecMalwarePolicyAction": {
      "properties": {
        "action": {
          "type": "string",
          "description": "Action to be taken for requests scanned according to the malware policy\n"
        },
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "malwarePolicyId": {
          "type": "integer",
          "description": "Unique identifier of the malware policy\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        },
        "unscannedAction": {
          "type": "string",
          "description": "Action to be taken for requests not scanned according to the malware policy\n"
        }
      },
      "required": [
        "action",
        "configId",
        "malwarePolicyId",
        "securityPolicyId",
        "unscannedAction"
      ],
      "inputProperties": {
        "action": {
          "type": "string",
          "description": "Action to be taken for requests scanned according to the malware policy\n"
        },
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "malwarePolicyId": {
          "type": "integer",
          "description": "Unique identifier of the malware policy\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        },
        "unscannedAction": {
          "type": "string",
          "description": "Action to be taken for requests not scanned according to the malware policy\n"
        }
      },
      "requiredInputs": [
        "action",
        "configId",
        "malwarePolicyId",
        "securityPolicyId",
        "unscannedAction"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecMalwarePolicyAction resources.\n",
        "properties": {
          "action": {
            "type": "string",
            "description": "Action to be taken for requests scanned according to the malware policy\n"
          },
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "malwarePolicyId": {
            "type": "integer",
            "description": "Unique identifier of the malware policy\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          },
          "unscannedAction": {
            "type": "string",
            "description": "Action to be taken for requests not scanned according to the malware policy\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecMalwarePolicyActions:AppSecMalwarePolicyActions": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "malwarePolicyActions": {
          "type": "string",
          "description": "JSON-formatted list of malware policies and their associated actions\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "required": [
        "configId",
        "malwarePolicyActions",
        "securityPolicyId"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "malwarePolicyActions": {
          "type": "string",
          "description": "JSON-formatted list of malware policies and their associated actions\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "requiredInputs": [
        "configId",
        "malwarePolicyActions",
        "securityPolicyId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecMalwarePolicyActions resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "malwarePolicyActions": {
            "type": "string",
            "description": "JSON-formatted list of malware policies and their associated actions\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecMalwareProtection:AppSecMalwareProtection": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether to enable malware protection\n"
        },
        "outputText": {
          "type": "string",
          "description": "Text representation\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "required": [
        "configId",
        "enabled",
        "outputText",
        "securityPolicyId"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether to enable malware protection\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "requiredInputs": [
        "configId",
        "enabled",
        "securityPolicyId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecMalwareProtection resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether to enable malware protection\n"
          },
          "outputText": {
            "type": "string",
            "description": "Text representation\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecMatchTarget:AppSecMatchTarget": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "matchTarget": {
          "type": "string",
          "description": "JSON-formatted definition of the match target\n"
        },
        "matchTargetId": {
          "type": "integer",
          "description": "Unique identifier of the match target\n"
        }
      },
      "required": [
        "configId",
        "matchTarget",
        "matchTargetId"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "matchTarget": {
          "type": "string",
          "description": "JSON-formatted definition of the match target\n"
        }
      },
      "requiredInputs": [
        "configId",
        "matchTarget"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecMatchTarget resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "matchTarget": {
            "type": "string",
            "description": "JSON-formatted definition of the match target\n"
          },
          "matchTargetId": {
            "type": "integer",
            "description": "Unique identifier of the match target\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecMatchTargetSequence:AppSecMatchTargetSequence": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "matchTargetSequence": {
          "type": "string",
          "description": "JSON-formatted definition of the processing sequence for all defined match targets\n"
        }
      },
      "required": [
        "configId"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "matchTargetSequence": {
          "type": "string",
          "description": "JSON-formatted definition of the processing sequence for all defined match targets\n"
        }
      },
      "requiredInputs": [
        "configId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecMatchTargetSequence resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "matchTargetSequence": {
            "type": "string",
            "description": "JSON-formatted definition of the processing sequence for all defined match targets\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecPenaltyBox:AppSecPenaltyBox": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "penaltyBoxAction": {
          "type": "string",
          "description": "The action to be taken when the penalty box is triggered\n"
        },
        "penaltyBoxProtection": {
          "type": "boolean",
          "description": "Whether to enable the penalty box for the specified security policy\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "required": [
        "configId",
        "penaltyBoxAction",
        "penaltyBoxProtection",
        "securityPolicyId"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "penaltyBoxAction": {
          "type": "string",
          "description": "The action to be taken when the penalty box is triggered\n"
        },
        "penaltyBoxProtection": {
          "type": "boolean",
          "description": "Whether to enable the penalty box for the specified security policy\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "requiredInputs": [
        "configId",
        "penaltyBoxAction",
        "penaltyBoxProtection",
        "securityPolicyId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecPenaltyBox resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "penaltyBoxAction": {
            "type": "string",
            "description": "The action to be taken when the penalty box is triggered\n"
          },
          "penaltyBoxProtection": {
            "type": "boolean",
            "description": "Whether to enable the penalty box for the specified security policy\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecRatePolicy:AppSecRatePolicy": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "ratePolicy": {
          "type": "string",
          "description": "JSON-formatted definition of the rate policy\n"
        },
        "ratePolicyId": {
          "type": "integer",
          "description": "Unique identifier of the rate policy\n"
        }
      },
      "required": [
        "configId",
        "ratePolicy",
        "ratePolicyId"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "ratePolicy": {
          "type": "string",
          "description": "JSON-formatted definition of the rate policy\n"
        }
      },
      "requiredInputs": [
        "configId",
        "ratePolicy"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecRatePolicy resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "ratePolicy": {
            "type": "string",
            "description": "JSON-formatted definition of the rate policy\n"
          },
          "ratePolicyId": {
            "type": "integer",
            "description": "Unique identifier of the rate policy\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecRatePolicyAction:AppSecRatePolicyAction": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "ipv4Action": {
          "type": "string",
          "description": "Action to be taken for requests coming from an IPv4 address\n"
        },
        "ipv6Action": {
          "type": "string",
          "description": "Action to be taken for requests coming from an IPv6 address\n"
        },
        "ratePolicyId": {
          "type": "integer",
          "description": "Unique identifier of the rate policy\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "required": [
        "configId",
        "ipv4Action",
        "ipv6Action",
        "ratePolicyId",
        "securityPolicyId"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "ipv4Action": {
          "type": "string",
          "description": "Action to be taken for requests coming from an IPv4 address\n"
        },
        "ipv6Action": {
          "type": "string",
          "description": "Action to be taken for requests coming from an IPv6 address\n"
        },
        "ratePolicyId": {
          "type": "integer",
          "description": "Unique identifier of the rate policy\n",
          "willReplaceOnChanges": true
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "requiredInputs": [
        "configId",
        "ipv4Action",
        "ipv6Action",
        "ratePolicyId",
        "securityPolicyId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecRatePolicyAction resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "ipv4Action": {
            "type": "string",
            "description": "Action to be taken for requests coming from an IPv4 address\n"
          },
          "ipv6Action": {
            "type": "string",
            "description": "Action to be taken for requests coming from an IPv6 address\n"
          },
          "ratePolicyId": {
            "type": "integer",
            "description": "Unique identifier of the rate policy\n",
            "willReplaceOnChanges": true
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecRateProtection:AppSecRateProtection": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "enabled": {
          "type": "boolean"
        },
        "outputText": {
          "type": "string",
          "description": "Text representation\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "required": [
        "configId",
        "enabled",
        "outputText",
        "securityPolicyId"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "enabled": {
          "type": "boolean"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "requiredInputs": [
        "configId",
        "enabled",
        "securityPolicyId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecRateProtection resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "enabled": {
            "type": "boolean"
          },
          "outputText": {
            "type": "string",
            "description": "Text representation\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecReputationProfile:AppSecReputationProfile": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "reputationProfile": {
          "type": "string",
          "description": "JSON-formatted definition of the reputation profile\n"
        },
        "reputationProfileId": {
          "type": "integer",
          "description": "Unique identifier of the reputation profile\n"
        }
      },
      "required": [
        "configId",
        "reputationProfile",
        "reputationProfileId"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "reputationProfile": {
          "type": "string",
          "description": "JSON-formatted definition of the reputation profile\n"
        }
      },
      "requiredInputs": [
        "configId",
        "reputationProfile"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecReputationProfile resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "reputationProfile": {
            "type": "string",
            "description": "JSON-formatted definition of the reputation profile\n"
          },
          "reputationProfileId": {
            "type": "integer",
            "description": "Unique identifier of the reputation profile\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecReputationProfileAction:AppSecReputationProfileAction": {
      "properties": {
        "action": {
          "type": "string",
          "description": "Action to be taken when the reputation profile is triggered\n"
        },
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "reputationProfileId": {
          "type": "integer",
          "description": "Unique identifier of the reputation profile\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "required": [
        "action",
        "configId",
        "reputationProfileId",
        "securityPolicyId"
      ],
      "inputProperties": {
        "action": {
          "type": "string",
          "description": "Action to be taken when the reputation profile is triggered\n"
        },
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "reputationProfileId": {
          "type": "integer",
          "description": "Unique identifier of the reputation profile\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "requiredInputs": [
        "action",
        "configId",
        "reputationProfileId",
        "securityPolicyId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecReputationProfileAction resources.\n",
        "properties": {
          "action": {
            "type": "string",
            "description": "Action to be taken when the reputation profile is triggered\n"
          },
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "reputationProfileId": {
            "type": "integer",
            "description": "Unique identifier of the reputation profile\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecReputationProfileAnalysis:AppSecReputationProfileAnalysis": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "forwardSharedIpToHttpHeaderSiem": {
          "type": "boolean",
          "description": "Whether to add a value indicating that shared IPs are included in HTTP header and SIEM integration\n"
        },
        "forwardToHttpHeader": {
          "type": "boolean",
          "description": "Whether to add client reputation details to requests forwarded to the origin server\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "required": [
        "configId",
        "forwardSharedIpToHttpHeaderSiem",
        "forwardToHttpHeader",
        "securityPolicyId"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "forwardSharedIpToHttpHeaderSiem": {
          "type": "boolean",
          "description": "Whether to add a value indicating that shared IPs are included in HTTP header and SIEM integration\n"
        },
        "forwardToHttpHeader": {
          "type": "boolean",
          "description": "Whether to add client reputation details to requests forwarded to the origin server\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "requiredInputs": [
        "configId",
        "forwardSharedIpToHttpHeaderSiem",
        "forwardToHttpHeader",
        "securityPolicyId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecReputationProfileAnalysis resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "forwardSharedIpToHttpHeaderSiem": {
            "type": "boolean",
            "description": "Whether to add a value indicating that shared IPs are included in HTTP header and SIEM integration\n"
          },
          "forwardToHttpHeader": {
            "type": "boolean",
            "description": "Whether to add client reputation details to requests forwarded to the origin server\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecReputationProtection:AppSecReputationProtection": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether to enable reputation protection\n"
        },
        "outputText": {
          "type": "string",
          "description": "Text representation\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "required": [
        "configId",
        "enabled",
        "outputText",
        "securityPolicyId"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether to enable reputation protection\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "requiredInputs": [
        "configId",
        "enabled",
        "securityPolicyId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecReputationProtection resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether to enable reputation protection\n"
          },
          "outputText": {
            "type": "string",
            "description": "Text representation\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecRule:AppSecRule": {
      "properties": {
        "conditionException": {
          "type": "string",
          "description": "JSON-formatted condition and exception information for the rule\n"
        },
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "ruleAction": {
          "type": "string",
          "description": "Action to be taken when the rule is triggered\n"
        },
        "ruleId": {
          "type": "integer",
          "description": "Unique identifier of the rule\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "required": [
        "configId",
        "ruleAction",
        "ruleId",
        "securityPolicyId"
      ],
      "inputProperties": {
        "conditionException": {
          "type": "string",
          "description": "JSON-formatted condition and exception information for the rule\n"
        },
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "ruleAction": {
          "type": "string",
          "description": "Action to be taken when the rule is triggered\n"
        },
        "ruleId": {
          "type": "integer",
          "description": "Unique identifier of the rule\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "requiredInputs": [
        "configId",
        "ruleId",
        "securityPolicyId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecRule resources.\n",
        "properties": {
          "conditionException": {
            "type": "string",
            "description": "JSON-formatted condition and exception information for the rule\n"
          },
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "ruleAction": {
            "type": "string",
            "description": "Action to be taken when the rule is triggered\n"
          },
          "ruleId": {
            "type": "integer",
            "description": "Unique identifier of the rule\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecRuleUpgrade:AppSecRuleUpgrade": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "currentRuleset": {
          "type": "string",
          "description": "Versioning information for the current KRS rule set\n"
        },
        "evalStatus": {
          "type": "string",
          "description": "Whether an evaluation is currently in progress\n"
        },
        "mode": {
          "type": "string",
          "description": "Upgrade mode (KRS, AAG, ASE_MANUAL or ASE_AUTO)\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        },
        "upgradeMode": {
          "type": "string",
          "description": "Modifies the upgrade type for organizations running the ASE beta (ASE_AUTO or ASE_MANUAL)\n"
        }
      },
      "required": [
        "configId",
        "currentRuleset",
        "evalStatus",
        "mode",
        "securityPolicyId"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        },
        "upgradeMode": {
          "type": "string",
          "description": "Modifies the upgrade type for organizations running the ASE beta (ASE_AUTO or ASE_MANUAL)\n"
        }
      },
      "requiredInputs": [
        "configId",
        "securityPolicyId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecRuleUpgrade resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "currentRuleset": {
            "type": "string",
            "description": "Versioning information for the current KRS rule set\n"
          },
          "evalStatus": {
            "type": "string",
            "description": "Whether an evaluation is currently in progress\n"
          },
          "mode": {
            "type": "string",
            "description": "Upgrade mode (KRS, AAG, ASE_MANUAL or ASE_AUTO)\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          },
          "upgradeMode": {
            "type": "string",
            "description": "Modifies the upgrade type for organizations running the ASE beta (ASE_AUTO or ASE_MANUAL)\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecSecurityPolicy:AppSecSecurityPolicy": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "createFromSecurityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the existing security policy being cloned\n"
        },
        "defaultSettings": {
          "type": "boolean",
          "description": "Whether to assign default settings to the new security policy\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the new security policy\n"
        },
        "securityPolicyName": {
          "type": "string",
          "description": "Name of the new security policy\n"
        },
        "securityPolicyPrefix": {
          "type": "string",
          "description": "Four-character alphanumeric string prefix used in creating the security policy ID\n"
        }
      },
      "required": [
        "configId",
        "securityPolicyId",
        "securityPolicyName",
        "securityPolicyPrefix"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "createFromSecurityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the existing security policy being cloned\n"
        },
        "defaultSettings": {
          "type": "boolean",
          "description": "Whether to assign default settings to the new security policy\n"
        },
        "securityPolicyName": {
          "type": "string",
          "description": "Name of the new security policy\n"
        },
        "securityPolicyPrefix": {
          "type": "string",
          "description": "Four-character alphanumeric string prefix used in creating the security policy ID\n"
        }
      },
      "requiredInputs": [
        "configId",
        "securityPolicyName",
        "securityPolicyPrefix"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecSecurityPolicy resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "createFromSecurityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the existing security policy being cloned\n"
          },
          "defaultSettings": {
            "type": "boolean",
            "description": "Whether to assign default settings to the new security policy\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the new security policy\n"
          },
          "securityPolicyName": {
            "type": "string",
            "description": "Name of the new security policy\n"
          },
          "securityPolicyPrefix": {
            "type": "string",
            "description": "Four-character alphanumeric string prefix used in creating the security policy ID\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecSecurityPolicyRename:AppSecSecurityPolicyRename": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        },
        "securityPolicyName": {
          "type": "string",
          "description": "New name to be given to the security policy\n"
        }
      },
      "required": [
        "configId",
        "securityPolicyId",
        "securityPolicyName"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        },
        "securityPolicyName": {
          "type": "string",
          "description": "New name to be given to the security policy\n"
        }
      },
      "requiredInputs": [
        "configId",
        "securityPolicyId",
        "securityPolicyName"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecSecurityPolicyRename resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          },
          "securityPolicyName": {
            "type": "string",
            "description": "New name to be given to the security policy\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecSelectedHostnames:AppSecSelectedHostnames": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "hostnames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of hostnames to be added or removed from the protected hosts list\n"
        },
        "mode": {
          "type": "string",
          "description": "How the hostnames are to be applied (APPEND, REMOVE or REPLACE)\n"
        }
      },
      "required": [
        "configId",
        "hostnames",
        "mode"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "hostnames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of hostnames to be added or removed from the protected hosts list\n"
        },
        "mode": {
          "type": "string",
          "description": "How the hostnames are to be applied (APPEND, REMOVE or REPLACE)\n"
        }
      },
      "requiredInputs": [
        "configId",
        "hostnames",
        "mode"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecSelectedHostnames resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "hostnames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of hostnames to be added or removed from the protected hosts list\n"
          },
          "mode": {
            "type": "string",
            "description": "How the hostnames are to be applied (APPEND, REMOVE or REPLACE)\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecSiemSettings:AppSecSiemSettings": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "enableBotmanSiem": {
          "type": "boolean",
          "description": "Whether Bot Manager events should be included in SIEM events\n"
        },
        "enableForAllPolicies": {
          "type": "boolean",
          "description": "Whether to enable SIEM on all security policies in the security configuration\n"
        },
        "enableSiem": {
          "type": "boolean",
          "description": "Whether to enable SIEM\n"
        },
        "securityPolicyIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of IDs of security policy for which SIEM integration is to be enabled\n"
        },
        "siemId": {
          "type": "integer",
          "description": "Unique identifier of the SIEM settings being modified\n"
        }
      },
      "required": [
        "configId",
        "enableBotmanSiem",
        "enableForAllPolicies",
        "enableSiem",
        "siemId"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "enableBotmanSiem": {
          "type": "boolean",
          "description": "Whether Bot Manager events should be included in SIEM events\n"
        },
        "enableForAllPolicies": {
          "type": "boolean",
          "description": "Whether to enable SIEM on all security policies in the security configuration\n"
        },
        "enableSiem": {
          "type": "boolean",
          "description": "Whether to enable SIEM\n"
        },
        "securityPolicyIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of IDs of security policy for which SIEM integration is to be enabled\n"
        },
        "siemId": {
          "type": "integer",
          "description": "Unique identifier of the SIEM settings being modified\n"
        }
      },
      "requiredInputs": [
        "configId",
        "enableBotmanSiem",
        "enableForAllPolicies",
        "enableSiem",
        "siemId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecSiemSettings resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "enableBotmanSiem": {
            "type": "boolean",
            "description": "Whether Bot Manager events should be included in SIEM events\n"
          },
          "enableForAllPolicies": {
            "type": "boolean",
            "description": "Whether to enable SIEM on all security policies in the security configuration\n"
          },
          "enableSiem": {
            "type": "boolean",
            "description": "Whether to enable SIEM\n"
          },
          "securityPolicyIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of IDs of security policy for which SIEM integration is to be enabled\n"
          },
          "siemId": {
            "type": "integer",
            "description": "Unique identifier of the SIEM settings being modified\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecSlowPost:AppSecSlowPost": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "durationThresholdTimeout": {
          "type": "integer",
          "description": "Maximum amount of time (in seconds) within which the first 8KB of the POST body must be received to avoid triggering the\nspecified action\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        },
        "slowRateAction": {
          "type": "string",
          "description": "Action to be taken when slow POST protection is triggered\n"
        },
        "slowRateThresholdPeriod": {
          "type": "integer",
          "description": "Amount of time (in seconds) that the server should allow a request before marking the request as being too slow\n"
        },
        "slowRateThresholdRate": {
          "type": "integer",
          "description": "Average rate (in bytes per second over the specified time period) allowed before the specified action is triggered\n"
        }
      },
      "required": [
        "configId",
        "securityPolicyId",
        "slowRateAction"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "durationThresholdTimeout": {
          "type": "integer",
          "description": "Maximum amount of time (in seconds) within which the first 8KB of the POST body must be received to avoid triggering the\nspecified action\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        },
        "slowRateAction": {
          "type": "string",
          "description": "Action to be taken when slow POST protection is triggered\n"
        },
        "slowRateThresholdPeriod": {
          "type": "integer",
          "description": "Amount of time (in seconds) that the server should allow a request before marking the request as being too slow\n"
        },
        "slowRateThresholdRate": {
          "type": "integer",
          "description": "Average rate (in bytes per second over the specified time period) allowed before the specified action is triggered\n"
        }
      },
      "requiredInputs": [
        "configId",
        "securityPolicyId",
        "slowRateAction"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecSlowPost resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "durationThresholdTimeout": {
            "type": "integer",
            "description": "Maximum amount of time (in seconds) within which the first 8KB of the POST body must be received to avoid triggering the\nspecified action\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          },
          "slowRateAction": {
            "type": "string",
            "description": "Action to be taken when slow POST protection is triggered\n"
          },
          "slowRateThresholdPeriod": {
            "type": "integer",
            "description": "Amount of time (in seconds) that the server should allow a request before marking the request as being too slow\n"
          },
          "slowRateThresholdRate": {
            "type": "integer",
            "description": "Average rate (in bytes per second over the specified time period) allowed before the specified action is triggered\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecSlowPostProtection:AppSecSlowPostProtection": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether to enable slow POST protection\n"
        },
        "outputText": {
          "type": "string",
          "description": "Text representation\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "required": [
        "configId",
        "enabled",
        "outputText",
        "securityPolicyId"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether to enable slow POST protection\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "requiredInputs": [
        "configId",
        "enabled",
        "securityPolicyId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecSlowPostProtection resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether to enable slow POST protection\n"
          },
          "outputText": {
            "type": "string",
            "description": "Text representation\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecThreatIntel:AppSecThreatIntel": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        },
        "threatIntel": {
          "type": "string",
          "description": "Whether threat intelligence protection should be on or off\n"
        }
      },
      "required": [
        "configId",
        "securityPolicyId",
        "threatIntel"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        },
        "threatIntel": {
          "type": "string",
          "description": "Whether threat intelligence protection should be on or off\n"
        }
      },
      "requiredInputs": [
        "configId",
        "securityPolicyId",
        "threatIntel"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecThreatIntel resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          },
          "threatIntel": {
            "type": "string",
            "description": "Whether threat intelligence protection should be on or off\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecVersionNodes:AppSecVersionNodes": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "outputText": {
          "type": "string",
          "description": "Text representation\n"
        },
        "versionNotes": {
          "type": "string",
          "description": "Brief description of the security configuration version\n"
        }
      },
      "required": [
        "configId",
        "outputText",
        "versionNotes"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "versionNotes": {
          "type": "string",
          "description": "Brief description of the security configuration version\n"
        }
      },
      "requiredInputs": [
        "configId",
        "versionNotes"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecVersionNodes resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "outputText": {
            "type": "string",
            "description": "Text representation\n"
          },
          "versionNotes": {
            "type": "string",
            "description": "Brief description of the security configuration version\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecWafMode:AppSecWafMode": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "currentRuleset": {
          "type": "string",
          "description": "Versioning information for the current Kona Rule Set\n"
        },
        "evalExpirationDate": {
          "type": "string",
          "description": "Date on which the evaluation period ends, if applicable\n"
        },
        "evalRuleset": {
          "type": "string",
          "description": "Versioning information for the Kona Rule Set being evaluated, if applicable\n"
        },
        "evalStatus": {
          "type": "string",
          "description": "Whether an evaluation is currently in progress\n"
        },
        "mode": {
          "type": "string",
          "description": "How Kona Rule Set rules should be upgraded (KRS, AAG, ASE_MANUAL or ASE_AUTO)\n"
        },
        "outputText": {
          "type": "string",
          "description": "Text representation\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "required": [
        "configId",
        "currentRuleset",
        "evalExpirationDate",
        "evalRuleset",
        "evalStatus",
        "mode",
        "outputText",
        "securityPolicyId"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "mode": {
          "type": "string",
          "description": "How Kona Rule Set rules should be upgraded (KRS, AAG, ASE_MANUAL or ASE_AUTO)\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "requiredInputs": [
        "configId",
        "mode",
        "securityPolicyId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecWafMode resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "currentRuleset": {
            "type": "string",
            "description": "Versioning information for the current Kona Rule Set\n"
          },
          "evalExpirationDate": {
            "type": "string",
            "description": "Date on which the evaluation period ends, if applicable\n"
          },
          "evalRuleset": {
            "type": "string",
            "description": "Versioning information for the Kona Rule Set being evaluated, if applicable\n"
          },
          "evalStatus": {
            "type": "string",
            "description": "Whether an evaluation is currently in progress\n"
          },
          "mode": {
            "type": "string",
            "description": "How Kona Rule Set rules should be upgraded (KRS, AAG, ASE_MANUAL or ASE_AUTO)\n"
          },
          "outputText": {
            "type": "string",
            "description": "Text representation\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecWafProtection:AppSecWafProtection": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether to enable WAF protection\n"
        },
        "outputText": {
          "type": "string",
          "description": "Text representation\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "required": [
        "configId",
        "enabled",
        "outputText",
        "securityPolicyId"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether to enable WAF protection\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "requiredInputs": [
        "configId",
        "enabled",
        "securityPolicyId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecWafProtection resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether to enable WAF protection\n"
          },
          "outputText": {
            "type": "string",
            "description": "Text representation\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appSecWapSelectedHostnames:AppSecWapSelectedHostnames": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "evaluatedHosts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of hostnames to be evaluated\n"
        },
        "protectedHosts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of hostnames to be protected\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "required": [
        "configId",
        "securityPolicyId"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "evaluatedHosts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of hostnames to be evaluated\n"
        },
        "protectedHosts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of hostnames to be protected\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "requiredInputs": [
        "configId",
        "securityPolicyId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppSecWapSelectedHostnames resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "evaluatedHosts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of hostnames to be evaluated\n"
          },
          "protectedHosts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of hostnames to be protected\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appsecAdvancedSettingsAttackPayloadLogging:AppsecAdvancedSettingsAttackPayloadLogging": {
      "properties": {
        "attackPayloadLogging": {
          "type": "string",
          "description": "Whether to enable, disable, or update attack payload logging settings\n"
        },
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "required": [
        "attackPayloadLogging",
        "configId"
      ],
      "inputProperties": {
        "attackPayloadLogging": {
          "type": "string",
          "description": "Whether to enable, disable, or update attack payload logging settings\n"
        },
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "requiredInputs": [
        "attackPayloadLogging",
        "configId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppsecAdvancedSettingsAttackPayloadLogging resources.\n",
        "properties": {
          "attackPayloadLogging": {
            "type": "string",
            "description": "Whether to enable, disable, or update attack payload logging settings\n"
          },
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appsecAdvancedSettingsPiiLearning:AppsecAdvancedSettingsPiiLearning": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "enablePiiLearning": {
          "type": "boolean",
          "description": "Whether to enable the PII learning advanced setting\n"
        }
      },
      "required": [
        "configId",
        "enablePiiLearning"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "enablePiiLearning": {
          "type": "boolean",
          "description": "Whether to enable the PII learning advanced setting\n"
        }
      },
      "requiredInputs": [
        "configId",
        "enablePiiLearning"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppsecAdvancedSettingsPiiLearning resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "enablePiiLearning": {
            "type": "boolean",
            "description": "Whether to enable the PII learning advanced setting\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appsecAdvancedSettingsRequestBody:AppsecAdvancedSettingsRequestBody": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "requestBodyInspectionLimit": {
          "type": "string",
          "description": "Request body inspection size limit in KB allowed values are 'default', 8, 16, 32\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "required": [
        "configId",
        "requestBodyInspectionLimit"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "requestBodyInspectionLimit": {
          "type": "string",
          "description": "Request body inspection size limit in KB allowed values are 'default', 8, 16, 32\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the security policy\n"
        }
      },
      "requiredInputs": [
        "configId",
        "requestBodyInspectionLimit"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppsecAdvancedSettingsRequestBody resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "requestBodyInspectionLimit": {
            "type": "string",
            "description": "Request body inspection size limit in KB allowed values are 'default', 8, 16, 32\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the security policy\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/appsecSecurityPolicyDefaultProtections:AppsecSecurityPolicyDefaultProtections": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "securityPolicyId": {
          "type": "string",
          "description": "Unique identifier of the new security policy\n"
        },
        "securityPolicyName": {
          "type": "string",
          "description": "Name of the new security policy\n"
        },
        "securityPolicyPrefix": {
          "type": "string",
          "description": "Four-character alphanumeric string prefix used in creating the security policy ID\n"
        }
      },
      "required": [
        "configId",
        "securityPolicyId",
        "securityPolicyName",
        "securityPolicyPrefix"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "Unique identifier of the security configuration\n"
        },
        "securityPolicyName": {
          "type": "string",
          "description": "Name of the new security policy\n"
        },
        "securityPolicyPrefix": {
          "type": "string",
          "description": "Four-character alphanumeric string prefix used in creating the security policy ID\n"
        }
      },
      "requiredInputs": [
        "configId",
        "securityPolicyName",
        "securityPolicyPrefix"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering AppsecSecurityPolicyDefaultProtections resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Unique identifier of the security configuration\n"
          },
          "securityPolicyId": {
            "type": "string",
            "description": "Unique identifier of the new security policy\n"
          },
          "securityPolicyName": {
            "type": "string",
            "description": "Name of the new security policy\n"
          },
          "securityPolicyPrefix": {
            "type": "string",
            "description": "Four-character alphanumeric string prefix used in creating the security policy ID\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/botmanAkamaiBotCategoryAction:BotmanAkamaiBotCategoryAction": {
      "properties": {
        "akamaiBotCategoryAction": {
          "type": "string"
        },
        "categoryId": {
          "type": "string"
        },
        "configId": {
          "type": "integer"
        },
        "securityPolicyId": {
          "type": "string"
        }
      },
      "required": [
        "akamaiBotCategoryAction",
        "categoryId",
        "configId",
        "securityPolicyId"
      ],
      "inputProperties": {
        "akamaiBotCategoryAction": {
          "type": "string"
        },
        "categoryId": {
          "type": "string"
        },
        "configId": {
          "type": "integer"
        },
        "securityPolicyId": {
          "type": "string"
        }
      },
      "requiredInputs": [
        "akamaiBotCategoryAction",
        "categoryId",
        "configId",
        "securityPolicyId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering BotmanAkamaiBotCategoryAction resources.\n",
        "properties": {
          "akamaiBotCategoryAction": {
            "type": "string"
          },
          "categoryId": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/botmanBotAnalyticsCookie:BotmanBotAnalyticsCookie": {
      "properties": {
        "botAnalyticsCookie": {
          "type": "string"
        },
        "configId": {
          "type": "integer"
        }
      },
      "required": [
        "botAnalyticsCookie",
        "configId"
      ],
      "inputProperties": {
        "botAnalyticsCookie": {
          "type": "string"
        },
        "configId": {
          "type": "integer"
        }
      },
      "requiredInputs": [
        "botAnalyticsCookie",
        "configId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering BotmanBotAnalyticsCookie resources.\n",
        "properties": {
          "botAnalyticsCookie": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/botmanBotCategoryException:BotmanBotCategoryException": {
      "properties": {
        "botCategoryException": {
          "type": "string"
        },
        "configId": {
          "type": "integer"
        },
        "securityPolicyId": {
          "type": "string"
        }
      },
      "required": [
        "botCategoryException",
        "configId",
        "securityPolicyId"
      ],
      "inputProperties": {
        "botCategoryException": {
          "type": "string"
        },
        "configId": {
          "type": "integer"
        },
        "securityPolicyId": {
          "type": "string"
        }
      },
      "requiredInputs": [
        "botCategoryException",
        "configId",
        "securityPolicyId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering BotmanBotCategoryException resources.\n",
        "properties": {
          "botCategoryException": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/botmanBotDetectionAction:BotmanBotDetectionAction": {
      "properties": {
        "botDetectionAction": {
          "type": "string"
        },
        "configId": {
          "type": "integer"
        },
        "detectionId": {
          "type": "string"
        },
        "securityPolicyId": {
          "type": "string"
        }
      },
      "required": [
        "botDetectionAction",
        "configId",
        "detectionId",
        "securityPolicyId"
      ],
      "inputProperties": {
        "botDetectionAction": {
          "type": "string"
        },
        "configId": {
          "type": "integer"
        },
        "detectionId": {
          "type": "string"
        },
        "securityPolicyId": {
          "type": "string"
        }
      },
      "requiredInputs": [
        "botDetectionAction",
        "configId",
        "detectionId",
        "securityPolicyId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering BotmanBotDetectionAction resources.\n",
        "properties": {
          "botDetectionAction": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "detectionId": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/botmanBotManagementSettings:BotmanBotManagementSettings": {
      "properties": {
        "botManagementSettings": {
          "type": "string"
        },
        "configId": {
          "type": "integer"
        },
        "securityPolicyId": {
          "type": "string"
        }
      },
      "required": [
        "botManagementSettings",
        "configId",
        "securityPolicyId"
      ],
      "inputProperties": {
        "botManagementSettings": {
          "type": "string"
        },
        "configId": {
          "type": "integer"
        },
        "securityPolicyId": {
          "type": "string"
        }
      },
      "requiredInputs": [
        "botManagementSettings",
        "configId",
        "securityPolicyId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering BotmanBotManagementSettings resources.\n",
        "properties": {
          "botManagementSettings": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/botmanChallengeAction:BotmanChallengeAction": {
      "properties": {
        "actionId": {
          "type": "string"
        },
        "challengeAction": {
          "type": "string"
        },
        "configId": {
          "type": "integer"
        }
      },
      "required": [
        "actionId",
        "challengeAction",
        "configId"
      ],
      "inputProperties": {
        "challengeAction": {
          "type": "string"
        },
        "configId": {
          "type": "integer"
        }
      },
      "requiredInputs": [
        "challengeAction",
        "configId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering BotmanChallengeAction resources.\n",
        "properties": {
          "actionId": {
            "type": "string"
          },
          "challengeAction": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/botmanChallengeInjectionRules:BotmanChallengeInjectionRules": {
      "properties": {
        "challengeInjectionRules": {
          "type": "string"
        },
        "configId": {
          "type": "integer"
        }
      },
      "required": [
        "challengeInjectionRules",
        "configId"
      ],
      "inputProperties": {
        "challengeInjectionRules": {
          "type": "string"
        },
        "configId": {
          "type": "integer"
        }
      },
      "requiredInputs": [
        "challengeInjectionRules",
        "configId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering BotmanChallengeInjectionRules resources.\n",
        "properties": {
          "challengeInjectionRules": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/botmanChallengeInterceptionRules:BotmanChallengeInterceptionRules": {
      "properties": {
        "challengeInterceptionRules": {
          "type": "string"
        },
        "configId": {
          "type": "integer"
        }
      },
      "required": [
        "challengeInterceptionRules",
        "configId"
      ],
      "inputProperties": {
        "challengeInterceptionRules": {
          "type": "string"
        },
        "configId": {
          "type": "integer"
        }
      },
      "requiredInputs": [
        "challengeInterceptionRules",
        "configId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering BotmanChallengeInterceptionRules resources.\n",
        "properties": {
          "challengeInterceptionRules": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/botmanClientSideSecurity:BotmanClientSideSecurity": {
      "properties": {
        "clientSideSecurity": {
          "type": "string"
        },
        "configId": {
          "type": "integer"
        }
      },
      "required": [
        "clientSideSecurity",
        "configId"
      ],
      "inputProperties": {
        "clientSideSecurity": {
          "type": "string"
        },
        "configId": {
          "type": "integer"
        }
      },
      "requiredInputs": [
        "clientSideSecurity",
        "configId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering BotmanClientSideSecurity resources.\n",
        "properties": {
          "clientSideSecurity": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/botmanConditionalAction:BotmanConditionalAction": {
      "properties": {
        "actionId": {
          "type": "string"
        },
        "conditionalAction": {
          "type": "string"
        },
        "configId": {
          "type": "integer"
        }
      },
      "required": [
        "actionId",
        "conditionalAction",
        "configId"
      ],
      "inputProperties": {
        "conditionalAction": {
          "type": "string"
        },
        "configId": {
          "type": "integer"
        }
      },
      "requiredInputs": [
        "conditionalAction",
        "configId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering BotmanConditionalAction resources.\n",
        "properties": {
          "actionId": {
            "type": "string"
          },
          "conditionalAction": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/botmanCustomBotCategory:BotmanCustomBotCategory": {
      "properties": {
        "categoryId": {
          "type": "string"
        },
        "configId": {
          "type": "integer"
        },
        "customBotCategory": {
          "type": "string"
        }
      },
      "required": [
        "categoryId",
        "configId",
        "customBotCategory"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer"
        },
        "customBotCategory": {
          "type": "string"
        }
      },
      "requiredInputs": [
        "configId",
        "customBotCategory"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering BotmanCustomBotCategory resources.\n",
        "properties": {
          "categoryId": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "customBotCategory": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/botmanCustomBotCategoryAction:BotmanCustomBotCategoryAction": {
      "properties": {
        "categoryId": {
          "type": "string"
        },
        "configId": {
          "type": "integer"
        },
        "customBotCategoryAction": {
          "type": "string"
        },
        "securityPolicyId": {
          "type": "string"
        }
      },
      "required": [
        "categoryId",
        "configId",
        "customBotCategoryAction",
        "securityPolicyId"
      ],
      "inputProperties": {
        "categoryId": {
          "type": "string"
        },
        "configId": {
          "type": "integer"
        },
        "customBotCategoryAction": {
          "type": "string"
        },
        "securityPolicyId": {
          "type": "string"
        }
      },
      "requiredInputs": [
        "categoryId",
        "configId",
        "customBotCategoryAction",
        "securityPolicyId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering BotmanCustomBotCategoryAction resources.\n",
        "properties": {
          "categoryId": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "customBotCategoryAction": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/botmanCustomBotCategorySequence:BotmanCustomBotCategorySequence": {
      "properties": {
        "categoryIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "configId": {
          "type": "integer"
        }
      },
      "required": [
        "categoryIds",
        "configId"
      ],
      "inputProperties": {
        "categoryIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "configId": {
          "type": "integer"
        }
      },
      "requiredInputs": [
        "categoryIds",
        "configId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering BotmanCustomBotCategorySequence resources.\n",
        "properties": {
          "categoryIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "configId": {
            "type": "integer"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/botmanCustomClient:BotmanCustomClient": {
      "properties": {
        "configId": {
          "type": "integer"
        },
        "customClient": {
          "type": "string"
        },
        "customClientId": {
          "type": "string"
        }
      },
      "required": [
        "configId",
        "customClient",
        "customClientId"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer"
        },
        "customClient": {
          "type": "string"
        }
      },
      "requiredInputs": [
        "configId",
        "customClient"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering BotmanCustomClient resources.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "customClient": {
            "type": "string"
          },
          "customClientId": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/botmanCustomClientSequence:BotmanCustomClientSequence": {
      "properties": {
        "configId": {
          "type": "integer"
        },
        "customClientIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "configId",
        "customClientIds"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer"
        },
        "customClientIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "requiredInputs": [
        "configId",
        "customClientIds"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering BotmanCustomClientSequence resources.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "customClientIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "type": "object"
      }
    },
    "akamai:index/botmanCustomDefinedBot:BotmanCustomDefinedBot": {
      "properties": {
        "botId": {
          "type": "string"
        },
        "configId": {
          "type": "integer"
        },
        "customDefinedBot": {
          "type": "string"
        }
      },
      "required": [
        "botId",
        "configId",
        "customDefinedBot"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer"
        },
        "customDefinedBot": {
          "type": "string"
        }
      },
      "requiredInputs": [
        "configId",
        "customDefinedBot"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering BotmanCustomDefinedBot resources.\n",
        "properties": {
          "botId": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "customDefinedBot": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/botmanCustomDenyAction:BotmanCustomDenyAction": {
      "properties": {
        "actionId": {
          "type": "string"
        },
        "configId": {
          "type": "integer"
        },
        "customDenyAction": {
          "type": "string"
        }
      },
      "required": [
        "actionId",
        "configId",
        "customDenyAction"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer"
        },
        "customDenyAction": {
          "type": "string"
        }
      },
      "requiredInputs": [
        "configId",
        "customDenyAction"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering BotmanCustomDenyAction resources.\n",
        "properties": {
          "actionId": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "customDenyAction": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/botmanJavascriptInjection:BotmanJavascriptInjection": {
      "properties": {
        "configId": {
          "type": "integer"
        },
        "javascriptInjection": {
          "type": "string"
        },
        "securityPolicyId": {
          "type": "string"
        }
      },
      "required": [
        "configId",
        "javascriptInjection",
        "securityPolicyId"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer"
        },
        "javascriptInjection": {
          "type": "string"
        },
        "securityPolicyId": {
          "type": "string"
        }
      },
      "requiredInputs": [
        "configId",
        "javascriptInjection",
        "securityPolicyId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering BotmanJavascriptInjection resources.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "javascriptInjection": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/botmanRecategorizedAkamaiDefinedBot:BotmanRecategorizedAkamaiDefinedBot": {
      "properties": {
        "botId": {
          "type": "string"
        },
        "categoryId": {
          "type": "string"
        },
        "configId": {
          "type": "integer"
        }
      },
      "required": [
        "botId",
        "categoryId",
        "configId"
      ],
      "inputProperties": {
        "botId": {
          "type": "string"
        },
        "categoryId": {
          "type": "string"
        },
        "configId": {
          "type": "integer"
        }
      },
      "requiredInputs": [
        "botId",
        "categoryId",
        "configId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering BotmanRecategorizedAkamaiDefinedBot resources.\n",
        "properties": {
          "botId": {
            "type": "string"
          },
          "categoryId": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/botmanServeAlternateAction:BotmanServeAlternateAction": {
      "properties": {
        "actionId": {
          "type": "string"
        },
        "configId": {
          "type": "integer"
        },
        "serveAlternateAction": {
          "type": "string"
        }
      },
      "required": [
        "actionId",
        "configId",
        "serveAlternateAction"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer"
        },
        "serveAlternateAction": {
          "type": "string"
        }
      },
      "requiredInputs": [
        "configId",
        "serveAlternateAction"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering BotmanServeAlternateAction resources.\n",
        "properties": {
          "actionId": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "serveAlternateAction": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/botmanTransactionalEndpoint:BotmanTransactionalEndpoint": {
      "properties": {
        "configId": {
          "type": "integer"
        },
        "operationId": {
          "type": "string"
        },
        "securityPolicyId": {
          "type": "string"
        },
        "transactionalEndpoint": {
          "type": "string"
        }
      },
      "required": [
        "configId",
        "operationId",
        "securityPolicyId",
        "transactionalEndpoint"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer"
        },
        "operationId": {
          "type": "string"
        },
        "securityPolicyId": {
          "type": "string"
        },
        "transactionalEndpoint": {
          "type": "string"
        }
      },
      "requiredInputs": [
        "configId",
        "operationId",
        "securityPolicyId",
        "transactionalEndpoint"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering BotmanTransactionalEndpoint resources.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "operationId": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          },
          "transactionalEndpoint": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/botmanTransactionalEndpointProtection:BotmanTransactionalEndpointProtection": {
      "properties": {
        "configId": {
          "type": "integer"
        },
        "transactionalEndpointProtection": {
          "type": "string"
        }
      },
      "required": [
        "configId",
        "transactionalEndpointProtection"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer"
        },
        "transactionalEndpointProtection": {
          "type": "string"
        }
      },
      "requiredInputs": [
        "configId",
        "transactionalEndpointProtection"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering BotmanTransactionalEndpointProtection resources.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "transactionalEndpointProtection": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/clientlistActivation:ClientlistActivation": {
      "properties": {
        "comments": {
          "type": "string",
          "description": "A brief description for the activation.\n"
        },
        "listId": {
          "type": "string",
          "description": "The client list unique identifier.\n"
        },
        "network": {
          "type": "string",
          "description": "The network environment where you activate your client list: either STAGING or PRODUCTION.\n"
        },
        "notificationRecipients": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Users to notify via email.\n"
        },
        "siebelTicketId": {
          "type": "string",
          "description": "Identifies the Siebel ticket, if the activation is linked to one.\n"
        },
        "status": {
          "type": "string",
          "description": "The current activation status, either ACTIVE, INACTIVE, MODIFIED, PENDING_ACTIVATION, PENDING_DEACTIVATION, or FAILED.\n"
        },
        "version": {
          "type": "integer",
          "description": "The client list version.\n"
        }
      },
      "required": [
        "listId",
        "network",
        "status",
        "version"
      ],
      "inputProperties": {
        "comments": {
          "type": "string",
          "description": "A brief description for the activation.\n"
        },
        "listId": {
          "type": "string",
          "description": "The client list unique identifier.\n"
        },
        "network": {
          "type": "string",
          "description": "The network environment where you activate your client list: either STAGING or PRODUCTION.\n"
        },
        "notificationRecipients": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Users to notify via email.\n"
        },
        "siebelTicketId": {
          "type": "string",
          "description": "Identifies the Siebel ticket, if the activation is linked to one.\n"
        },
        "version": {
          "type": "integer",
          "description": "The client list version.\n"
        }
      },
      "requiredInputs": [
        "listId",
        "network",
        "version"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering ClientlistActivation resources.\n",
        "properties": {
          "comments": {
            "type": "string",
            "description": "A brief description for the activation.\n"
          },
          "listId": {
            "type": "string",
            "description": "The client list unique identifier.\n"
          },
          "network": {
            "type": "string",
            "description": "The network environment where you activate your client list: either STAGING or PRODUCTION.\n"
          },
          "notificationRecipients": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Users to notify via email.\n"
          },
          "siebelTicketId": {
            "type": "string",
            "description": "Identifies the Siebel ticket, if the activation is linked to one.\n"
          },
          "status": {
            "type": "string",
            "description": "The current activation status, either ACTIVE, INACTIVE, MODIFIED, PENDING_ACTIVATION, PENDING_DEACTIVATION, or FAILED.\n"
          },
          "version": {
            "type": "integer",
            "description": "The client list version.\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/clientlistList:ClientlistList": {
      "properties": {
        "contractId": {
          "type": "string",
          "description": "Contract ID for which client list is assigned.\n"
        },
        "groupId": {
          "type": "integer",
          "description": "Group ID for which client list is assigned.\n"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/ClientlistListItem:ClientlistListItem"
          },
          "description": "Set of items containing item information.\n"
        },
        "itemsCount": {
          "type": "integer",
          "description": "The number of items that a client list contains.\n"
        },
        "listId": {
          "type": "string",
          "description": "The ID of the client list.\n"
        },
        "name": {
          "type": "string",
          "description": "The name of the client list.\n"
        },
        "notes": {
          "type": "string",
          "description": "The client list notes.\n"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The client list tags.\n"
        },
        "type": {
          "type": "string",
          "description": "The type of the client list. Valid types: [IP GEO ASN TLS_FINGERPRINT FILE_HASH]\n"
        },
        "version": {
          "type": "integer",
          "description": "The current version of the client list.\n"
        }
      },
      "required": [
        "contractId",
        "groupId",
        "itemsCount",
        "listId",
        "name",
        "type",
        "version"
      ],
      "inputProperties": {
        "contractId": {
          "type": "string",
          "description": "Contract ID for which client list is assigned.\n",
          "willReplaceOnChanges": true
        },
        "groupId": {
          "type": "integer",
          "description": "Group ID for which client list is assigned.\n",
          "willReplaceOnChanges": true
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/ClientlistListItem:ClientlistListItem"
          },
          "description": "Set of items containing item information.\n"
        },
        "name": {
          "type": "string",
          "description": "The name of the client list.\n"
        },
        "notes": {
          "type": "string",
          "description": "The client list notes.\n"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The client list tags.\n"
        },
        "type": {
          "type": "string",
          "description": "The type of the client list. Valid types: [IP GEO ASN TLS_FINGERPRINT FILE_HASH]\n",
          "willReplaceOnChanges": true
        }
      },
      "requiredInputs": [
        "contractId",
        "groupId",
        "type"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering ClientlistList resources.\n",
        "properties": {
          "contractId": {
            "type": "string",
            "description": "Contract ID for which client list is assigned.\n",
            "willReplaceOnChanges": true
          },
          "groupId": {
            "type": "integer",
            "description": "Group ID for which client list is assigned.\n",
            "willReplaceOnChanges": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/ClientlistListItem:ClientlistListItem"
            },
            "description": "Set of items containing item information.\n"
          },
          "itemsCount": {
            "type": "integer",
            "description": "The number of items that a client list contains.\n"
          },
          "listId": {
            "type": "string",
            "description": "The ID of the client list.\n"
          },
          "name": {
            "type": "string",
            "description": "The name of the client list.\n"
          },
          "notes": {
            "type": "string",
            "description": "The client list notes.\n"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The client list tags.\n"
          },
          "type": {
            "type": "string",
            "description": "The type of the client list. Valid types: [IP GEO ASN TLS_FINGERPRINT FILE_HASH]\n",
            "willReplaceOnChanges": true
          },
          "version": {
            "type": "integer",
            "description": "The current version of the client list.\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/cloudletsApplicationLoadBalancer:CloudletsApplicationLoadBalancer": {
      "properties": {
        "balancingType": {
          "type": "string",
          "description": "The type of load balancing being performed. Options include WEIGHTED and PERFORMANCE\n"
        },
        "dataCenters": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/CloudletsApplicationLoadBalancerDataCenter:CloudletsApplicationLoadBalancerDataCenter"
          },
          "description": "The object containing information on conditional origins being used as data centers for an Application Load Balancer\nimplementation. Only Conditional Origins with an originType of CUSTOMER or NETSTORAGE can be used as data centers in an\napplication load balancer configuration.\n"
        },
        "description": {
          "type": "string",
          "description": "The load balancer configuration description\n"
        },
        "livenessSettings": {
          "$ref": "#/types/akamai:index/CloudletsApplicationLoadBalancerLivenessSettings:CloudletsApplicationLoadBalancerLivenessSettings"
        },
        "originId": {
          "type": "string",
          "description": "The conditional origin’s unique identifier\n"
        },
        "version": {
          "type": "integer",
          "description": "The load balancer configuration version\n"
        },
        "warnings": {
          "type": "string",
          "description": "Describes warnings during activation of load balancer configuration\n"
        }
      },
      "required": [
        "dataCenters",
        "originId",
        "version",
        "warnings"
      ],
      "inputProperties": {
        "balancingType": {
          "type": "string",
          "description": "The type of load balancing being performed. Options include WEIGHTED and PERFORMANCE\n"
        },
        "dataCenters": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/CloudletsApplicationLoadBalancerDataCenter:CloudletsApplicationLoadBalancerDataCenter"
          },
          "description": "The object containing information on conditional origins being used as data centers for an Application Load Balancer\nimplementation. Only Conditional Origins with an originType of CUSTOMER or NETSTORAGE can be used as data centers in an\napplication load balancer configuration.\n"
        },
        "description": {
          "type": "string",
          "description": "The load balancer configuration description\n"
        },
        "livenessSettings": {
          "$ref": "#/types/akamai:index/CloudletsApplicationLoadBalancerLivenessSettings:CloudletsApplicationLoadBalancerLivenessSettings"
        },
        "originId": {
          "type": "string",
          "description": "The conditional origin’s unique identifier\n",
          "willReplaceOnChanges": true
        }
      },
      "requiredInputs": [
        "dataCenters",
        "originId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering CloudletsApplicationLoadBalancer resources.\n",
        "properties": {
          "balancingType": {
            "type": "string",
            "description": "The type of load balancing being performed. Options include WEIGHTED and PERFORMANCE\n"
          },
          "dataCenters": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/CloudletsApplicationLoadBalancerDataCenter:CloudletsApplicationLoadBalancerDataCenter"
            },
            "description": "The object containing information on conditional origins being used as data centers for an Application Load Balancer\nimplementation. Only Conditional Origins with an originType of CUSTOMER or NETSTORAGE can be used as data centers in an\napplication load balancer configuration.\n"
          },
          "description": {
            "type": "string",
            "description": "The load balancer configuration description\n"
          },
          "livenessSettings": {
            "$ref": "#/types/akamai:index/CloudletsApplicationLoadBalancerLivenessSettings:CloudletsApplicationLoadBalancerLivenessSettings"
          },
          "originId": {
            "type": "string",
            "description": "The conditional origin’s unique identifier\n",
            "willReplaceOnChanges": true
          },
          "version": {
            "type": "integer",
            "description": "The load balancer configuration version\n"
          },
          "warnings": {
            "type": "string",
            "description": "Describes warnings during activation of load balancer configuration\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/cloudletsApplicationLoadBalancerActivation:CloudletsApplicationLoadBalancerActivation": {
      "properties": {
        "network": {
          "type": "string",
          "description": "The network you want to activate the application load balancer version on (options are Staging and Production)\n"
        },
        "originId": {
          "type": "string",
          "description": "The conditional origin’s unique identifier\n"
        },
        "status": {
          "type": "string",
          "description": "Activation status for this application load balancer\n"
        },
        "version": {
          "type": "integer",
          "description": "Cloudlets application load balancer version you want to activate\n"
        }
      },
      "required": [
        "network",
        "originId",
        "status",
        "version"
      ],
      "inputProperties": {
        "network": {
          "type": "string",
          "description": "The network you want to activate the application load balancer version on (options are Staging and Production)\n"
        },
        "originId": {
          "type": "string",
          "description": "The conditional origin’s unique identifier\n",
          "willReplaceOnChanges": true
        },
        "version": {
          "type": "integer",
          "description": "Cloudlets application load balancer version you want to activate\n"
        }
      },
      "requiredInputs": [
        "network",
        "originId",
        "version"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering CloudletsApplicationLoadBalancerActivation resources.\n",
        "properties": {
          "network": {
            "type": "string",
            "description": "The network you want to activate the application load balancer version on (options are Staging and Production)\n"
          },
          "originId": {
            "type": "string",
            "description": "The conditional origin’s unique identifier\n",
            "willReplaceOnChanges": true
          },
          "status": {
            "type": "string",
            "description": "Activation status for this application load balancer\n"
          },
          "version": {
            "type": "integer",
            "description": "Cloudlets application load balancer version you want to activate\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/cloudletsPolicy:CloudletsPolicy": {
      "properties": {
        "cloudletCode": {
          "type": "string",
          "description": "Code for the type of Cloudlet (ALB, AP, AS, CD, ER, FR, IG, or VP)\n"
        },
        "cloudletId": {
          "type": "integer",
          "description": "An integer that corresponds to a Cloudlets policy type (0 or 9)\n"
        },
        "description": {
          "type": "string",
          "description": "The description of this specific policy\n"
        },
        "groupId": {
          "type": "string",
          "description": "Defines the group association for the policy. You must have edit privileges for the group\n"
        },
        "matchRuleFormat": {
          "type": "string",
          "description": "The version of the Cloudlet specific matchRules\n"
        },
        "matchRules": {
          "type": "string",
          "description": "A JSON structure that defines the rules for this policy\n"
        },
        "name": {
          "type": "string",
          "description": "The name of the policy. The name must be unique\n"
        },
        "version": {
          "type": "integer",
          "description": "The version number of the policy\n"
        },
        "warnings": {
          "type": "string",
          "description": "A JSON encoded list of warnings\n"
        }
      },
      "required": [
        "cloudletCode",
        "cloudletId",
        "groupId",
        "name",
        "version",
        "warnings"
      ],
      "inputProperties": {
        "cloudletCode": {
          "type": "string",
          "description": "Code for the type of Cloudlet (ALB, AP, AS, CD, ER, FR, IG, or VP)\n"
        },
        "description": {
          "type": "string",
          "description": "The description of this specific policy\n"
        },
        "groupId": {
          "type": "string",
          "description": "Defines the group association for the policy. You must have edit privileges for the group\n"
        },
        "matchRuleFormat": {
          "type": "string",
          "description": "The version of the Cloudlet specific matchRules\n"
        },
        "matchRules": {
          "type": "string",
          "description": "A JSON structure that defines the rules for this policy\n"
        },
        "name": {
          "type": "string",
          "description": "The name of the policy. The name must be unique\n"
        }
      },
      "requiredInputs": [
        "cloudletCode",
        "groupId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering CloudletsPolicy resources.\n",
        "properties": {
          "cloudletCode": {
            "type": "string",
            "description": "Code for the type of Cloudlet (ALB, AP, AS, CD, ER, FR, IG, or VP)\n"
          },
          "cloudletId": {
            "type": "integer",
            "description": "An integer that corresponds to a Cloudlets policy type (0 or 9)\n"
          },
          "description": {
            "type": "string",
            "description": "The description of this specific policy\n"
          },
          "groupId": {
            "type": "string",
            "description": "Defines the group association for the policy. You must have edit privileges for the group\n"
          },
          "matchRuleFormat": {
            "type": "string",
            "description": "The version of the Cloudlet specific matchRules\n"
          },
          "matchRules": {
            "type": "string",
            "description": "A JSON structure that defines the rules for this policy\n"
          },
          "name": {
            "type": "string",
            "description": "The name of the policy. The name must be unique\n"
          },
          "version": {
            "type": "integer",
            "description": "The version number of the policy\n"
          },
          "warnings": {
            "type": "string",
            "description": "A JSON encoded list of warnings\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/cloudletsPolicyActivation:CloudletsPolicyActivation": {
      "properties": {
        "associatedProperties": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Set of property IDs to link to this Cloudlets policy\n"
        },
        "network": {
          "type": "string",
          "description": "The network you want to activate the policy version on (options are Staging and Production)\n"
        },
        "policyId": {
          "type": "integer",
          "description": "ID of the Cloudlets policy you want to activate\n"
        },
        "status": {
          "type": "string",
          "description": "Activation status for this Cloudlets policy\n"
        },
        "version": {
          "type": "integer",
          "description": "Cloudlets policy version you want to activate\n"
        }
      },
      "required": [
        "associatedProperties",
        "network",
        "policyId",
        "status",
        "version"
      ],
      "inputProperties": {
        "associatedProperties": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Set of property IDs to link to this Cloudlets policy\n"
        },
        "network": {
          "type": "string",
          "description": "The network you want to activate the policy version on (options are Staging and Production)\n"
        },
        "policyId": {
          "type": "integer",
          "description": "ID of the Cloudlets policy you want to activate\n",
          "willReplaceOnChanges": true
        },
        "version": {
          "type": "integer",
          "description": "Cloudlets policy version you want to activate\n"
        }
      },
      "requiredInputs": [
        "associatedProperties",
        "network",
        "policyId",
        "version"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering CloudletsPolicyActivation resources.\n",
        "properties": {
          "associatedProperties": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Set of property IDs to link to this Cloudlets policy\n"
          },
          "network": {
            "type": "string",
            "description": "The network you want to activate the policy version on (options are Staging and Production)\n"
          },
          "policyId": {
            "type": "integer",
            "description": "ID of the Cloudlets policy you want to activate\n",
            "willReplaceOnChanges": true
          },
          "status": {
            "type": "string",
            "description": "Activation status for this Cloudlets policy\n"
          },
          "version": {
            "type": "integer",
            "description": "Cloudlets policy version you want to activate\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/cloudwrapperActivation:CloudwrapperActivation": {
      "properties": {
        "configId": {
          "type": "integer",
          "description": "The configuration you want to activate.\n"
        },
        "revision": {
          "type": "string",
          "description": "Unique hash value of the configuration.\n"
        },
        "timeouts": {
          "$ref": "#/types/akamai:index/CloudwrapperActivationTimeouts:CloudwrapperActivationTimeouts"
        }
      },
      "required": [
        "configId",
        "revision"
      ],
      "inputProperties": {
        "configId": {
          "type": "integer",
          "description": "The configuration you want to activate.\n"
        },
        "revision": {
          "type": "string",
          "description": "Unique hash value of the configuration.\n"
        },
        "timeouts": {
          "$ref": "#/types/akamai:index/CloudwrapperActivationTimeouts:CloudwrapperActivationTimeouts"
        }
      },
      "requiredInputs": [
        "configId",
        "revision"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering CloudwrapperActivation resources.\n",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "The configuration you want to activate.\n"
          },
          "revision": {
            "type": "string",
            "description": "Unique hash value of the configuration.\n"
          },
          "timeouts": {
            "$ref": "#/types/akamai:index/CloudwrapperActivationTimeouts:CloudwrapperActivationTimeouts"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/cloudwrapperConfiguration:CloudwrapperConfiguration": {
      "properties": {
        "capacityAlertsThreshold": {
          "type": "integer",
          "description": "Capacity Alerts enablement information for the configuration. The Alert Threshold should be between 50 and 100.\n"
        },
        "comments": {
          "type": "string",
          "description": "Additional information you provide to differentiate or track changes of the configuration.\n"
        },
        "configName": {
          "type": "string",
          "description": "Name of the configuration.\n"
        },
        "contractId": {
          "type": "string",
          "description": "Contract ID having Cloud Wrapper entitlement.\n"
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/CloudwrapperConfigurationLocation:CloudwrapperConfigurationLocation"
          },
          "description": "List of locations to use with the configuration.\n"
        },
        "notificationEmails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Email addresses to use for notifications.\n"
        },
        "propertyIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of properties belonging to eligible products.\n"
        },
        "retainIdleObjects": {
          "type": "boolean",
          "description": "Retain idle objects beyond their max idle lifetime.\n"
        },
        "revision": {
          "type": "string",
          "description": "Unique hash value of the configuration.\n"
        },
        "timeouts": {
          "$ref": "#/types/akamai:index/CloudwrapperConfigurationTimeouts:CloudwrapperConfigurationTimeouts"
        }
      },
      "required": [
        "comments",
        "configName",
        "contractId",
        "notificationEmails",
        "propertyIds",
        "retainIdleObjects",
        "revision"
      ],
      "inputProperties": {
        "capacityAlertsThreshold": {
          "type": "integer",
          "description": "Capacity Alerts enablement information for the configuration. The Alert Threshold should be between 50 and 100.\n"
        },
        "comments": {
          "type": "string",
          "description": "Additional information you provide to differentiate or track changes of the configuration.\n"
        },
        "configName": {
          "type": "string",
          "description": "Name of the configuration.\n"
        },
        "contractId": {
          "type": "string",
          "description": "Contract ID having Cloud Wrapper entitlement.\n"
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/CloudwrapperConfigurationLocation:CloudwrapperConfigurationLocation"
          },
          "description": "List of locations to use with the configuration.\n"
        },
        "notificationEmails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Email addresses to use for notifications.\n"
        },
        "propertyIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of properties belonging to eligible products.\n"
        },
        "retainIdleObjects": {
          "type": "boolean",
          "description": "Retain idle objects beyond their max idle lifetime.\n"
        },
        "timeouts": {
          "$ref": "#/types/akamai:index/CloudwrapperConfigurationTimeouts:CloudwrapperConfigurationTimeouts"
        }
      },
      "requiredInputs": [
        "comments",
        "configName",
        "contractId",
        "propertyIds"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering CloudwrapperConfiguration resources.\n",
        "properties": {
          "capacityAlertsThreshold": {
            "type": "integer",
            "description": "Capacity Alerts enablement information for the configuration. The Alert Threshold should be between 50 and 100.\n"
          },
          "comments": {
            "type": "string",
            "description": "Additional information you provide to differentiate or track changes of the configuration.\n"
          },
          "configName": {
            "type": "string",
            "description": "Name of the configuration.\n"
          },
          "contractId": {
            "type": "string",
            "description": "Contract ID having Cloud Wrapper entitlement.\n"
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/CloudwrapperConfigurationLocation:CloudwrapperConfigurationLocation"
            },
            "description": "List of locations to use with the configuration.\n"
          },
          "notificationEmails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Email addresses to use for notifications.\n"
          },
          "propertyIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of properties belonging to eligible products.\n"
          },
          "retainIdleObjects": {
            "type": "boolean",
            "description": "Retain idle objects beyond their max idle lifetime.\n"
          },
          "revision": {
            "type": "string",
            "description": "Unique hash value of the configuration.\n"
          },
          "timeouts": {
            "$ref": "#/types/akamai:index/CloudwrapperConfigurationTimeouts:CloudwrapperConfigurationTimeouts"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/cpCode:CpCode": {
      "properties": {
        "contractId": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        }
      },
      "required": [
        "contractId",
        "groupId",
        "name",
        "productId"
      ],
      "inputProperties": {
        "contractId": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        }
      },
      "requiredInputs": [
        "contractId",
        "groupId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering CpCode resources.\n",
        "properties": {
          "contractId": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "aliases": [
        {
          "type": "akamai:properties/cpCode:CpCode"
        }
      ]
    },
    "akamai:index/cpsDvEnrollment:CpsDvEnrollment": {
      "properties": {
        "acknowledgePreVerificationWarnings": {
          "type": "boolean",
          "description": "Whether acknowledge warnings before certificate verification\n"
        },
        "adminContact": {
          "$ref": "#/types/akamai:index/CpsDvEnrollmentAdminContact:CpsDvEnrollmentAdminContact",
          "description": "Contact information for the certificate administrator to use at organization\n"
        },
        "allowDuplicateCommonName": {
          "type": "boolean",
          "description": "Allow to duplicate common name\n"
        },
        "certificateChainType": {
          "type": "string",
          "description": "Certificate trust chain type\n"
        },
        "certificateType": {
          "type": "string",
          "description": "Certificate type of enrollment\n"
        },
        "commonName": {
          "type": "string",
          "description": "Common name used for enrollment\n"
        },
        "contractId": {
          "type": "string",
          "description": "Contract ID for which enrollment is retrieved\n"
        },
        "csr": {
          "$ref": "#/types/akamai:index/CpsDvEnrollmentCsr:CpsDvEnrollmentCsr",
          "description": "Certificate signing request generated during enrollment creation\n"
        },
        "dnsChallenges": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/CpsDvEnrollmentDnsChallenge:CpsDvEnrollmentDnsChallenge"
          },
          "description": "DNS challenge information\n"
        },
        "httpChallenges": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/CpsDvEnrollmentHttpChallenge:CpsDvEnrollmentHttpChallenge"
          },
          "description": "HTTP challenge information\n"
        },
        "networkConfiguration": {
          "$ref": "#/types/akamai:index/CpsDvEnrollmentNetworkConfiguration:CpsDvEnrollmentNetworkConfiguration",
          "description": "Settings containing network information and TLS Metadata used by CPS\n"
        },
        "organization": {
          "$ref": "#/types/akamai:index/CpsDvEnrollmentOrganization:CpsDvEnrollmentOrganization",
          "description": "Organization information\n"
        },
        "registrationAuthority": {
          "type": "string",
          "description": "The registration authority or certificate authority (CA) used to obtain a certificate\n"
        },
        "sans": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of SANs\n"
        },
        "secureNetwork": {
          "type": "string",
          "description": "Type of TLS deployment network\n"
        },
        "signatureAlgorithm": {
          "type": "string",
          "description": "SHA algorithm type\n"
        },
        "sniOnly": {
          "type": "boolean",
          "description": "Whether Server Name Indication is used for enrollment\n"
        },
        "techContact": {
          "$ref": "#/types/akamai:index/CpsDvEnrollmentTechContact:CpsDvEnrollmentTechContact",
          "description": "Contact information for an administrator at Akamai\n"
        },
        "validationType": {
          "type": "string",
          "description": "Enrolment validation type\n"
        }
      },
      "required": [
        "adminContact",
        "certificateType",
        "commonName",
        "contractId",
        "csr",
        "dnsChallenges",
        "httpChallenges",
        "networkConfiguration",
        "organization",
        "registrationAuthority",
        "secureNetwork",
        "signatureAlgorithm",
        "sniOnly",
        "techContact",
        "validationType"
      ],
      "inputProperties": {
        "acknowledgePreVerificationWarnings": {
          "type": "boolean",
          "description": "Whether acknowledge warnings before certificate verification\n"
        },
        "adminContact": {
          "$ref": "#/types/akamai:index/CpsDvEnrollmentAdminContact:CpsDvEnrollmentAdminContact",
          "description": "Contact information for the certificate administrator to use at organization\n"
        },
        "allowDuplicateCommonName": {
          "type": "boolean",
          "description": "Allow to duplicate common name\n"
        },
        "certificateChainType": {
          "type": "string",
          "description": "Certificate trust chain type\n"
        },
        "commonName": {
          "type": "string",
          "description": "Common name used for enrollment\n",
          "willReplaceOnChanges": true
        },
        "contractId": {
          "type": "string",
          "description": "Contract ID for which enrollment is retrieved\n",
          "willReplaceOnChanges": true
        },
        "csr": {
          "$ref": "#/types/akamai:index/CpsDvEnrollmentCsr:CpsDvEnrollmentCsr",
          "description": "Certificate signing request generated during enrollment creation\n"
        },
        "networkConfiguration": {
          "$ref": "#/types/akamai:index/CpsDvEnrollmentNetworkConfiguration:CpsDvEnrollmentNetworkConfiguration",
          "description": "Settings containing network information and TLS Metadata used by CPS\n"
        },
        "organization": {
          "$ref": "#/types/akamai:index/CpsDvEnrollmentOrganization:CpsDvEnrollmentOrganization",
          "description": "Organization information\n"
        },
        "sans": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of SANs\n"
        },
        "secureNetwork": {
          "type": "string",
          "description": "Type of TLS deployment network\n",
          "willReplaceOnChanges": true
        },
        "signatureAlgorithm": {
          "type": "string",
          "description": "SHA algorithm type\n"
        },
        "sniOnly": {
          "type": "boolean",
          "description": "Whether Server Name Indication is used for enrollment\n",
          "willReplaceOnChanges": true
        },
        "techContact": {
          "$ref": "#/types/akamai:index/CpsDvEnrollmentTechContact:CpsDvEnrollmentTechContact",
          "description": "Contact information for an administrator at Akamai\n"
        }
      },
      "requiredInputs": [
        "adminContact",
        "commonName",
        "contractId",
        "csr",
        "networkConfiguration",
        "organization",
        "secureNetwork",
        "signatureAlgorithm",
        "sniOnly",
        "techContact"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering CpsDvEnrollment resources.\n",
        "properties": {
          "acknowledgePreVerificationWarnings": {
            "type": "boolean",
            "description": "Whether acknowledge warnings before certificate verification\n"
          },
          "adminContact": {
            "$ref": "#/types/akamai:index/CpsDvEnrollmentAdminContact:CpsDvEnrollmentAdminContact",
            "description": "Contact information for the certificate administrator to use at organization\n"
          },
          "allowDuplicateCommonName": {
            "type": "boolean",
            "description": "Allow to duplicate common name\n"
          },
          "certificateChainType": {
            "type": "string",
            "description": "Certificate trust chain type\n"
          },
          "certificateType": {
            "type": "string",
            "description": "Certificate type of enrollment\n"
          },
          "commonName": {
            "type": "string",
            "description": "Common name used for enrollment\n",
            "willReplaceOnChanges": true
          },
          "contractId": {
            "type": "string",
            "description": "Contract ID for which enrollment is retrieved\n",
            "willReplaceOnChanges": true
          },
          "csr": {
            "$ref": "#/types/akamai:index/CpsDvEnrollmentCsr:CpsDvEnrollmentCsr",
            "description": "Certificate signing request generated during enrollment creation\n"
          },
          "dnsChallenges": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/CpsDvEnrollmentDnsChallenge:CpsDvEnrollmentDnsChallenge"
            },
            "description": "DNS challenge information\n"
          },
          "httpChallenges": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/CpsDvEnrollmentHttpChallenge:CpsDvEnrollmentHttpChallenge"
            },
            "description": "HTTP challenge information\n"
          },
          "networkConfiguration": {
            "$ref": "#/types/akamai:index/CpsDvEnrollmentNetworkConfiguration:CpsDvEnrollmentNetworkConfiguration",
            "description": "Settings containing network information and TLS Metadata used by CPS\n"
          },
          "organization": {
            "$ref": "#/types/akamai:index/CpsDvEnrollmentOrganization:CpsDvEnrollmentOrganization",
            "description": "Organization information\n"
          },
          "registrationAuthority": {
            "type": "string",
            "description": "The registration authority or certificate authority (CA) used to obtain a certificate\n"
          },
          "sans": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of SANs\n"
          },
          "secureNetwork": {
            "type": "string",
            "description": "Type of TLS deployment network\n",
            "willReplaceOnChanges": true
          },
          "signatureAlgorithm": {
            "type": "string",
            "description": "SHA algorithm type\n"
          },
          "sniOnly": {
            "type": "boolean",
            "description": "Whether Server Name Indication is used for enrollment\n",
            "willReplaceOnChanges": true
          },
          "techContact": {
            "$ref": "#/types/akamai:index/CpsDvEnrollmentTechContact:CpsDvEnrollmentTechContact",
            "description": "Contact information for an administrator at Akamai\n"
          },
          "validationType": {
            "type": "string",
            "description": "Enrolment validation type\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/cpsDvValidation:CpsDvValidation": {
      "properties": {
        "enrollmentId": {
          "type": "integer",
          "description": "The unique identifier of enrollment\n"
        },
        "sans": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of SANs\n"
        },
        "status": {
          "type": "string",
          "description": "Status of validation\n"
        }
      },
      "required": [
        "enrollmentId",
        "status"
      ],
      "inputProperties": {
        "enrollmentId": {
          "type": "integer",
          "description": "The unique identifier of enrollment\n",
          "willReplaceOnChanges": true
        },
        "sans": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of SANs\n",
          "willReplaceOnChanges": true
        }
      },
      "requiredInputs": [
        "enrollmentId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering CpsDvValidation resources.\n",
        "properties": {
          "enrollmentId": {
            "type": "integer",
            "description": "The unique identifier of enrollment\n",
            "willReplaceOnChanges": true
          },
          "sans": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of SANs\n",
            "willReplaceOnChanges": true
          },
          "status": {
            "type": "string",
            "description": "Status of validation\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/cpsThirdPartyEnrollment:CpsThirdPartyEnrollment": {
      "properties": {
        "acknowledgePreVerificationWarnings": {
          "type": "boolean",
          "description": "Whether acknowledge warnings before certificate verification\n"
        },
        "adminContact": {
          "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentAdminContact:CpsThirdPartyEnrollmentAdminContact",
          "description": "Contact information for the certificate administrator to use at organization\n"
        },
        "allowDuplicateCommonName": {
          "type": "boolean",
          "description": "Allow to duplicate common name\n"
        },
        "autoApproveWarnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of warnings to be automatically approved\n"
        },
        "certificateChainType": {
          "type": "string",
          "description": "Certificate trust chain type\n"
        },
        "changeManagement": {
          "type": "boolean",
          "description": "When set to false, the certificate will be deployed to both staging and production networks\n"
        },
        "commonName": {
          "type": "string",
          "description": "Common name used for enrollment\n"
        },
        "contractId": {
          "type": "string",
          "description": "Contract ID for which enrollment is retrieved\n"
        },
        "csr": {
          "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentCsr:CpsThirdPartyEnrollmentCsr",
          "description": "Data used for generation of Certificate Signing Request\n"
        },
        "excludeSans": {
          "type": "boolean",
          "description": "When true, SANs are excluded from the CSR\n"
        },
        "networkConfiguration": {
          "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentNetworkConfiguration:CpsThirdPartyEnrollmentNetworkConfiguration",
          "description": "Settings containing network information and TLS metadata used by CPS\n"
        },
        "organization": {
          "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentOrganization:CpsThirdPartyEnrollmentOrganization",
          "description": "Organization information\n"
        },
        "sans": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of SANs\n"
        },
        "secureNetwork": {
          "type": "string",
          "description": "Type of TLS deployment network\n"
        },
        "signatureAlgorithm": {
          "type": "string",
          "description": "The SHA function. Changing this value may require running terraform destroy, terraform apply\n"
        },
        "sniOnly": {
          "type": "boolean",
          "description": "Whether Server Name Indication is used for enrollment\n"
        },
        "techContact": {
          "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentTechContact:CpsThirdPartyEnrollmentTechContact",
          "description": "Contact information for an administrator at Akamai\n"
        }
      },
      "required": [
        "adminContact",
        "commonName",
        "contractId",
        "csr",
        "networkConfiguration",
        "organization",
        "secureNetwork",
        "sniOnly",
        "techContact"
      ],
      "inputProperties": {
        "acknowledgePreVerificationWarnings": {
          "type": "boolean",
          "description": "Whether acknowledge warnings before certificate verification\n"
        },
        "adminContact": {
          "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentAdminContact:CpsThirdPartyEnrollmentAdminContact",
          "description": "Contact information for the certificate administrator to use at organization\n"
        },
        "allowDuplicateCommonName": {
          "type": "boolean",
          "description": "Allow to duplicate common name\n"
        },
        "autoApproveWarnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of warnings to be automatically approved\n"
        },
        "certificateChainType": {
          "type": "string",
          "description": "Certificate trust chain type\n"
        },
        "changeManagement": {
          "type": "boolean",
          "description": "When set to false, the certificate will be deployed to both staging and production networks\n"
        },
        "commonName": {
          "type": "string",
          "description": "Common name used for enrollment\n",
          "willReplaceOnChanges": true
        },
        "contractId": {
          "type": "string",
          "description": "Contract ID for which enrollment is retrieved\n",
          "willReplaceOnChanges": true
        },
        "csr": {
          "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentCsr:CpsThirdPartyEnrollmentCsr",
          "description": "Data used for generation of Certificate Signing Request\n"
        },
        "excludeSans": {
          "type": "boolean",
          "description": "When true, SANs are excluded from the CSR\n"
        },
        "networkConfiguration": {
          "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentNetworkConfiguration:CpsThirdPartyEnrollmentNetworkConfiguration",
          "description": "Settings containing network information and TLS metadata used by CPS\n"
        },
        "organization": {
          "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentOrganization:CpsThirdPartyEnrollmentOrganization",
          "description": "Organization information\n"
        },
        "sans": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of SANs\n"
        },
        "secureNetwork": {
          "type": "string",
          "description": "Type of TLS deployment network\n",
          "willReplaceOnChanges": true
        },
        "signatureAlgorithm": {
          "type": "string",
          "description": "The SHA function. Changing this value may require running terraform destroy, terraform apply\n"
        },
        "sniOnly": {
          "type": "boolean",
          "description": "Whether Server Name Indication is used for enrollment\n",
          "willReplaceOnChanges": true
        },
        "techContact": {
          "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentTechContact:CpsThirdPartyEnrollmentTechContact",
          "description": "Contact information for an administrator at Akamai\n"
        }
      },
      "requiredInputs": [
        "adminContact",
        "commonName",
        "contractId",
        "csr",
        "networkConfiguration",
        "organization",
        "secureNetwork",
        "sniOnly",
        "techContact"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering CpsThirdPartyEnrollment resources.\n",
        "properties": {
          "acknowledgePreVerificationWarnings": {
            "type": "boolean",
            "description": "Whether acknowledge warnings before certificate verification\n"
          },
          "adminContact": {
            "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentAdminContact:CpsThirdPartyEnrollmentAdminContact",
            "description": "Contact information for the certificate administrator to use at organization\n"
          },
          "allowDuplicateCommonName": {
            "type": "boolean",
            "description": "Allow to duplicate common name\n"
          },
          "autoApproveWarnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of warnings to be automatically approved\n"
          },
          "certificateChainType": {
            "type": "string",
            "description": "Certificate trust chain type\n"
          },
          "changeManagement": {
            "type": "boolean",
            "description": "When set to false, the certificate will be deployed to both staging and production networks\n"
          },
          "commonName": {
            "type": "string",
            "description": "Common name used for enrollment\n",
            "willReplaceOnChanges": true
          },
          "contractId": {
            "type": "string",
            "description": "Contract ID for which enrollment is retrieved\n",
            "willReplaceOnChanges": true
          },
          "csr": {
            "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentCsr:CpsThirdPartyEnrollmentCsr",
            "description": "Data used for generation of Certificate Signing Request\n"
          },
          "excludeSans": {
            "type": "boolean",
            "description": "When true, SANs are excluded from the CSR\n"
          },
          "networkConfiguration": {
            "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentNetworkConfiguration:CpsThirdPartyEnrollmentNetworkConfiguration",
            "description": "Settings containing network information and TLS metadata used by CPS\n"
          },
          "organization": {
            "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentOrganization:CpsThirdPartyEnrollmentOrganization",
            "description": "Organization information\n"
          },
          "sans": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of SANs\n"
          },
          "secureNetwork": {
            "type": "string",
            "description": "Type of TLS deployment network\n",
            "willReplaceOnChanges": true
          },
          "signatureAlgorithm": {
            "type": "string",
            "description": "The SHA function. Changing this value may require running terraform destroy, terraform apply\n"
          },
          "sniOnly": {
            "type": "boolean",
            "description": "Whether Server Name Indication is used for enrollment\n",
            "willReplaceOnChanges": true
          },
          "techContact": {
            "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentTechContact:CpsThirdPartyEnrollmentTechContact",
            "description": "Contact information for an administrator at Akamai\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/cpsUploadCertificate:CpsUploadCertificate": {
      "properties": {
        "acknowledgeChangeManagement": {
          "type": "boolean",
          "description": "Whether to acknowledge change management\n"
        },
        "acknowledgePostVerificationWarnings": {
          "type": "boolean",
          "description": "Whether to acknowledge post-verification warnings\n"
        },
        "autoApproveWarnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of post-verification warnings to be automatically acknowledged\n"
        },
        "certificateEcdsaPem": {
          "type": "string",
          "description": "ECDSA certificate in pem format to be uploaded\n"
        },
        "certificateRsaPem": {
          "type": "string",
          "description": "RSA certificate in pem format to be uploaded\n"
        },
        "enrollmentId": {
          "type": "integer",
          "description": "The unique identifier of the enrollment\n"
        },
        "trustChainEcdsaPem": {
          "type": "string",
          "description": "Trust chain in pem format for provided ECDSA certificate\n"
        },
        "trustChainRsaPem": {
          "type": "string",
          "description": "Trust chain in pem format for provided RSA certificate\n"
        },
        "unacknowledgedWarnings": {
          "type": "boolean",
          "description": "Used to distinguish whether there are unacknowledged warnings for a certificate\n"
        },
        "waitForDeployment": {
          "type": "boolean",
          "description": "Whether to wait for certificate to be deployed\n"
        }
      },
      "required": [
        "enrollmentId",
        "unacknowledgedWarnings"
      ],
      "inputProperties": {
        "acknowledgeChangeManagement": {
          "type": "boolean",
          "description": "Whether to acknowledge change management\n"
        },
        "acknowledgePostVerificationWarnings": {
          "type": "boolean",
          "description": "Whether to acknowledge post-verification warnings\n"
        },
        "autoApproveWarnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of post-verification warnings to be automatically acknowledged\n"
        },
        "certificateEcdsaPem": {
          "type": "string",
          "description": "ECDSA certificate in pem format to be uploaded\n"
        },
        "certificateRsaPem": {
          "type": "string",
          "description": "RSA certificate in pem format to be uploaded\n"
        },
        "enrollmentId": {
          "type": "integer",
          "description": "The unique identifier of the enrollment\n",
          "willReplaceOnChanges": true
        },
        "trustChainEcdsaPem": {
          "type": "string",
          "description": "Trust chain in pem format for provided ECDSA certificate\n"
        },
        "trustChainRsaPem": {
          "type": "string",
          "description": "Trust chain in pem format for provided RSA certificate\n"
        },
        "waitForDeployment": {
          "type": "boolean",
          "description": "Whether to wait for certificate to be deployed\n"
        }
      },
      "requiredInputs": [
        "enrollmentId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering CpsUploadCertificate resources.\n",
        "properties": {
          "acknowledgeChangeManagement": {
            "type": "boolean",
            "description": "Whether to acknowledge change management\n"
          },
          "acknowledgePostVerificationWarnings": {
            "type": "boolean",
            "description": "Whether to acknowledge post-verification warnings\n"
          },
          "autoApproveWarnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of post-verification warnings to be automatically acknowledged\n"
          },
          "certificateEcdsaPem": {
            "type": "string",
            "description": "ECDSA certificate in pem format to be uploaded\n"
          },
          "certificateRsaPem": {
            "type": "string",
            "description": "RSA certificate in pem format to be uploaded\n"
          },
          "enrollmentId": {
            "type": "integer",
            "description": "The unique identifier of the enrollment\n",
            "willReplaceOnChanges": true
          },
          "trustChainEcdsaPem": {
            "type": "string",
            "description": "Trust chain in pem format for provided ECDSA certificate\n"
          },
          "trustChainRsaPem": {
            "type": "string",
            "description": "Trust chain in pem format for provided RSA certificate\n"
          },
          "unacknowledgedWarnings": {
            "type": "boolean",
            "description": "Used to distinguish whether there are unacknowledged warnings for a certificate\n"
          },
          "waitForDeployment": {
            "type": "boolean",
            "description": "Whether to wait for certificate to be deployed\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/datastream:Datastream": {
      "properties": {
        "active": {
          "type": "boolean",
          "description": "Defining if stream should be active or not\n"
        },
        "azureConnector": {
          "$ref": "#/types/akamai:index/DatastreamAzureConnector:DatastreamAzureConnector"
        },
        "collectMidgress": {
          "type": "boolean",
          "description": "Identifies if stream needs to collect midgress data\n"
        },
        "contractId": {
          "type": "string",
          "description": "Identifies the contract that has access to the product\n"
        },
        "createdBy": {
          "type": "string",
          "description": "The username who created the stream\n"
        },
        "createdDate": {
          "type": "string",
          "description": "The date and time when the stream was created\n"
        },
        "datadogConnector": {
          "$ref": "#/types/akamai:index/DatastreamDatadogConnector:DatastreamDatadogConnector"
        },
        "datasetFields": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "description": "A list of data set fields selected from the associated template that the stream monitors in logs. The order of the\nidentifiers define how the value for these fields appear in the log lines\n"
        },
        "deliveryConfiguration": {
          "$ref": "#/types/akamai:index/DatastreamDeliveryConfiguration:DatastreamDeliveryConfiguration",
          "description": "Provides information about the configuration related to logs (format, file names, delivery frequency)\n"
        },
        "elasticsearchConnector": {
          "$ref": "#/types/akamai:index/DatastreamElasticsearchConnector:DatastreamElasticsearchConnector"
        },
        "gcsConnector": {
          "$ref": "#/types/akamai:index/DatastreamGcsConnector:DatastreamGcsConnector"
        },
        "groupId": {
          "type": "string",
          "description": "Identifies the group that has access to the product and for which the stream configuration was created\n"
        },
        "httpsConnector": {
          "$ref": "#/types/akamai:index/DatastreamHttpsConnector:DatastreamHttpsConnector"
        },
        "latestVersion": {
          "type": "integer",
          "description": "Identifies the latest active configuration version of the stream\n"
        },
        "logglyConnector": {
          "$ref": "#/types/akamai:index/DatastreamLogglyConnector:DatastreamLogglyConnector"
        },
        "modifiedBy": {
          "type": "string",
          "description": "The username who modified the stream\n"
        },
        "modifiedDate": {
          "type": "string",
          "description": "The date and time when the stream was modified\n"
        },
        "newRelicConnector": {
          "$ref": "#/types/akamai:index/DatastreamNewRelicConnector:DatastreamNewRelicConnector"
        },
        "notificationEmails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of email addresses where the system sends notifications about activations and deactivations of the stream\n"
        },
        "oracleConnector": {
          "$ref": "#/types/akamai:index/DatastreamOracleConnector:DatastreamOracleConnector"
        },
        "papiJson": {
          "type": "string",
          "description": "The configuration in JSON format that can be copy-pasted into PAPI configuration to enable datastream behavior\n"
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product for which the stream was created\n"
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Identifies the properties monitored in the stream\n"
        },
        "s3Connector": {
          "$ref": "#/types/akamai:index/DatastreamS3Connector:DatastreamS3Connector"
        },
        "splunkConnector": {
          "$ref": "#/types/akamai:index/DatastreamSplunkConnector:DatastreamSplunkConnector"
        },
        "streamName": {
          "type": "string",
          "description": "The name of the stream\n"
        },
        "streamVersion": {
          "type": "integer",
          "description": "Identifies the configuration version of the stream\n"
        },
        "sumologicConnector": {
          "$ref": "#/types/akamai:index/DatastreamSumologicConnector:DatastreamSumologicConnector"
        }
      },
      "required": [
        "active",
        "contractId",
        "createdBy",
        "createdDate",
        "datasetFields",
        "deliveryConfiguration",
        "groupId",
        "latestVersion",
        "modifiedBy",
        "modifiedDate",
        "papiJson",
        "productId",
        "properties",
        "streamName",
        "streamVersion"
      ],
      "inputProperties": {
        "active": {
          "type": "boolean",
          "description": "Defining if stream should be active or not\n"
        },
        "azureConnector": {
          "$ref": "#/types/akamai:index/DatastreamAzureConnector:DatastreamAzureConnector"
        },
        "collectMidgress": {
          "type": "boolean",
          "description": "Identifies if stream needs to collect midgress data\n"
        },
        "contractId": {
          "type": "string",
          "description": "Identifies the contract that has access to the product\n"
        },
        "datadogConnector": {
          "$ref": "#/types/akamai:index/DatastreamDatadogConnector:DatastreamDatadogConnector"
        },
        "datasetFields": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "description": "A list of data set fields selected from the associated template that the stream monitors in logs. The order of the\nidentifiers define how the value for these fields appear in the log lines\n"
        },
        "deliveryConfiguration": {
          "$ref": "#/types/akamai:index/DatastreamDeliveryConfiguration:DatastreamDeliveryConfiguration",
          "description": "Provides information about the configuration related to logs (format, file names, delivery frequency)\n"
        },
        "elasticsearchConnector": {
          "$ref": "#/types/akamai:index/DatastreamElasticsearchConnector:DatastreamElasticsearchConnector"
        },
        "gcsConnector": {
          "$ref": "#/types/akamai:index/DatastreamGcsConnector:DatastreamGcsConnector"
        },
        "groupId": {
          "type": "string",
          "description": "Identifies the group that has access to the product and for which the stream configuration was created\n"
        },
        "httpsConnector": {
          "$ref": "#/types/akamai:index/DatastreamHttpsConnector:DatastreamHttpsConnector"
        },
        "logglyConnector": {
          "$ref": "#/types/akamai:index/DatastreamLogglyConnector:DatastreamLogglyConnector"
        },
        "newRelicConnector": {
          "$ref": "#/types/akamai:index/DatastreamNewRelicConnector:DatastreamNewRelicConnector"
        },
        "notificationEmails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of email addresses where the system sends notifications about activations and deactivations of the stream\n"
        },
        "oracleConnector": {
          "$ref": "#/types/akamai:index/DatastreamOracleConnector:DatastreamOracleConnector"
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Identifies the properties monitored in the stream\n"
        },
        "s3Connector": {
          "$ref": "#/types/akamai:index/DatastreamS3Connector:DatastreamS3Connector"
        },
        "splunkConnector": {
          "$ref": "#/types/akamai:index/DatastreamSplunkConnector:DatastreamSplunkConnector"
        },
        "streamName": {
          "type": "string",
          "description": "The name of the stream\n"
        },
        "sumologicConnector": {
          "$ref": "#/types/akamai:index/DatastreamSumologicConnector:DatastreamSumologicConnector"
        }
      },
      "requiredInputs": [
        "active",
        "contractId",
        "datasetFields",
        "deliveryConfiguration",
        "groupId",
        "properties",
        "streamName"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering Datastream resources.\n",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Defining if stream should be active or not\n"
          },
          "azureConnector": {
            "$ref": "#/types/akamai:index/DatastreamAzureConnector:DatastreamAzureConnector"
          },
          "collectMidgress": {
            "type": "boolean",
            "description": "Identifies if stream needs to collect midgress data\n"
          },
          "contractId": {
            "type": "string",
            "description": "Identifies the contract that has access to the product\n"
          },
          "createdBy": {
            "type": "string",
            "description": "The username who created the stream\n"
          },
          "createdDate": {
            "type": "string",
            "description": "The date and time when the stream was created\n"
          },
          "datadogConnector": {
            "$ref": "#/types/akamai:index/DatastreamDatadogConnector:DatastreamDatadogConnector"
          },
          "datasetFields": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "A list of data set fields selected from the associated template that the stream monitors in logs. The order of the\nidentifiers define how the value for these fields appear in the log lines\n"
          },
          "deliveryConfiguration": {
            "$ref": "#/types/akamai:index/DatastreamDeliveryConfiguration:DatastreamDeliveryConfiguration",
            "description": "Provides information about the configuration related to logs (format, file names, delivery frequency)\n"
          },
          "elasticsearchConnector": {
            "$ref": "#/types/akamai:index/DatastreamElasticsearchConnector:DatastreamElasticsearchConnector"
          },
          "gcsConnector": {
            "$ref": "#/types/akamai:index/DatastreamGcsConnector:DatastreamGcsConnector"
          },
          "groupId": {
            "type": "string",
            "description": "Identifies the group that has access to the product and for which the stream configuration was created\n"
          },
          "httpsConnector": {
            "$ref": "#/types/akamai:index/DatastreamHttpsConnector:DatastreamHttpsConnector"
          },
          "latestVersion": {
            "type": "integer",
            "description": "Identifies the latest active configuration version of the stream\n"
          },
          "logglyConnector": {
            "$ref": "#/types/akamai:index/DatastreamLogglyConnector:DatastreamLogglyConnector"
          },
          "modifiedBy": {
            "type": "string",
            "description": "The username who modified the stream\n"
          },
          "modifiedDate": {
            "type": "string",
            "description": "The date and time when the stream was modified\n"
          },
          "newRelicConnector": {
            "$ref": "#/types/akamai:index/DatastreamNewRelicConnector:DatastreamNewRelicConnector"
          },
          "notificationEmails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of email addresses where the system sends notifications about activations and deactivations of the stream\n"
          },
          "oracleConnector": {
            "$ref": "#/types/akamai:index/DatastreamOracleConnector:DatastreamOracleConnector"
          },
          "papiJson": {
            "type": "string",
            "description": "The configuration in JSON format that can be copy-pasted into PAPI configuration to enable datastream behavior\n"
          },
          "productId": {
            "type": "string",
            "description": "The ID of the product for which the stream was created\n"
          },
          "properties": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Identifies the properties monitored in the stream\n"
          },
          "s3Connector": {
            "$ref": "#/types/akamai:index/DatastreamS3Connector:DatastreamS3Connector"
          },
          "splunkConnector": {
            "$ref": "#/types/akamai:index/DatastreamSplunkConnector:DatastreamSplunkConnector"
          },
          "streamName": {
            "type": "string",
            "description": "The name of the stream\n"
          },
          "streamVersion": {
            "type": "integer",
            "description": "Identifies the configuration version of the stream\n"
          },
          "sumologicConnector": {
            "$ref": "#/types/akamai:index/DatastreamSumologicConnector:DatastreamSumologicConnector"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/dnsRecord:DnsRecord": {
      "properties": {
        "active": {
          "type": "boolean",
          "deprecationMessage": "Field 'active' has been deprecated. Setting it has no effect"
        },
        "algorithm": {
          "type": "integer"
        },
        "answerType": {
          "type": "string"
        },
        "certificate": {
          "type": "string"
        },
        "digest": {
          "type": "string"
        },
        "digestType": {
          "type": "integer"
        },
        "dnsName": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        },
        "expiration": {
          "type": "string"
        },
        "expiry": {
          "type": "integer"
        },
        "fingerprint": {
          "type": "string"
        },
        "fingerprintType": {
          "type": "integer"
        },
        "flags": {
          "type": "integer"
        },
        "flagsnaptr": {
          "type": "string"
        },
        "hardware": {
          "type": "string"
        },
        "inception": {
          "type": "string"
        },
        "iterations": {
          "type": "integer"
        },
        "key": {
          "type": "string"
        },
        "keytag": {
          "type": "integer"
        },
        "labels": {
          "type": "integer"
        },
        "mailbox": {
          "type": "string"
        },
        "matchType": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "nameServer": {
          "type": "string"
        },
        "nextHashedOwnerName": {
          "type": "string"
        },
        "nxdomainTtl": {
          "type": "integer"
        },
        "order": {
          "type": "integer"
        },
        "originalTtl": {
          "type": "integer"
        },
        "port": {
          "type": "integer"
        },
        "preference": {
          "type": "integer"
        },
        "priority": {
          "type": "integer"
        },
        "priorityIncrement": {
          "type": "integer"
        },
        "protocol": {
          "type": "integer"
        },
        "recordSha": {
          "type": "string"
        },
        "recordtype": {
          "type": "string"
        },
        "refresh": {
          "type": "integer"
        },
        "regexp": {
          "type": "string"
        },
        "replacement": {
          "type": "string"
        },
        "retry": {
          "type": "integer"
        },
        "salt": {
          "type": "string"
        },
        "selector": {
          "type": "integer"
        },
        "serial": {
          "type": "integer"
        },
        "service": {
          "type": "string"
        },
        "signature": {
          "type": "string"
        },
        "signer": {
          "type": "string"
        },
        "software": {
          "type": "string"
        },
        "subtype": {
          "type": "integer"
        },
        "svcParams": {
          "type": "string"
        },
        "svcPriority": {
          "type": "integer"
        },
        "targetName": {
          "type": "string"
        },
        "targets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ttl": {
          "type": "integer"
        },
        "txt": {
          "type": "string"
        },
        "typeBitmaps": {
          "type": "string"
        },
        "typeCovered": {
          "type": "string"
        },
        "typeMnemonic": {
          "type": "string"
        },
        "typeValue": {
          "type": "integer"
        },
        "usage": {
          "type": "integer"
        },
        "weight": {
          "type": "integer"
        },
        "zone": {
          "type": "string"
        }
      },
      "required": [
        "answerType",
        "dnsName",
        "name",
        "recordSha",
        "recordtype",
        "serial",
        "ttl",
        "zone"
      ],
      "inputProperties": {
        "active": {
          "type": "boolean",
          "deprecationMessage": "Field 'active' has been deprecated. Setting it has no effect"
        },
        "algorithm": {
          "type": "integer"
        },
        "certificate": {
          "type": "string"
        },
        "digest": {
          "type": "string"
        },
        "digestType": {
          "type": "integer"
        },
        "emailAddress": {
          "type": "string"
        },
        "expiration": {
          "type": "string"
        },
        "expiry": {
          "type": "integer"
        },
        "fingerprint": {
          "type": "string"
        },
        "fingerprintType": {
          "type": "integer"
        },
        "flags": {
          "type": "integer"
        },
        "flagsnaptr": {
          "type": "string"
        },
        "hardware": {
          "type": "string"
        },
        "inception": {
          "type": "string"
        },
        "iterations": {
          "type": "integer"
        },
        "key": {
          "type": "string"
        },
        "keytag": {
          "type": "integer"
        },
        "labels": {
          "type": "integer"
        },
        "mailbox": {
          "type": "string"
        },
        "matchType": {
          "type": "integer"
        },
        "name": {
          "type": "string",
          "willReplaceOnChanges": true
        },
        "nameServer": {
          "type": "string"
        },
        "nextHashedOwnerName": {
          "type": "string"
        },
        "nxdomainTtl": {
          "type": "integer"
        },
        "order": {
          "type": "integer"
        },
        "originalTtl": {
          "type": "integer"
        },
        "port": {
          "type": "integer"
        },
        "preference": {
          "type": "integer"
        },
        "priority": {
          "type": "integer"
        },
        "priorityIncrement": {
          "type": "integer"
        },
        "protocol": {
          "type": "integer"
        },
        "recordtype": {
          "type": "string",
          "willReplaceOnChanges": true
        },
        "refresh": {
          "type": "integer"
        },
        "regexp": {
          "type": "string"
        },
        "replacement": {
          "type": "string"
        },
        "retry": {
          "type": "integer"
        },
        "salt": {
          "type": "string"
        },
        "selector": {
          "type": "integer"
        },
        "service": {
          "type": "string"
        },
        "signature": {
          "type": "string"
        },
        "signer": {
          "type": "string"
        },
        "software": {
          "type": "string"
        },
        "subtype": {
          "type": "integer"
        },
        "svcParams": {
          "type": "string"
        },
        "svcPriority": {
          "type": "integer"
        },
        "targetName": {
          "type": "string"
        },
        "targets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ttl": {
          "type": "integer"
        },
        "txt": {
          "type": "string"
        },
        "typeBitmaps": {
          "type": "string"
        },
        "typeCovered": {
          "type": "string"
        },
        "typeMnemonic": {
          "type": "string"
        },
        "typeValue": {
          "type": "integer"
        },
        "usage": {
          "type": "integer"
        },
        "weight": {
          "type": "integer"
        },
        "zone": {
          "type": "string",
          "willReplaceOnChanges": true
        }
      },
      "requiredInputs": [
        "recordtype",
        "ttl",
        "zone"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering DnsRecord resources.\n",
        "properties": {
          "active": {
            "type": "boolean",
            "deprecationMessage": "Field 'active' has been deprecated. Setting it has no effect"
          },
          "algorithm": {
            "type": "integer"
          },
          "answerType": {
            "type": "string"
          },
          "certificate": {
            "type": "string"
          },
          "digest": {
            "type": "string"
          },
          "digestType": {
            "type": "integer"
          },
          "dnsName": {
            "type": "string"
          },
          "emailAddress": {
            "type": "string"
          },
          "expiration": {
            "type": "string"
          },
          "expiry": {
            "type": "integer"
          },
          "fingerprint": {
            "type": "string"
          },
          "fingerprintType": {
            "type": "integer"
          },
          "flags": {
            "type": "integer"
          },
          "flagsnaptr": {
            "type": "string"
          },
          "hardware": {
            "type": "string"
          },
          "inception": {
            "type": "string"
          },
          "iterations": {
            "type": "integer"
          },
          "key": {
            "type": "string"
          },
          "keytag": {
            "type": "integer"
          },
          "labels": {
            "type": "integer"
          },
          "mailbox": {
            "type": "string"
          },
          "matchType": {
            "type": "integer"
          },
          "name": {
            "type": "string",
            "willReplaceOnChanges": true
          },
          "nameServer": {
            "type": "string"
          },
          "nextHashedOwnerName": {
            "type": "string"
          },
          "nxdomainTtl": {
            "type": "integer"
          },
          "order": {
            "type": "integer"
          },
          "originalTtl": {
            "type": "integer"
          },
          "port": {
            "type": "integer"
          },
          "preference": {
            "type": "integer"
          },
          "priority": {
            "type": "integer"
          },
          "priorityIncrement": {
            "type": "integer"
          },
          "protocol": {
            "type": "integer"
          },
          "recordSha": {
            "type": "string"
          },
          "recordtype": {
            "type": "string",
            "willReplaceOnChanges": true
          },
          "refresh": {
            "type": "integer"
          },
          "regexp": {
            "type": "string"
          },
          "replacement": {
            "type": "string"
          },
          "retry": {
            "type": "integer"
          },
          "salt": {
            "type": "string"
          },
          "selector": {
            "type": "integer"
          },
          "serial": {
            "type": "integer"
          },
          "service": {
            "type": "string"
          },
          "signature": {
            "type": "string"
          },
          "signer": {
            "type": "string"
          },
          "software": {
            "type": "string"
          },
          "subtype": {
            "type": "integer"
          },
          "svcParams": {
            "type": "string"
          },
          "svcPriority": {
            "type": "integer"
          },
          "targetName": {
            "type": "string"
          },
          "targets": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ttl": {
            "type": "integer"
          },
          "txt": {
            "type": "string"
          },
          "typeBitmaps": {
            "type": "string"
          },
          "typeCovered": {
            "type": "string"
          },
          "typeMnemonic": {
            "type": "string"
          },
          "typeValue": {
            "type": "integer"
          },
          "usage": {
            "type": "integer"
          },
          "weight": {
            "type": "integer"
          },
          "zone": {
            "type": "string",
            "willReplaceOnChanges": true
          }
        },
        "type": "object"
      },
      "aliases": [
        {
          "type": "akamai:edgedns/dnsRecord:DnsRecord"
        }
      ]
    },
    "akamai:index/dnsZone:DnsZone": {
      "properties": {
        "activationState": {
          "type": "string"
        },
        "aliasCount": {
          "type": "integer"
        },
        "comment": {
          "type": "string"
        },
        "contract": {
          "type": "string"
        },
        "endCustomerId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "masters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "signAndServe": {
          "type": "boolean"
        },
        "signAndServeAlgorithm": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "tsigKey": {
          "$ref": "#/types/akamai:index/DnsZoneTsigKey:DnsZoneTsigKey"
        },
        "type": {
          "type": "string"
        },
        "versionId": {
          "type": "string"
        },
        "zone": {
          "type": "string"
        }
      },
      "required": [
        "activationState",
        "aliasCount",
        "contract",
        "type",
        "versionId",
        "zone"
      ],
      "inputProperties": {
        "comment": {
          "type": "string"
        },
        "contract": {
          "type": "string"
        },
        "endCustomerId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "masters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "signAndServe": {
          "type": "boolean"
        },
        "signAndServeAlgorithm": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "tsigKey": {
          "$ref": "#/types/akamai:index/DnsZoneTsigKey:DnsZoneTsigKey"
        },
        "type": {
          "type": "string",
          "willReplaceOnChanges": true
        },
        "zone": {
          "type": "string"
        }
      },
      "requiredInputs": [
        "contract",
        "type",
        "zone"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering DnsZone resources.\n",
        "properties": {
          "activationState": {
            "type": "string"
          },
          "aliasCount": {
            "type": "integer"
          },
          "comment": {
            "type": "string"
          },
          "contract": {
            "type": "string"
          },
          "endCustomerId": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "masters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "signAndServe": {
            "type": "boolean"
          },
          "signAndServeAlgorithm": {
            "type": "string"
          },
          "target": {
            "type": "string"
          },
          "tsigKey": {
            "$ref": "#/types/akamai:index/DnsZoneTsigKey:DnsZoneTsigKey"
          },
          "type": {
            "type": "string",
            "willReplaceOnChanges": true
          },
          "versionId": {
            "type": "string"
          },
          "zone": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "aliases": [
        {
          "type": "akamai:edgedns/dnsZone:DnsZone"
        }
      ]
    },
    "akamai:index/edgeHostName:EdgeHostName": {
      "properties": {
        "certificate": {
          "type": "integer"
        },
        "contractId": {
          "type": "string"
        },
        "edgeHostname": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "ipBehavior": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "statusUpdateEmails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Email address that should receive updates on the IP behavior update request. Required for update operation.\n"
        },
        "useCases": {
          "type": "string",
          "description": "A JSON encoded list of use cases\n"
        }
      },
      "required": [
        "contractId",
        "edgeHostname",
        "groupId",
        "ipBehavior",
        "productId"
      ],
      "inputProperties": {
        "certificate": {
          "type": "integer",
          "willReplaceOnChanges": true
        },
        "contractId": {
          "type": "string"
        },
        "edgeHostname": {
          "type": "string",
          "willReplaceOnChanges": true
        },
        "groupId": {
          "type": "string"
        },
        "ipBehavior": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "statusUpdateEmails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Email address that should receive updates on the IP behavior update request. Required for update operation.\n"
        },
        "useCases": {
          "type": "string",
          "description": "A JSON encoded list of use cases\n",
          "willReplaceOnChanges": true
        }
      },
      "requiredInputs": [
        "contractId",
        "edgeHostname",
        "groupId",
        "ipBehavior"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering EdgeHostName resources.\n",
        "properties": {
          "certificate": {
            "type": "integer",
            "willReplaceOnChanges": true
          },
          "contractId": {
            "type": "string"
          },
          "edgeHostname": {
            "type": "string",
            "willReplaceOnChanges": true
          },
          "groupId": {
            "type": "string"
          },
          "ipBehavior": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "statusUpdateEmails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Email address that should receive updates on the IP behavior update request. Required for update operation.\n"
          },
          "useCases": {
            "type": "string",
            "description": "A JSON encoded list of use cases\n",
            "willReplaceOnChanges": true
          }
        },
        "type": "object"
      },
      "aliases": [
        {
          "type": "akamai:properties/edgeHostName:EdgeHostName"
        }
      ]
    },
    "akamai:index/edgeKv:EdgeKv": {
      "properties": {
        "geoLocation": {
          "type": "string",
          "description": "Storage location for data\n"
        },
        "groupId": {
          "type": "integer",
          "description": "Namespace ACC group ID. It will be used in EdgeKV API v2. Not updatable.\n"
        },
        "initialDatas": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/EdgeKvInitialData:EdgeKvInitialData"
          },
          "description": "List of pairs to initialize the namespace. Just meaningful for creation, updates will be ignored.\n",
          "deprecationMessage": "The attribute 'initial_data' has been deprecated. To manage edgeKV items use 'akamai_edgekv_group_items' resource instead."
        },
        "namespaceName": {
          "type": "string",
          "description": "Name for the EKV namespace\n"
        },
        "network": {
          "type": "string",
          "description": "The network on which the namespace will be activated\n"
        },
        "retentionInSeconds": {
          "type": "integer",
          "description": "Retention period for data in this namespace. An update of this value will just affect new EKV items.\n"
        }
      },
      "required": [
        "groupId",
        "namespaceName",
        "network",
        "retentionInSeconds"
      ],
      "inputProperties": {
        "geoLocation": {
          "type": "string",
          "description": "Storage location for data\n",
          "willReplaceOnChanges": true
        },
        "groupId": {
          "type": "integer",
          "description": "Namespace ACC group ID. It will be used in EdgeKV API v2. Not updatable.\n",
          "willReplaceOnChanges": true
        },
        "initialDatas": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/EdgeKvInitialData:EdgeKvInitialData"
          },
          "description": "List of pairs to initialize the namespace. Just meaningful for creation, updates will be ignored.\n",
          "deprecationMessage": "The attribute 'initial_data' has been deprecated. To manage edgeKV items use 'akamai_edgekv_group_items' resource instead."
        },
        "namespaceName": {
          "type": "string",
          "description": "Name for the EKV namespace\n",
          "willReplaceOnChanges": true
        },
        "network": {
          "type": "string",
          "description": "The network on which the namespace will be activated\n",
          "willReplaceOnChanges": true
        },
        "retentionInSeconds": {
          "type": "integer",
          "description": "Retention period for data in this namespace. An update of this value will just affect new EKV items.\n"
        }
      },
      "requiredInputs": [
        "groupId",
        "namespaceName",
        "network",
        "retentionInSeconds"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering EdgeKv resources.\n",
        "properties": {
          "geoLocation": {
            "type": "string",
            "description": "Storage location for data\n",
            "willReplaceOnChanges": true
          },
          "groupId": {
            "type": "integer",
            "description": "Namespace ACC group ID. It will be used in EdgeKV API v2. Not updatable.\n",
            "willReplaceOnChanges": true
          },
          "initialDatas": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/EdgeKvInitialData:EdgeKvInitialData"
            },
            "description": "List of pairs to initialize the namespace. Just meaningful for creation, updates will be ignored.\n",
            "deprecationMessage": "The attribute 'initial_data' has been deprecated. To manage edgeKV items use 'akamai_edgekv_group_items' resource instead."
          },
          "namespaceName": {
            "type": "string",
            "description": "Name for the EKV namespace\n",
            "willReplaceOnChanges": true
          },
          "network": {
            "type": "string",
            "description": "The network on which the namespace will be activated\n",
            "willReplaceOnChanges": true
          },
          "retentionInSeconds": {
            "type": "integer",
            "description": "Retention period for data in this namespace. An update of this value will just affect new EKV items.\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/edgeWorker:EdgeWorker": {
      "properties": {
        "edgeworkerId": {
          "type": "integer",
          "description": "The unique identifier of the EdgeWorker\n"
        },
        "groupId": {
          "type": "integer",
          "description": "Defines the group association for the EdgeWorker\n"
        },
        "localBundle": {
          "type": "string",
          "description": "The path to the EdgeWorkers tgz code bundle\n"
        },
        "localBundleHash": {
          "type": "string",
          "description": "The local bundle hash for the EdgeWorker\n"
        },
        "name": {
          "type": "string",
          "description": "The EdgeWorker name\n"
        },
        "resourceTierId": {
          "type": "integer",
          "description": "The unique identifier of a resource tier\n"
        },
        "version": {
          "type": "string",
          "description": "The bundle version\n"
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of warnings returned by EdgeWorker validation\n"
        }
      },
      "required": [
        "edgeworkerId",
        "groupId",
        "localBundleHash",
        "name",
        "resourceTierId",
        "version",
        "warnings"
      ],
      "inputProperties": {
        "groupId": {
          "type": "integer",
          "description": "Defines the group association for the EdgeWorker\n"
        },
        "localBundle": {
          "type": "string",
          "description": "The path to the EdgeWorkers tgz code bundle\n"
        },
        "name": {
          "type": "string",
          "description": "The EdgeWorker name\n"
        },
        "resourceTierId": {
          "type": "integer",
          "description": "The unique identifier of a resource tier\n",
          "willReplaceOnChanges": true
        }
      },
      "requiredInputs": [
        "groupId",
        "resourceTierId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering EdgeWorker resources.\n",
        "properties": {
          "edgeworkerId": {
            "type": "integer",
            "description": "The unique identifier of the EdgeWorker\n"
          },
          "groupId": {
            "type": "integer",
            "description": "Defines the group association for the EdgeWorker\n"
          },
          "localBundle": {
            "type": "string",
            "description": "The path to the EdgeWorkers tgz code bundle\n"
          },
          "localBundleHash": {
            "type": "string",
            "description": "The local bundle hash for the EdgeWorker\n"
          },
          "name": {
            "type": "string",
            "description": "The EdgeWorker name\n"
          },
          "resourceTierId": {
            "type": "integer",
            "description": "The unique identifier of a resource tier\n",
            "willReplaceOnChanges": true
          },
          "version": {
            "type": "string",
            "description": "The bundle version\n"
          },
          "warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of warnings returned by EdgeWorker validation\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/edgeWorkersActivation:EdgeWorkersActivation": {
      "properties": {
        "activationId": {
          "type": "integer",
          "description": "A unique identifier of the activation\n"
        },
        "edgeworkerId": {
          "type": "integer",
          "description": "Id of the EdgeWorker to activate\n"
        },
        "network": {
          "type": "string",
          "description": "The network on which the version will be activated\n"
        },
        "version": {
          "type": "string",
          "description": "The version of EdgeWorker to activate\n"
        }
      },
      "required": [
        "activationId",
        "edgeworkerId",
        "network",
        "version"
      ],
      "inputProperties": {
        "edgeworkerId": {
          "type": "integer",
          "description": "Id of the EdgeWorker to activate\n",
          "willReplaceOnChanges": true
        },
        "network": {
          "type": "string",
          "description": "The network on which the version will be activated\n"
        },
        "version": {
          "type": "string",
          "description": "The version of EdgeWorker to activate\n"
        }
      },
      "requiredInputs": [
        "edgeworkerId",
        "network",
        "version"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering EdgeWorkersActivation resources.\n",
        "properties": {
          "activationId": {
            "type": "integer",
            "description": "A unique identifier of the activation\n"
          },
          "edgeworkerId": {
            "type": "integer",
            "description": "Id of the EdgeWorker to activate\n",
            "willReplaceOnChanges": true
          },
          "network": {
            "type": "string",
            "description": "The network on which the version will be activated\n"
          },
          "version": {
            "type": "string",
            "description": "The version of EdgeWorker to activate\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/edgekvGroupItems:EdgekvGroupItems": {
      "properties": {
        "groupName": {
          "type": "string",
          "description": "The name of the EdgeKV group.\n"
        },
        "items": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map of items within the specified group. Each item consists of an item key and a value.\n"
        },
        "namespaceName": {
          "type": "string",
          "description": "The name for the EdgeKV namespace.\n"
        },
        "network": {
          "type": "string",
          "description": "The network against which to execute the API request.\n"
        }
      },
      "required": [
        "groupName",
        "items",
        "namespaceName",
        "network"
      ],
      "inputProperties": {
        "groupName": {
          "type": "string",
          "description": "The name of the EdgeKV group.\n",
          "willReplaceOnChanges": true
        },
        "items": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map of items within the specified group. Each item consists of an item key and a value.\n"
        },
        "namespaceName": {
          "type": "string",
          "description": "The name for the EdgeKV namespace.\n",
          "willReplaceOnChanges": true
        },
        "network": {
          "type": "string",
          "description": "The network against which to execute the API request.\n",
          "willReplaceOnChanges": true
        }
      },
      "requiredInputs": [
        "groupName",
        "items",
        "namespaceName",
        "network"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering EdgekvGroupItems resources.\n",
        "properties": {
          "groupName": {
            "type": "string",
            "description": "The name of the EdgeKV group.\n",
            "willReplaceOnChanges": true
          },
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A map of items within the specified group. Each item consists of an item key and a value.\n"
          },
          "namespaceName": {
            "type": "string",
            "description": "The name for the EdgeKV namespace.\n",
            "willReplaceOnChanges": true
          },
          "network": {
            "type": "string",
            "description": "The network against which to execute the API request.\n",
            "willReplaceOnChanges": true
          }
        },
        "type": "object"
      }
    },
    "akamai:index/gtmAsmap:GtmAsmap": {
      "properties": {
        "assignments": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/GtmAsmapAssignment:GtmAsmapAssignment"
          }
        },
        "defaultDatacenter": {
          "$ref": "#/types/akamai:index/GtmAsmapDefaultDatacenter:GtmAsmapDefaultDatacenter"
        },
        "domain": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "waitOnComplete": {
          "type": "boolean"
        }
      },
      "required": [
        "defaultDatacenter",
        "domain",
        "name"
      ],
      "inputProperties": {
        "assignments": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/GtmAsmapAssignment:GtmAsmapAssignment"
          }
        },
        "defaultDatacenter": {
          "$ref": "#/types/akamai:index/GtmAsmapDefaultDatacenter:GtmAsmapDefaultDatacenter"
        },
        "domain": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "waitOnComplete": {
          "type": "boolean"
        }
      },
      "requiredInputs": [
        "defaultDatacenter",
        "domain"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering GtmAsmap resources.\n",
        "properties": {
          "assignments": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/GtmAsmapAssignment:GtmAsmapAssignment"
            }
          },
          "defaultDatacenter": {
            "$ref": "#/types/akamai:index/GtmAsmapDefaultDatacenter:GtmAsmapDefaultDatacenter"
          },
          "domain": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "waitOnComplete": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "aliases": [
        {
          "type": "akamai:trafficmanagement/gtmASmap:GtmASmap"
        }
      ]
    },
    "akamai:index/gtmCidrmap:GtmCidrmap": {
      "properties": {
        "assignments": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/GtmCidrmapAssignment:GtmCidrmapAssignment"
          }
        },
        "defaultDatacenter": {
          "$ref": "#/types/akamai:index/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter"
        },
        "domain": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "waitOnComplete": {
          "type": "boolean"
        }
      },
      "required": [
        "defaultDatacenter",
        "domain",
        "name"
      ],
      "inputProperties": {
        "assignments": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/GtmCidrmapAssignment:GtmCidrmapAssignment"
          }
        },
        "defaultDatacenter": {
          "$ref": "#/types/akamai:index/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter"
        },
        "domain": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "waitOnComplete": {
          "type": "boolean"
        }
      },
      "requiredInputs": [
        "defaultDatacenter",
        "domain"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering GtmCidrmap resources.\n",
        "properties": {
          "assignments": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/GtmCidrmapAssignment:GtmCidrmapAssignment"
            }
          },
          "defaultDatacenter": {
            "$ref": "#/types/akamai:index/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter"
          },
          "domain": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "waitOnComplete": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "aliases": [
        {
          "type": "akamai:trafficmanagement/gtmCidrmap:GtmCidrmap"
        }
      ]
    },
    "akamai:index/gtmDatacenter:GtmDatacenter": {
      "properties": {
        "city": {
          "type": "string"
        },
        "cloneOf": {
          "type": "integer"
        },
        "cloudServerHostHeaderOverride": {
          "type": "boolean"
        },
        "cloudServerTargeting": {
          "type": "boolean"
        },
        "continent": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "datacenterId": {
          "type": "integer"
        },
        "defaultLoadObject": {
          "$ref": "#/types/akamai:index/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject"
        },
        "domain": {
          "type": "string"
        },
        "latitude": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        },
        "nickname": {
          "type": "string"
        },
        "pingInterval": {
          "type": "integer"
        },
        "pingPacketSize": {
          "type": "integer"
        },
        "scorePenalty": {
          "type": "integer"
        },
        "servermonitorLivenessCount": {
          "type": "integer"
        },
        "servermonitorLoadCount": {
          "type": "integer"
        },
        "servermonitorPool": {
          "type": "string"
        },
        "stateOrProvince": {
          "type": "string"
        },
        "virtual": {
          "type": "boolean"
        },
        "waitOnComplete": {
          "type": "boolean"
        }
      },
      "required": [
        "datacenterId",
        "domain",
        "pingInterval",
        "pingPacketSize",
        "scorePenalty",
        "servermonitorLivenessCount",
        "servermonitorLoadCount",
        "servermonitorPool",
        "virtual"
      ],
      "inputProperties": {
        "city": {
          "type": "string"
        },
        "cloneOf": {
          "type": "integer"
        },
        "cloudServerHostHeaderOverride": {
          "type": "boolean"
        },
        "cloudServerTargeting": {
          "type": "boolean"
        },
        "continent": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "defaultLoadObject": {
          "$ref": "#/types/akamai:index/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject"
        },
        "domain": {
          "type": "string"
        },
        "latitude": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        },
        "nickname": {
          "type": "string"
        },
        "stateOrProvince": {
          "type": "string"
        },
        "waitOnComplete": {
          "type": "boolean"
        }
      },
      "requiredInputs": [
        "domain"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering GtmDatacenter resources.\n",
        "properties": {
          "city": {
            "type": "string"
          },
          "cloneOf": {
            "type": "integer"
          },
          "cloudServerHostHeaderOverride": {
            "type": "boolean"
          },
          "cloudServerTargeting": {
            "type": "boolean"
          },
          "continent": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "datacenterId": {
            "type": "integer"
          },
          "defaultLoadObject": {
            "$ref": "#/types/akamai:index/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject"
          },
          "domain": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "nickname": {
            "type": "string"
          },
          "pingInterval": {
            "type": "integer"
          },
          "pingPacketSize": {
            "type": "integer"
          },
          "scorePenalty": {
            "type": "integer"
          },
          "servermonitorLivenessCount": {
            "type": "integer"
          },
          "servermonitorLoadCount": {
            "type": "integer"
          },
          "servermonitorPool": {
            "type": "string"
          },
          "stateOrProvince": {
            "type": "string"
          },
          "virtual": {
            "type": "boolean"
          },
          "waitOnComplete": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "aliases": [
        {
          "type": "akamai:trafficmanagement/gtmDatacenter:GtmDatacenter"
        }
      ]
    },
    "akamai:index/gtmDomain:GtmDomain": {
      "properties": {
        "cnameCoalescingEnabled": {
          "type": "boolean"
        },
        "comment": {
          "type": "string"
        },
        "contract": {
          "type": "string"
        },
        "defaultErrorPenalty": {
          "type": "integer"
        },
        "defaultHealthMax": {
          "type": "number"
        },
        "defaultHealthMultiplier": {
          "type": "number"
        },
        "defaultHealthThreshold": {
          "type": "number"
        },
        "defaultMaxUnreachablePenalty": {
          "type": "integer"
        },
        "defaultSslClientCertificate": {
          "type": "string"
        },
        "defaultSslClientPrivateKey": {
          "type": "string"
        },
        "defaultTimeoutPenalty": {
          "type": "integer"
        },
        "defaultUnreachableThreshold": {
          "type": "number"
        },
        "emailNotificationLists": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endUserMappingEnabled": {
          "type": "boolean"
        },
        "group": {
          "type": "string"
        },
        "loadFeedback": {
          "type": "boolean"
        },
        "loadImbalancePercentage": {
          "type": "number"
        },
        "mapUpdateInterval": {
          "type": "integer"
        },
        "maxProperties": {
          "type": "integer"
        },
        "maxResources": {
          "type": "integer"
        },
        "maxTestTimeout": {
          "type": "number"
        },
        "maxTtl": {
          "type": "integer"
        },
        "minPingableRegionFraction": {
          "type": "number"
        },
        "minTestInterval": {
          "type": "integer"
        },
        "minTtl": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "pingInterval": {
          "type": "integer"
        },
        "pingPacketSize": {
          "type": "integer"
        },
        "roundRobinPrefix": {
          "type": "string"
        },
        "servermonitorLivenessCount": {
          "type": "integer"
        },
        "servermonitorLoadCount": {
          "type": "integer"
        },
        "servermonitorPool": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "waitOnComplete": {
          "type": "boolean"
        }
      },
      "required": [
        "defaultHealthMax",
        "defaultHealthMultiplier",
        "defaultHealthThreshold",
        "defaultMaxUnreachablePenalty",
        "defaultUnreachableThreshold",
        "mapUpdateInterval",
        "maxProperties",
        "maxResources",
        "maxTestTimeout",
        "maxTtl",
        "minPingableRegionFraction",
        "minTestInterval",
        "minTtl",
        "name",
        "pingInterval",
        "pingPacketSize",
        "roundRobinPrefix",
        "servermonitorLivenessCount",
        "servermonitorLoadCount",
        "servermonitorPool",
        "type"
      ],
      "inputProperties": {
        "cnameCoalescingEnabled": {
          "type": "boolean"
        },
        "comment": {
          "type": "string"
        },
        "contract": {
          "type": "string"
        },
        "defaultErrorPenalty": {
          "type": "integer"
        },
        "defaultSslClientCertificate": {
          "type": "string"
        },
        "defaultSslClientPrivateKey": {
          "type": "string"
        },
        "defaultTimeoutPenalty": {
          "type": "integer"
        },
        "emailNotificationLists": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endUserMappingEnabled": {
          "type": "boolean"
        },
        "group": {
          "type": "string"
        },
        "loadFeedback": {
          "type": "boolean"
        },
        "loadImbalancePercentage": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "waitOnComplete": {
          "type": "boolean"
        }
      },
      "requiredInputs": [
        "type"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering GtmDomain resources.\n",
        "properties": {
          "cnameCoalescingEnabled": {
            "type": "boolean"
          },
          "comment": {
            "type": "string"
          },
          "contract": {
            "type": "string"
          },
          "defaultErrorPenalty": {
            "type": "integer"
          },
          "defaultHealthMax": {
            "type": "number"
          },
          "defaultHealthMultiplier": {
            "type": "number"
          },
          "defaultHealthThreshold": {
            "type": "number"
          },
          "defaultMaxUnreachablePenalty": {
            "type": "integer"
          },
          "defaultSslClientCertificate": {
            "type": "string"
          },
          "defaultSslClientPrivateKey": {
            "type": "string"
          },
          "defaultTimeoutPenalty": {
            "type": "integer"
          },
          "defaultUnreachableThreshold": {
            "type": "number"
          },
          "emailNotificationLists": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "endUserMappingEnabled": {
            "type": "boolean"
          },
          "group": {
            "type": "string"
          },
          "loadFeedback": {
            "type": "boolean"
          },
          "loadImbalancePercentage": {
            "type": "number"
          },
          "mapUpdateInterval": {
            "type": "integer"
          },
          "maxProperties": {
            "type": "integer"
          },
          "maxResources": {
            "type": "integer"
          },
          "maxTestTimeout": {
            "type": "number"
          },
          "maxTtl": {
            "type": "integer"
          },
          "minPingableRegionFraction": {
            "type": "number"
          },
          "minTestInterval": {
            "type": "integer"
          },
          "minTtl": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "pingInterval": {
            "type": "integer"
          },
          "pingPacketSize": {
            "type": "integer"
          },
          "roundRobinPrefix": {
            "type": "string"
          },
          "servermonitorLivenessCount": {
            "type": "integer"
          },
          "servermonitorLoadCount": {
            "type": "integer"
          },
          "servermonitorPool": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "waitOnComplete": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "aliases": [
        {
          "type": "akamai:trafficmanagement/gtmDomain:GtmDomain"
        }
      ]
    },
    "akamai:index/gtmGeomap:GtmGeomap": {
      "properties": {
        "assignments": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/GtmGeomapAssignment:GtmGeomapAssignment"
          }
        },
        "defaultDatacenter": {
          "$ref": "#/types/akamai:index/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter"
        },
        "domain": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "waitOnComplete": {
          "type": "boolean"
        }
      },
      "required": [
        "defaultDatacenter",
        "domain",
        "name"
      ],
      "inputProperties": {
        "assignments": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/GtmGeomapAssignment:GtmGeomapAssignment"
          }
        },
        "defaultDatacenter": {
          "$ref": "#/types/akamai:index/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter"
        },
        "domain": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "waitOnComplete": {
          "type": "boolean"
        }
      },
      "requiredInputs": [
        "defaultDatacenter",
        "domain"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering GtmGeomap resources.\n",
        "properties": {
          "assignments": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/GtmGeomapAssignment:GtmGeomapAssignment"
            }
          },
          "defaultDatacenter": {
            "$ref": "#/types/akamai:index/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter"
          },
          "domain": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "waitOnComplete": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "aliases": [
        {
          "type": "akamai:trafficmanagement/gtmGeomap:GtmGeomap"
        }
      ]
    },
    "akamai:index/gtmProperty:GtmProperty": {
      "properties": {
        "backupCname": {
          "type": "string"
        },
        "backupIp": {
          "type": "string"
        },
        "balanceByDownloadScore": {
          "type": "boolean"
        },
        "cname": {
          "type": "string"
        },
        "comments": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "dynamicTtl": {
          "type": "integer"
        },
        "failbackDelay": {
          "type": "integer"
        },
        "failoverDelay": {
          "type": "integer"
        },
        "ghostDemandReporting": {
          "type": "boolean"
        },
        "handoutLimit": {
          "type": "integer"
        },
        "handoutMode": {
          "type": "string"
        },
        "healthMax": {
          "type": "number"
        },
        "healthMultiplier": {
          "type": "number"
        },
        "healthThreshold": {
          "type": "number"
        },
        "ipv6": {
          "type": "boolean"
        },
        "livenessTests": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/GtmPropertyLivenessTest:GtmPropertyLivenessTest"
          }
        },
        "loadImbalancePercentage": {
          "type": "number"
        },
        "mapName": {
          "type": "string"
        },
        "maxUnreachablePenalty": {
          "type": "integer"
        },
        "minLiveFraction": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "scoreAggregationType": {
          "type": "string"
        },
        "staticRrSets": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet"
          }
        },
        "staticTtl": {
          "type": "integer"
        },
        "stickinessBonusConstant": {
          "type": "integer"
        },
        "stickinessBonusPercentage": {
          "type": "integer"
        },
        "trafficTargets": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget"
          }
        },
        "type": {
          "type": "string"
        },
        "unreachableThreshold": {
          "type": "number"
        },
        "useComputedTargets": {
          "type": "boolean"
        },
        "waitOnComplete": {
          "type": "boolean"
        },
        "weightedHashBitsForIpv4": {
          "type": "integer"
        },
        "weightedHashBitsForIpv6": {
          "type": "integer"
        }
      },
      "required": [
        "domain",
        "handoutLimit",
        "handoutMode",
        "name",
        "scoreAggregationType",
        "type",
        "weightedHashBitsForIpv4",
        "weightedHashBitsForIpv6"
      ],
      "inputProperties": {
        "backupCname": {
          "type": "string"
        },
        "backupIp": {
          "type": "string"
        },
        "balanceByDownloadScore": {
          "type": "boolean"
        },
        "cname": {
          "type": "string"
        },
        "comments": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "dynamicTtl": {
          "type": "integer"
        },
        "failbackDelay": {
          "type": "integer"
        },
        "failoverDelay": {
          "type": "integer"
        },
        "ghostDemandReporting": {
          "type": "boolean"
        },
        "handoutLimit": {
          "type": "integer"
        },
        "handoutMode": {
          "type": "string"
        },
        "healthMax": {
          "type": "number"
        },
        "healthMultiplier": {
          "type": "number"
        },
        "healthThreshold": {
          "type": "number"
        },
        "ipv6": {
          "type": "boolean"
        },
        "livenessTests": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/GtmPropertyLivenessTest:GtmPropertyLivenessTest"
          }
        },
        "loadImbalancePercentage": {
          "type": "number"
        },
        "mapName": {
          "type": "string"
        },
        "maxUnreachablePenalty": {
          "type": "integer"
        },
        "minLiveFraction": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "scoreAggregationType": {
          "type": "string"
        },
        "staticRrSets": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet"
          }
        },
        "staticTtl": {
          "type": "integer"
        },
        "stickinessBonusConstant": {
          "type": "integer"
        },
        "stickinessBonusPercentage": {
          "type": "integer"
        },
        "trafficTargets": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget"
          }
        },
        "type": {
          "type": "string"
        },
        "unreachableThreshold": {
          "type": "number"
        },
        "useComputedTargets": {
          "type": "boolean"
        },
        "waitOnComplete": {
          "type": "boolean"
        }
      },
      "requiredInputs": [
        "domain",
        "handoutLimit",
        "handoutMode",
        "scoreAggregationType",
        "type"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering GtmProperty resources.\n",
        "properties": {
          "backupCname": {
            "type": "string"
          },
          "backupIp": {
            "type": "string"
          },
          "balanceByDownloadScore": {
            "type": "boolean"
          },
          "cname": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "dynamicTtl": {
            "type": "integer"
          },
          "failbackDelay": {
            "type": "integer"
          },
          "failoverDelay": {
            "type": "integer"
          },
          "ghostDemandReporting": {
            "type": "boolean"
          },
          "handoutLimit": {
            "type": "integer"
          },
          "handoutMode": {
            "type": "string"
          },
          "healthMax": {
            "type": "number"
          },
          "healthMultiplier": {
            "type": "number"
          },
          "healthThreshold": {
            "type": "number"
          },
          "ipv6": {
            "type": "boolean"
          },
          "livenessTests": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/GtmPropertyLivenessTest:GtmPropertyLivenessTest"
            }
          },
          "loadImbalancePercentage": {
            "type": "number"
          },
          "mapName": {
            "type": "string"
          },
          "maxUnreachablePenalty": {
            "type": "integer"
          },
          "minLiveFraction": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "scoreAggregationType": {
            "type": "string"
          },
          "staticRrSets": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet"
            }
          },
          "staticTtl": {
            "type": "integer"
          },
          "stickinessBonusConstant": {
            "type": "integer"
          },
          "stickinessBonusPercentage": {
            "type": "integer"
          },
          "trafficTargets": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget"
            }
          },
          "type": {
            "type": "string"
          },
          "unreachableThreshold": {
            "type": "number"
          },
          "useComputedTargets": {
            "type": "boolean"
          },
          "waitOnComplete": {
            "type": "boolean"
          },
          "weightedHashBitsForIpv4": {
            "type": "integer"
          },
          "weightedHashBitsForIpv6": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "aliases": [
        {
          "type": "akamai:trafficmanagement/gtmProperty:GtmProperty"
        }
      ]
    },
    "akamai:index/gtmResource:GtmResource": {
      "properties": {
        "aggregationType": {
          "type": "string"
        },
        "constrainedProperty": {
          "type": "string"
        },
        "decayRate": {
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "hostHeader": {
          "type": "string"
        },
        "leaderString": {
          "type": "string"
        },
        "leastSquaresDecay": {
          "type": "number"
        },
        "loadImbalancePercentage": {
          "type": "number"
        },
        "maxUMultiplicativeIncrement": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "resourceInstances": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/GtmResourceResourceInstance:GtmResourceResourceInstance"
          }
        },
        "type": {
          "type": "string"
        },
        "upperBound": {
          "type": "integer"
        },
        "waitOnComplete": {
          "type": "boolean"
        }
      },
      "required": [
        "aggregationType",
        "domain",
        "name",
        "type"
      ],
      "inputProperties": {
        "aggregationType": {
          "type": "string"
        },
        "constrainedProperty": {
          "type": "string"
        },
        "decayRate": {
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "hostHeader": {
          "type": "string"
        },
        "leaderString": {
          "type": "string"
        },
        "leastSquaresDecay": {
          "type": "number"
        },
        "loadImbalancePercentage": {
          "type": "number"
        },
        "maxUMultiplicativeIncrement": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "resourceInstances": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/GtmResourceResourceInstance:GtmResourceResourceInstance"
          }
        },
        "type": {
          "type": "string"
        },
        "upperBound": {
          "type": "integer"
        },
        "waitOnComplete": {
          "type": "boolean"
        }
      },
      "requiredInputs": [
        "aggregationType",
        "domain",
        "type"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering GtmResource resources.\n",
        "properties": {
          "aggregationType": {
            "type": "string"
          },
          "constrainedProperty": {
            "type": "string"
          },
          "decayRate": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "hostHeader": {
            "type": "string"
          },
          "leaderString": {
            "type": "string"
          },
          "leastSquaresDecay": {
            "type": "number"
          },
          "loadImbalancePercentage": {
            "type": "number"
          },
          "maxUMultiplicativeIncrement": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "resourceInstances": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/GtmResourceResourceInstance:GtmResourceResourceInstance"
            }
          },
          "type": {
            "type": "string"
          },
          "upperBound": {
            "type": "integer"
          },
          "waitOnComplete": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "aliases": [
        {
          "type": "akamai:trafficmanagement/gtmResource:GtmResource"
        }
      ]
    },
    "akamai:index/iamBlockedUserProperties:IamBlockedUserProperties": {
      "properties": {
        "blockedProperties": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "description": "List of properties to block for a user\n"
        },
        "groupId": {
          "type": "integer",
          "description": "A unique identifier for a group\n"
        },
        "identityId": {
          "type": "string",
          "description": "A unique identifier for a user's profile, which corresponds to a user's actual profile or client ID\n"
        }
      },
      "required": [
        "blockedProperties",
        "groupId",
        "identityId"
      ],
      "inputProperties": {
        "blockedProperties": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "description": "List of properties to block for a user\n"
        },
        "groupId": {
          "type": "integer",
          "description": "A unique identifier for a group\n",
          "willReplaceOnChanges": true
        },
        "identityId": {
          "type": "string",
          "description": "A unique identifier for a user's profile, which corresponds to a user's actual profile or client ID\n"
        }
      },
      "requiredInputs": [
        "blockedProperties",
        "groupId",
        "identityId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering IamBlockedUserProperties resources.\n",
        "properties": {
          "blockedProperties": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "List of properties to block for a user\n"
          },
          "groupId": {
            "type": "integer",
            "description": "A unique identifier for a group\n",
            "willReplaceOnChanges": true
          },
          "identityId": {
            "type": "string",
            "description": "A unique identifier for a user's profile, which corresponds to a user's actual profile or client ID\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/iamGroup:IamGroup": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Human readable name for a group\n"
        },
        "parentGroupId": {
          "type": "integer",
          "description": "Unique identifier for the parent group\n"
        },
        "subGroups": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "description": "Subgroups IDs\n"
        }
      },
      "required": [
        "name",
        "parentGroupId",
        "subGroups"
      ],
      "inputProperties": {
        "name": {
          "type": "string",
          "description": "Human readable name for a group\n"
        },
        "parentGroupId": {
          "type": "integer",
          "description": "Unique identifier for the parent group\n"
        }
      },
      "requiredInputs": [
        "parentGroupId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering IamGroup resources.\n",
        "properties": {
          "name": {
            "type": "string",
            "description": "Human readable name for a group\n"
          },
          "parentGroupId": {
            "type": "integer",
            "description": "Unique identifier for the parent group\n"
          },
          "subGroups": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "Subgroups IDs\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/iamRole:IamRole": {
      "properties": {
        "description": {
          "type": "string",
          "description": "The description for a role\n"
        },
        "grantedRoles": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "description": "The list of existing unique identifiers for the granted roles\n"
        },
        "name": {
          "type": "string",
          "description": "The name you supply for a role\n"
        },
        "type": {
          "type": "string",
          "description": "The role type which indicates whether it's a standard role provided by Akamai or a custom role for the account\n"
        }
      },
      "required": [
        "description",
        "grantedRoles",
        "name",
        "type"
      ],
      "inputProperties": {
        "description": {
          "type": "string",
          "description": "The description for a role\n"
        },
        "grantedRoles": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "description": "The list of existing unique identifiers for the granted roles\n"
        },
        "name": {
          "type": "string",
          "description": "The name you supply for a role\n"
        },
        "type": {
          "type": "string",
          "description": "The role type which indicates whether it's a standard role provided by Akamai or a custom role for the account\n"
        }
      },
      "requiredInputs": [
        "description",
        "grantedRoles"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering IamRole resources.\n",
        "properties": {
          "description": {
            "type": "string",
            "description": "The description for a role\n"
          },
          "grantedRoles": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "The list of existing unique identifiers for the granted roles\n"
          },
          "name": {
            "type": "string",
            "description": "The name you supply for a role\n"
          },
          "type": {
            "type": "string",
            "description": "The role type which indicates whether it's a standard role provided by Akamai or a custom role for the account\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/iamUser:IamUser": {
      "properties": {
        "address": {
          "type": "string",
          "description": "The user's street address\n"
        },
        "authGrantsJson": {
          "type": "string",
          "description": "A user's per-group role assignments, in JSON form\n"
        },
        "city": {
          "type": "string",
          "description": "The user's city\n"
        },
        "contactType": {
          "type": "string",
          "description": "To help characterize the user, the value can be any that are available from the view-contact-types operation\n"
        },
        "country": {
          "type": "string",
          "description": "As part of the user's location, the value can be any that are available from the view-supported-countries operation\n"
        },
        "email": {
          "type": "string",
          "description": "The user's email address\n"
        },
        "emailUpdatePending": {
          "type": "boolean",
          "description": "Indicates whether email update is pending\n"
        },
        "enableTfa": {
          "type": "boolean",
          "description": "Indicates whether two-factor authentication is allowed\n"
        },
        "firstName": {
          "type": "string",
          "description": "The user's first name\n"
        },
        "jobTitle": {
          "type": "string",
          "description": "The user's position at your company\n"
        },
        "lastLogin": {
          "type": "string",
          "description": "ISO 8601 timestamp indicating when the user last logged in\n"
        },
        "lastName": {
          "type": "string",
          "description": "The user's surname\n"
        },
        "lock": {
          "type": "boolean",
          "description": "Flag to block a user account\n"
        },
        "mobilePhone": {
          "type": "string",
          "description": "The user's mobile phone number\n"
        },
        "passwordExpiredAfter": {
          "type": "string",
          "description": "The date a user's password expires\n"
        },
        "phone": {
          "type": "string",
          "description": "The user's main phone number\n"
        },
        "preferredLanguage": {
          "type": "string",
          "description": "The value can be any that are available from the view-languages operation\n"
        },
        "secondaryEmail": {
          "type": "string",
          "description": "The user's secondary email address\n"
        },
        "sessionTimeout": {
          "type": "integer",
          "description": "The number of seconds it takes for the user's Control Center session to time out if there hasn't been any activity\n"
        },
        "state": {
          "type": "string",
          "description": "The user's state\n"
        },
        "tfaConfigured": {
          "type": "boolean",
          "description": "Indicates whether two-factor authentication is configured\n"
        },
        "timeZone": {
          "type": "string",
          "description": "The user's time zone. The value can be any that are available from the view-time-zones operation\n"
        },
        "userName": {
          "type": "string",
          "description": "A user's `loginId`. Typically, a user's email address\n"
        },
        "zipCode": {
          "type": "string",
          "description": "The user's five-digit ZIP code\n"
        }
      },
      "required": [
        "address",
        "authGrantsJson",
        "contactType",
        "country",
        "email",
        "emailUpdatePending",
        "enableTfa",
        "firstName",
        "lastLogin",
        "lastName",
        "passwordExpiredAfter",
        "phone",
        "preferredLanguage",
        "sessionTimeout",
        "tfaConfigured",
        "timeZone",
        "userName"
      ],
      "inputProperties": {
        "address": {
          "type": "string",
          "description": "The user's street address\n"
        },
        "authGrantsJson": {
          "type": "string",
          "description": "A user's per-group role assignments, in JSON form\n"
        },
        "city": {
          "type": "string",
          "description": "The user's city\n"
        },
        "contactType": {
          "type": "string",
          "description": "To help characterize the user, the value can be any that are available from the view-contact-types operation\n"
        },
        "country": {
          "type": "string",
          "description": "As part of the user's location, the value can be any that are available from the view-supported-countries operation\n"
        },
        "email": {
          "type": "string",
          "description": "The user's email address\n"
        },
        "enableTfa": {
          "type": "boolean",
          "description": "Indicates whether two-factor authentication is allowed\n"
        },
        "firstName": {
          "type": "string",
          "description": "The user's first name\n"
        },
        "jobTitle": {
          "type": "string",
          "description": "The user's position at your company\n"
        },
        "lastName": {
          "type": "string",
          "description": "The user's surname\n"
        },
        "lock": {
          "type": "boolean",
          "description": "Flag to block a user account\n"
        },
        "mobilePhone": {
          "type": "string",
          "description": "The user's mobile phone number\n"
        },
        "phone": {
          "type": "string",
          "description": "The user's main phone number\n"
        },
        "preferredLanguage": {
          "type": "string",
          "description": "The value can be any that are available from the view-languages operation\n"
        },
        "secondaryEmail": {
          "type": "string",
          "description": "The user's secondary email address\n"
        },
        "sessionTimeout": {
          "type": "integer",
          "description": "The number of seconds it takes for the user's Control Center session to time out if there hasn't been any activity\n"
        },
        "state": {
          "type": "string",
          "description": "The user's state\n"
        },
        "timeZone": {
          "type": "string",
          "description": "The user's time zone. The value can be any that are available from the view-time-zones operation\n"
        },
        "zipCode": {
          "type": "string",
          "description": "The user's five-digit ZIP code\n"
        }
      },
      "requiredInputs": [
        "authGrantsJson",
        "country",
        "email",
        "enableTfa",
        "firstName",
        "lastName",
        "phone"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering IamUser resources.\n",
        "properties": {
          "address": {
            "type": "string",
            "description": "The user's street address\n"
          },
          "authGrantsJson": {
            "type": "string",
            "description": "A user's per-group role assignments, in JSON form\n"
          },
          "city": {
            "type": "string",
            "description": "The user's city\n"
          },
          "contactType": {
            "type": "string",
            "description": "To help characterize the user, the value can be any that are available from the view-contact-types operation\n"
          },
          "country": {
            "type": "string",
            "description": "As part of the user's location, the value can be any that are available from the view-supported-countries operation\n"
          },
          "email": {
            "type": "string",
            "description": "The user's email address\n"
          },
          "emailUpdatePending": {
            "type": "boolean",
            "description": "Indicates whether email update is pending\n"
          },
          "enableTfa": {
            "type": "boolean",
            "description": "Indicates whether two-factor authentication is allowed\n"
          },
          "firstName": {
            "type": "string",
            "description": "The user's first name\n"
          },
          "jobTitle": {
            "type": "string",
            "description": "The user's position at your company\n"
          },
          "lastLogin": {
            "type": "string",
            "description": "ISO 8601 timestamp indicating when the user last logged in\n"
          },
          "lastName": {
            "type": "string",
            "description": "The user's surname\n"
          },
          "lock": {
            "type": "boolean",
            "description": "Flag to block a user account\n"
          },
          "mobilePhone": {
            "type": "string",
            "description": "The user's mobile phone number\n"
          },
          "passwordExpiredAfter": {
            "type": "string",
            "description": "The date a user's password expires\n"
          },
          "phone": {
            "type": "string",
            "description": "The user's main phone number\n"
          },
          "preferredLanguage": {
            "type": "string",
            "description": "The value can be any that are available from the view-languages operation\n"
          },
          "secondaryEmail": {
            "type": "string",
            "description": "The user's secondary email address\n"
          },
          "sessionTimeout": {
            "type": "integer",
            "description": "The number of seconds it takes for the user's Control Center session to time out if there hasn't been any activity\n"
          },
          "state": {
            "type": "string",
            "description": "The user's state\n"
          },
          "tfaConfigured": {
            "type": "boolean",
            "description": "Indicates whether two-factor authentication is configured\n"
          },
          "timeZone": {
            "type": "string",
            "description": "The user's time zone. The value can be any that are available from the view-time-zones operation\n"
          },
          "userName": {
            "type": "string",
            "description": "A user's `loginId`. Typically, a user's email address\n"
          },
          "zipCode": {
            "type": "string",
            "description": "The user's five-digit ZIP code\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/imagingPolicyImage:ImagingPolicyImage": {
      "properties": {
        "activateOnProduction": {
          "type": "boolean",
          "description": "With this flag set to false, the user can perform modifications on staging without affecting the version already saved\nto production. With this flag set to true, the policy will be saved on the production network. It is possible to change\nit back to false only when there are any changes to the policy qualifying it for the new version.\n"
        },
        "contractId": {
          "type": "string",
          "description": "Unique identifier for the Akamai Contract containing the Policy Set(s)\n"
        },
        "json": {
          "type": "string",
          "description": "A JSON encoded policy\n"
        },
        "policyId": {
          "type": "string",
          "description": "Unique identifier for a Policy. It is not possible to modify the id of the policy.\n"
        },
        "policysetId": {
          "type": "string",
          "description": "Unique identifier for the Image \u0026 Video Manager Policy Set.\n"
        },
        "version": {
          "type": "integer",
          "description": "The version number of this policy version\n"
        }
      },
      "required": [
        "contractId",
        "json",
        "policyId",
        "policysetId",
        "version"
      ],
      "inputProperties": {
        "activateOnProduction": {
          "type": "boolean",
          "description": "With this flag set to false, the user can perform modifications on staging without affecting the version already saved\nto production. With this flag set to true, the policy will be saved on the production network. It is possible to change\nit back to false only when there are any changes to the policy qualifying it for the new version.\n"
        },
        "contractId": {
          "type": "string",
          "description": "Unique identifier for the Akamai Contract containing the Policy Set(s)\n",
          "willReplaceOnChanges": true
        },
        "json": {
          "type": "string",
          "description": "A JSON encoded policy\n"
        },
        "policyId": {
          "type": "string",
          "description": "Unique identifier for a Policy. It is not possible to modify the id of the policy.\n",
          "willReplaceOnChanges": true
        },
        "policysetId": {
          "type": "string",
          "description": "Unique identifier for the Image \u0026 Video Manager Policy Set.\n",
          "willReplaceOnChanges": true
        }
      },
      "requiredInputs": [
        "contractId",
        "json",
        "policyId",
        "policysetId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering ImagingPolicyImage resources.\n",
        "properties": {
          "activateOnProduction": {
            "type": "boolean",
            "description": "With this flag set to false, the user can perform modifications on staging without affecting the version already saved\nto production. With this flag set to true, the policy will be saved on the production network. It is possible to change\nit back to false only when there are any changes to the policy qualifying it for the new version.\n"
          },
          "contractId": {
            "type": "string",
            "description": "Unique identifier for the Akamai Contract containing the Policy Set(s)\n",
            "willReplaceOnChanges": true
          },
          "json": {
            "type": "string",
            "description": "A JSON encoded policy\n"
          },
          "policyId": {
            "type": "string",
            "description": "Unique identifier for a Policy. It is not possible to modify the id of the policy.\n",
            "willReplaceOnChanges": true
          },
          "policysetId": {
            "type": "string",
            "description": "Unique identifier for the Image \u0026 Video Manager Policy Set.\n",
            "willReplaceOnChanges": true
          },
          "version": {
            "type": "integer",
            "description": "The version number of this policy version\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/imagingPolicySet:ImagingPolicySet": {
      "properties": {
        "contractId": {
          "type": "string",
          "description": "The unique identifier for the Akamai Contract containing the Policy Set(s)\n"
        },
        "name": {
          "type": "string",
          "description": "A friendly name for the Policy Set\n"
        },
        "region": {
          "type": "string",
          "description": "The geographic region which media using this Policy Set is optimized for\n"
        },
        "type": {
          "type": "string",
          "description": "The type of media this Policy Set manages\n"
        }
      },
      "required": [
        "contractId",
        "name",
        "region",
        "type"
      ],
      "inputProperties": {
        "contractId": {
          "type": "string",
          "description": "The unique identifier for the Akamai Contract containing the Policy Set(s)\n",
          "willReplaceOnChanges": true
        },
        "name": {
          "type": "string",
          "description": "A friendly name for the Policy Set\n"
        },
        "region": {
          "type": "string",
          "description": "The geographic region which media using this Policy Set is optimized for\n"
        },
        "type": {
          "type": "string",
          "description": "The type of media this Policy Set manages\n",
          "willReplaceOnChanges": true
        }
      },
      "requiredInputs": [
        "contractId",
        "region",
        "type"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering ImagingPolicySet resources.\n",
        "properties": {
          "contractId": {
            "type": "string",
            "description": "The unique identifier for the Akamai Contract containing the Policy Set(s)\n",
            "willReplaceOnChanges": true
          },
          "name": {
            "type": "string",
            "description": "A friendly name for the Policy Set\n"
          },
          "region": {
            "type": "string",
            "description": "The geographic region which media using this Policy Set is optimized for\n"
          },
          "type": {
            "type": "string",
            "description": "The type of media this Policy Set manages\n",
            "willReplaceOnChanges": true
          }
        },
        "type": "object"
      }
    },
    "akamai:index/imagingPolicyVideo:ImagingPolicyVideo": {
      "properties": {
        "activateOnProduction": {
          "type": "boolean",
          "description": "With this flag set to false, the user can perform modifications on staging without affecting the version already saved\nto production. With this flag set to true, the policy will be saved on the production network. It is possible to change\nit back to false only when there are any changes to the policy qualifying it for the new version.\n"
        },
        "contractId": {
          "type": "string",
          "description": "Unique identifier for the Akamai Contract containing the Policy Set(s)\n"
        },
        "json": {
          "type": "string",
          "description": "A JSON encoded policy\n"
        },
        "policyId": {
          "type": "string",
          "description": "Unique identifier for a Policy. It is not possible to modify the id of the policy.\n"
        },
        "policysetId": {
          "type": "string",
          "description": "Unique identifier for the Image \u0026 Video Manager Policy Set.\n"
        },
        "version": {
          "type": "integer",
          "description": "The version number of this policy version\n"
        }
      },
      "required": [
        "contractId",
        "json",
        "policyId",
        "policysetId",
        "version"
      ],
      "inputProperties": {
        "activateOnProduction": {
          "type": "boolean",
          "description": "With this flag set to false, the user can perform modifications on staging without affecting the version already saved\nto production. With this flag set to true, the policy will be saved on the production network. It is possible to change\nit back to false only when there are any changes to the policy qualifying it for the new version.\n"
        },
        "contractId": {
          "type": "string",
          "description": "Unique identifier for the Akamai Contract containing the Policy Set(s)\n",
          "willReplaceOnChanges": true
        },
        "json": {
          "type": "string",
          "description": "A JSON encoded policy\n"
        },
        "policyId": {
          "type": "string",
          "description": "Unique identifier for a Policy. It is not possible to modify the id of the policy.\n",
          "willReplaceOnChanges": true
        },
        "policysetId": {
          "type": "string",
          "description": "Unique identifier for the Image \u0026 Video Manager Policy Set.\n",
          "willReplaceOnChanges": true
        }
      },
      "requiredInputs": [
        "contractId",
        "json",
        "policyId",
        "policysetId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering ImagingPolicyVideo resources.\n",
        "properties": {
          "activateOnProduction": {
            "type": "boolean",
            "description": "With this flag set to false, the user can perform modifications on staging without affecting the version already saved\nto production. With this flag set to true, the policy will be saved on the production network. It is possible to change\nit back to false only when there are any changes to the policy qualifying it for the new version.\n"
          },
          "contractId": {
            "type": "string",
            "description": "Unique identifier for the Akamai Contract containing the Policy Set(s)\n",
            "willReplaceOnChanges": true
          },
          "json": {
            "type": "string",
            "description": "A JSON encoded policy\n"
          },
          "policyId": {
            "type": "string",
            "description": "Unique identifier for a Policy. It is not possible to modify the id of the policy.\n",
            "willReplaceOnChanges": true
          },
          "policysetId": {
            "type": "string",
            "description": "Unique identifier for the Image \u0026 Video Manager Policy Set.\n",
            "willReplaceOnChanges": true
          },
          "version": {
            "type": "integer",
            "description": "The version number of this policy version\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/networkList:NetworkList": {
      "properties": {
        "contractId": {
          "type": "string",
          "description": "contract ID\n"
        },
        "description": {
          "type": "string",
          "description": "A description of the network list\n"
        },
        "groupId": {
          "type": "integer",
          "description": "group ID\n"
        },
        "lists": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of IP addresses or locations to be included in the list, added to an existing list, or removed from an existing\nlist\n"
        },
        "mode": {
          "type": "string",
          "description": "A string specifying the interpretation of the `list` parameter. Must be 'APPEND', 'REPLACE', or 'REMOVE'\n"
        },
        "name": {
          "type": "string",
          "description": "The name to be assigned to the network list\n"
        },
        "networkListId": {
          "type": "string",
          "description": "network list ID\n"
        },
        "syncPoint": {
          "type": "integer",
          "description": "sync point\n"
        },
        "type": {
          "type": "string",
          "description": "The type of the network list; must be either 'IP' or 'GEO'\n"
        },
        "uniqueid": {
          "type": "string",
          "description": "unique ID\n"
        }
      },
      "required": [
        "description",
        "mode",
        "name",
        "networkListId",
        "syncPoint",
        "type",
        "uniqueid"
      ],
      "inputProperties": {
        "contractId": {
          "type": "string",
          "description": "contract ID\n"
        },
        "description": {
          "type": "string",
          "description": "A description of the network list\n"
        },
        "groupId": {
          "type": "integer",
          "description": "group ID\n"
        },
        "lists": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of IP addresses or locations to be included in the list, added to an existing list, or removed from an existing\nlist\n"
        },
        "mode": {
          "type": "string",
          "description": "A string specifying the interpretation of the `list` parameter. Must be 'APPEND', 'REPLACE', or 'REMOVE'\n"
        },
        "name": {
          "type": "string",
          "description": "The name to be assigned to the network list\n"
        },
        "type": {
          "type": "string",
          "description": "The type of the network list; must be either 'IP' or 'GEO'\n"
        }
      },
      "requiredInputs": [
        "description",
        "mode",
        "type"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering NetworkList resources.\n",
        "properties": {
          "contractId": {
            "type": "string",
            "description": "contract ID\n"
          },
          "description": {
            "type": "string",
            "description": "A description of the network list\n"
          },
          "groupId": {
            "type": "integer",
            "description": "group ID\n"
          },
          "lists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of IP addresses or locations to be included in the list, added to an existing list, or removed from an existing\nlist\n"
          },
          "mode": {
            "type": "string",
            "description": "A string specifying the interpretation of the `list` parameter. Must be 'APPEND', 'REPLACE', or 'REMOVE'\n"
          },
          "name": {
            "type": "string",
            "description": "The name to be assigned to the network list\n"
          },
          "networkListId": {
            "type": "string",
            "description": "network list ID\n"
          },
          "syncPoint": {
            "type": "integer",
            "description": "sync point\n"
          },
          "type": {
            "type": "string",
            "description": "The type of the network list; must be either 'IP' or 'GEO'\n"
          },
          "uniqueid": {
            "type": "string",
            "description": "unique ID\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/networkListActivations:NetworkListActivations": {
      "properties": {
        "network": {
          "type": "string",
          "description": "The Akamai network on which the list is activated: STAGING or PRODUCTION\n"
        },
        "networkListId": {
          "type": "string",
          "description": "Unique identifier of the network list\n"
        },
        "notes": {
          "type": "string",
          "description": "Descriptive text to accompany the activation\n"
        },
        "notificationEmails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of email addresses of Control Center users who receive an email when activation of this list is complete\n"
        },
        "status": {
          "type": "string",
          "description": "This network list's current activation status in the environment specified by the \"network\" attribute\n"
        },
        "syncPoint": {
          "type": "integer",
          "description": "Identifies the sync point of the network list to be activated\n"
        }
      },
      "required": [
        "networkListId",
        "notificationEmails",
        "status",
        "syncPoint"
      ],
      "inputProperties": {
        "network": {
          "type": "string",
          "description": "The Akamai network on which the list is activated: STAGING or PRODUCTION\n"
        },
        "networkListId": {
          "type": "string",
          "description": "Unique identifier of the network list\n",
          "willReplaceOnChanges": true
        },
        "notes": {
          "type": "string",
          "description": "Descriptive text to accompany the activation\n"
        },
        "notificationEmails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of email addresses of Control Center users who receive an email when activation of this list is complete\n"
        },
        "syncPoint": {
          "type": "integer",
          "description": "Identifies the sync point of the network list to be activated\n"
        }
      },
      "requiredInputs": [
        "networkListId",
        "notificationEmails",
        "syncPoint"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering NetworkListActivations resources.\n",
        "properties": {
          "network": {
            "type": "string",
            "description": "The Akamai network on which the list is activated: STAGING or PRODUCTION\n"
          },
          "networkListId": {
            "type": "string",
            "description": "Unique identifier of the network list\n",
            "willReplaceOnChanges": true
          },
          "notes": {
            "type": "string",
            "description": "Descriptive text to accompany the activation\n"
          },
          "notificationEmails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of email addresses of Control Center users who receive an email when activation of this list is complete\n"
          },
          "status": {
            "type": "string",
            "description": "This network list's current activation status in the environment specified by the \"network\" attribute\n"
          },
          "syncPoint": {
            "type": "integer",
            "description": "Identifies the sync point of the network list to be activated\n"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/networkListDescription:NetworkListDescription": {
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "networkListId": {
          "type": "string"
        }
      },
      "required": [
        "description",
        "name",
        "networkListId"
      ],
      "inputProperties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "networkListId": {
          "type": "string"
        }
      },
      "requiredInputs": [
        "description",
        "networkListId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering NetworkListDescription resources.\n",
        "properties": {
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "networkListId": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "akamai:index/networkListSubscription:NetworkListSubscription": {
      "properties": {
        "networkLists": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recipients": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "networkLists",
        "recipients"
      ],
      "inputProperties": {
        "networkLists": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recipients": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "requiredInputs": [
        "networkLists",
        "recipients"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering NetworkListSubscription resources.\n",
        "properties": {
          "networkLists": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "recipients": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "type": "object"
      }
    },
    "akamai:index/property:Property": {
      "properties": {
        "contractId": {
          "type": "string",
          "description": "Contract ID to be assigned to the Property\n"
        },
        "groupId": {
          "type": "string",
          "description": "Group ID to be assigned to the Property\n"
        },
        "hostnames": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/PropertyHostname:PropertyHostname"
          }
        },
        "latestVersion": {
          "type": "integer",
          "description": "Property's current latest version number\n"
        },
        "name": {
          "type": "string",
          "description": "Name to give to the Property (must be unique)\n"
        },
        "productId": {
          "type": "string",
          "description": "Product ID to be assigned to the Property\n"
        },
        "productionVersion": {
          "type": "integer",
          "description": "Property's version currently activated in production (zero when not active in production)\n"
        },
        "readVersion": {
          "type": "integer",
          "description": "Required property's version to be read\n"
        },
        "ruleErrors": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/PropertyRuleError:PropertyRuleError"
          }
        },
        "ruleFormat": {
          "type": "string",
          "description": "Specify the rule format version (defaults to latest version available when created)\n"
        },
        "rules": {
          "type": "string",
          "description": "Property Rules as JSON\n"
        },
        "stagingVersion": {
          "type": "integer",
          "description": "Property's version currently activated in staging (zero when not active in staging)\n"
        }
      },
      "required": [
        "contractId",
        "groupId",
        "latestVersion",
        "name",
        "productId",
        "productionVersion",
        "readVersion",
        "ruleErrors",
        "ruleFormat",
        "rules",
        "stagingVersion"
      ],
      "inputProperties": {
        "contractId": {
          "type": "string",
          "description": "Contract ID to be assigned to the Property\n"
        },
        "groupId": {
          "type": "string",
          "description": "Group ID to be assigned to the Property\n"
        },
        "hostnames": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/PropertyHostname:PropertyHostname"
          }
        },
        "name": {
          "type": "string",
          "description": "Name to give to the Property (must be unique)\n",
          "willReplaceOnChanges": true
        },
        "productId": {
          "type": "string",
          "description": "Product ID to be assigned to the Property\n"
        },
        "ruleFormat": {
          "type": "string",
          "description": "Specify the rule format version (defaults to latest version available when created)\n"
        },
        "rules": {
          "type": "string",
          "description": "Property Rules as JSON\n"
        }
      },
      "requiredInputs": [
        "contractId",
        "groupId",
        "productId"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering Property resources.\n",
        "properties": {
          "contractId": {
            "type": "string",
            "description": "Contract ID to be assigned to the Property\n"
          },
          "groupId": {
            "type": "string",
            "description": "Group ID to be assigned to the Property\n"
          },
          "hostnames": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/PropertyHostname:PropertyHostname"
            }
          },
          "latestVersion": {
            "type": "integer",
            "description": "Property's current latest version number\n"
          },
          "name": {
            "type": "string",
            "description": "Name to give to the Property (must be unique)\n",
            "willReplaceOnChanges": true
          },
          "productId": {
            "type": "string",
            "description": "Product ID to be assigned to the Property\n"
          },
          "productionVersion": {
            "type": "integer",
            "description": "Property's version currently activated in production (zero when not active in production)\n"
          },
          "readVersion": {
            "type": "integer",
            "description": "Required property's version to be read\n"
          },
          "ruleErrors": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/PropertyRuleError:PropertyRuleError"
            }
          },
          "ruleFormat": {
            "type": "string",
            "description": "Specify the rule format version (defaults to latest version available when created)\n"
          },
          "rules": {
            "type": "string",
            "description": "Property Rules as JSON\n"
          },
          "stagingVersion": {
            "type": "integer",
            "description": "Property's version currently activated in staging (zero when not active in staging)\n"
          }
        },
        "type": "object"
      },
      "aliases": [
        {
          "type": "akamai:properties/property:Property"
        }
      ]
    },
    "akamai:index/propertyActivation:PropertyActivation": {
      "properties": {
        "activationId": {
          "type": "string"
        },
        "autoAcknowledgeRuleWarnings": {
          "type": "boolean",
          "description": "Automatically acknowledge all rule warnings for activation to continue. Default is false\n"
        },
        "complianceRecord": {
          "$ref": "#/types/akamai:index/PropertyActivationComplianceRecord:PropertyActivationComplianceRecord",
          "description": "Provides an audit record when activating on a production network\n"
        },
        "contacts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "errors": {
          "type": "string"
        },
        "network": {
          "type": "string"
        },
        "note": {
          "type": "string",
          "description": "assigns a log message to the activation request\n"
        },
        "propertyId": {
          "type": "string"
        },
        "ruleErrors": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/PropertyActivationRuleError:PropertyActivationRuleError"
          }
        },
        "status": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        },
        "warnings": {
          "type": "string"
        }
      },
      "required": [
        "activationId",
        "contacts",
        "errors",
        "propertyId",
        "ruleErrors",
        "status",
        "version",
        "warnings"
      ],
      "inputProperties": {
        "activationId": {
          "type": "string"
        },
        "autoAcknowledgeRuleWarnings": {
          "type": "boolean",
          "description": "Automatically acknowledge all rule warnings for activation to continue. Default is false\n"
        },
        "complianceRecord": {
          "$ref": "#/types/akamai:index/PropertyActivationComplianceRecord:PropertyActivationComplianceRecord",
          "description": "Provides an audit record when activating on a production network\n"
        },
        "contacts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "network": {
          "type": "string"
        },
        "note": {
          "type": "string",
          "description": "assigns a log message to the activation request\n"
        },
        "propertyId": {
          "type": "string"
        },
        "ruleErrors": {
          "type": "array",
          "items": {
            "$ref": "#/types/akamai:index/PropertyActivationRuleError:PropertyActivationRuleError"
          }
        },
        "version": {
          "type": "integer"
        }
      },
      "requiredInputs": [
        "contacts",
        "propertyId",
        "version"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering PropertyActivation resources.\n",
        "properties": {
          "activationId": {
            "type": "string"
          },
          "autoAcknowledgeRuleWarnings": {
            "type": "boolean",
            "description": "Automatically acknowledge all rule warnings for activation to continue. Default is false\n"
          },
          "complianceRecord": {
            "$ref": "#/types/akamai:index/PropertyActivationComplianceRecord:PropertyActivationComplianceRecord",
            "description": "Provides an audit record when activating on a production network\n"
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "errors": {
            "type": "string"
          },
          "network": {
            "type": "string"
          },
          "note": {
            "type": "string",
            "description": "assigns a log message to the activation request\n"
          },
          "propertyId": {
            "type": "string"
          },
          "ruleErrors": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/PropertyActivationRuleError:PropertyActivationRuleError"
            }
          },
          "status": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          },
          "warnings": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "aliases": [
        {
          "type": "akamai:properties/propertyActivation:PropertyActivation"
        }
      ]
    },
    "akamai:index/propertyInclude:PropertyInclude": {
      "properties": {
        "contractId": {
          "type": "string",
          "description": "Identifies the contract to which the include is assigned\n"
        },
        "groupId": {
          "type": "string",
          "description": "Identifies the group to which the include is assigned\n"
        },
        "latestVersion": {
          "type": "integer",
          "description": "Specifies the most recent version of the include\n"
        },
        "name": {
          "type": "string",
          "description": "A descriptive name for the include\n"
        },
        "productId": {
          "type": "string",
          "description": "The product assigned to the include\n"
        },
        "productionVersion": {
          "type": "string",
          "description": "The most recent version to be activated to the production network\n"
        },
        "ruleErrors": {
          "type": "string",
          "description": "Rule validation errors\n"
        },
        "ruleFormat": {
          "type": "string",
          "description": "Indicates the versioned set of features and criteria\n"
        },
        "ruleWarnings": {
          "type": "string",
          "description": "Rule validation warnings\n"
        },
        "rules": {
          "type": "string",
          "description": "Property Rules as JSON\n"
        },
        "stagingVersion": {
          "type": "string",
          "description": "The most recent version to be activated to the staging network\n"
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of the include, either 'MICROSERVICES' or 'COMMON_SETTINGS'\n"
        }
      },
      "required": [
        "contractId",
        "groupId",
        "latestVersion",
        "name",
        "productionVersion",
        "ruleErrors",
        "ruleFormat",
        "ruleWarnings",
        "rules",
        "stagingVersion",
        "type"
      ],
      "inputProperties": {
        "contractId": {
          "type": "string",
          "description": "Identifies the contract to which the include is assigned\n",
          "willReplaceOnChanges": true
        },
        "groupId": {
          "type": "string",
          "description": "Identifies the group to which the include is assigned\n",
          "willReplaceOnChanges": true
        },
        "name": {
          "type": "string",
          "description": "A descriptive name for the include\n",
          "willReplaceOnChanges": true
        },
        "productId": {
          "type": "string",
          "description": "The product assigned to the include\n",
          "willReplaceOnChanges": true
        },
        "ruleFormat": {
          "type": "string",
          "description": "Indicates the versioned set of features and criteria\n"
        },
        "rules": {
          "type": "string",
          "description": "Property Rules as JSON\n"
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of the include, either 'MICROSERVICES' or 'COMMON_SETTINGS'\n",
          "willReplaceOnChanges": true
        }
      },
      "requiredInputs": [
        "contractId",
        "groupId",
        "ruleFormat",
        "type"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering PropertyInclude resources.\n",
        "properties": {
          "contractId": {
            "type": "string",
            "description": "Identifies the contract to which the include is assigned\n",
            "willReplaceOnChanges": true
          },
          "groupId": {
            "type": "string",
            "description": "Identifies the group to which the include is assigned\n",
            "willReplaceOnChanges": true
          },
          "latestVersion": {
            "type": "integer",
            "description": "Specifies the most recent version of the include\n"
          },
          "name": {
            "type": "string",
            "description": "A descriptive name for the include\n",
            "willReplaceOnChanges": true
          },
          "productId": {
            "type": "string",
            "description": "The product assigned to the include\n",
            "willReplaceOnChanges": true
          },
          "productionVersion": {
            "type": "string",
            "description": "The most recent version to be activated to the production network\n"
          },
          "ruleErrors": {
            "type": "string",
            "description": "Rule validation errors\n"
          },
          "ruleFormat": {
            "type": "string",
            "description": "Indicates the versioned set of features and criteria\n"
          },
          "ruleWarnings": {
            "type": "string",
            "description": "Rule validation warnings\n"
          },
          "rules": {
            "type": "string",
            "description": "Property Rules as JSON\n"
          },
          "stagingVersion": {
            "type": "string",
            "description": "The most recent version to be activated to the staging network\n"
          },
          "type": {
            "type": "string",
            "description": "Specifies the type of the include, either 'MICROSERVICES' or 'COMMON_SETTINGS'\n",
            "willReplaceOnChanges": true
          }
        },
        "type": "object"
      }
    },
    "akamai:index/propertyIncludeActivation:PropertyIncludeActivation": {
      "properties": {
        "autoAcknowledgeRuleWarnings": {
          "type": "boolean",
          "description": "Automatically acknowledge all rule warnings for activation and continue\n"
        },
        "complianceRecord": {
          "$ref": "#/types/akamai:index/PropertyIncludeActivationComplianceRecord:PropertyIncludeActivationComplianceRecord",
          "description": "Provides an audit record when activating on a production network\n"
        },
        "contractId": {
          "type": "string",
          "description": "The contract under which the include is activated\n"
        },
        "groupId": {
          "type": "string",
          "description": "The group under which the include is activated\n"
        },
        "includeId": {
          "type": "string",
          "description": "The unique identifier of the include\n"
        },
        "network": {
          "type": "string",
          "description": "The network for which the activation will be performed\n"
        },
        "note": {
          "type": "string",
          "description": "The note to assign to a log message of the activation request\n"
        },
        "notifyEmails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of email addresses to notify about an activation status\n"
        },
        "validations": {
          "type": "string",
          "description": "The validation information in JSON format\n"
        },
        "version": {
          "type": "integer",
          "description": "The unique identifier of the include\n"
        }
      },
      "required": [
        "contractId",
        "groupId",
        "includeId",
        "network",
        "notifyEmails",
        "validations",
        "version"
      ],
      "inputProperties": {
        "autoAcknowledgeRuleWarnings": {
          "type": "boolean",
          "description": "Automatically acknowledge all rule warnings for activation and continue\n"
        },
        "complianceRecord": {
          "$ref": "#/types/akamai:index/PropertyIncludeActivationComplianceRecord:PropertyIncludeActivationComplianceRecord",
          "description": "Provides an audit record when activating on a production network\n"
        },
        "contractId": {
          "type": "string",
          "description": "The contract under which the include is activated\n",
          "willReplaceOnChanges": true
        },
        "groupId": {
          "type": "string",
          "description": "The group under which the include is activated\n",
          "willReplaceOnChanges": true
        },
        "includeId": {
          "type": "string",
          "description": "The unique identifier of the include\n",
          "willReplaceOnChanges": true
        },
        "network": {
          "type": "string",
          "description": "The network for which the activation will be performed\n",
          "willReplaceOnChanges": true
        },
        "note": {
          "type": "string",
          "description": "The note to assign to a log message of the activation request\n"
        },
        "notifyEmails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of email addresses to notify about an activation status\n"
        },
        "version": {
          "type": "integer",
          "description": "The unique identifier of the include\n"
        }
      },
      "requiredInputs": [
        "contractId",
        "groupId",
        "includeId",
        "network",
        "notifyEmails",
        "version"
      ],
      "stateInputs": {
        "description": "Input properties used for looking up and filtering PropertyIncludeActivation resources.\n",
        "properties": {
          "autoAcknowledgeRuleWarnings": {
            "type": "boolean",
            "description": "Automatically acknowledge all rule warnings for activation and continue\n"
          },
          "complianceRecord": {
            "$ref": "#/types/akamai:index/PropertyIncludeActivationComplianceRecord:PropertyIncludeActivationComplianceRecord",
            "description": "Provides an audit record when activating on a production network\n"
          },
          "contractId": {
            "type": "string",
            "description": "The contract under which the include is activated\n",
            "willReplaceOnChanges": true
          },
          "groupId": {
            "type": "string",
            "description": "The group under which the include is activated\n",
            "willReplaceOnChanges": true
          },
          "includeId": {
            "type": "string",
            "description": "The unique identifier of the include\n",
            "willReplaceOnChanges": true
          },
          "network": {
            "type": "string",
            "description": "The network for which the activation will be performed\n",
            "willReplaceOnChanges": true
          },
          "note": {
            "type": "string",
            "description": "The note to assign to a log message of the activation request\n"
          },
          "notifyEmails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of email addresses to notify about an activation status\n"
          },
          "validations": {
            "type": "string",
            "description": "The validation information in JSON format\n"
          },
          "version": {
            "type": "integer",
            "description": "The unique identifier of the include\n"
          }
        },
        "type": "object"
      }
    }
  },
  "functions": {
    "akamai:edgedns/getAuthoritiesSet:getAuthoritiesSet": {
      "deprecationMessage": "akamai.edgedns/getauthoritiesset.getAuthoritiesSet has been deprecated in favor of akamai.index/getauthoritiesset.getAuthoritiesSet",
      "inputs": {
        "description": "A collection of arguments for invoking getAuthoritiesSet.\n",
        "properties": {
          "contract": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "contract"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAuthoritiesSet.\n",
        "properties": {
          "authorities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contract": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          }
        },
        "type": "object",
        "required": [
          "authorities",
          "contract",
          "id"
        ]
      }
    },
    "akamai:edgedns/getDnsRecordSet:getDnsRecordSet": {
      "deprecationMessage": "akamai.edgedns/getdnsrecordset.getDnsRecordSet has been deprecated in favor of akamai.index/getdnsrecordset.getDnsRecordSet",
      "inputs": {
        "description": "A collection of arguments for invoking getDnsRecordSet.\n",
        "properties": {
          "host": {
            "type": "string"
          },
          "recordType": {
            "type": "string"
          },
          "zone": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "host",
          "recordType",
          "zone"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getDnsRecordSet.\n",
        "properties": {
          "host": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "rdatas": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "recordType": {
            "type": "string"
          },
          "zone": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "host",
          "rdatas",
          "recordType",
          "zone",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecAdvancedSettingsEvasivePathMatch:getAppSecAdvancedSettingsEvasivePathMatch": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecAdvancedSettingsEvasivePathMatch.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecAdvancedSettingsEvasivePathMatch.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "outputText",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecAdvancedSettingsLogging:getAppSecAdvancedSettingsLogging": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecAdvancedSettingsLogging.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecAdvancedSettingsLogging.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "outputText",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecAdvancedSettingsPragmaHeader:getAppSecAdvancedSettingsPragmaHeader": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecAdvancedSettingsPragmaHeader.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecAdvancedSettingsPragmaHeader.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "outputText",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecAdvancedSettingsPrefetch:getAppSecAdvancedSettingsPrefetch": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecAdvancedSettingsPrefetch.\n",
        "properties": {
          "configId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecAdvancedSettingsPrefetch.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "outputText",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecApiEndpoints:getAppSecApiEndpoints": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecApiEndpoints.\n",
        "properties": {
          "apiName": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecApiEndpoints.\n",
        "properties": {
          "apiName": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "idLists": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "idLists",
          "json",
          "outputText",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecApiRequestConstraints:getAppSecApiRequestConstraints": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecApiRequestConstraints.\n",
        "properties": {
          "apiId": {
            "type": "integer"
          },
          "configId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "securityPolicyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecApiRequestConstraints.\n",
        "properties": {
          "apiId": {
            "type": "integer"
          },
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "outputText",
          "securityPolicyId",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecAttackGroups:getAppSecAttackGroups": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecAttackGroups.\n",
        "properties": {
          "attackGroup": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "securityPolicyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecAttackGroups.\n",
        "properties": {
          "attackGroup": {
            "type": "string"
          },
          "attackGroupAction": {
            "type": "string"
          },
          "conditionException": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "attackGroupAction",
          "conditionException",
          "configId",
          "json",
          "outputText",
          "securityPolicyId",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecBypassNetworkLists:getAppSecBypassNetworkLists": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecBypassNetworkLists.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "securityPolicyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecBypassNetworkLists.\n",
        "properties": {
          "bypassNetworkLists": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "bypassNetworkLists",
          "configId",
          "json",
          "outputText",
          "securityPolicyId",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecConfiguration:getAppSecConfiguration": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecConfiguration.\n",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecConfiguration.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "latestVersion": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          },
          "productionVersion": {
            "type": "integer"
          },
          "stagingVersion": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "latestVersion",
          "outputText",
          "productionVersion",
          "stagingVersion",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecConfigurationVersion:getAppSecConfigurationVersion": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecConfigurationVersion.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "version": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecConfigurationVersion.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "latestVersion": {
            "type": "integer"
          },
          "outputText": {
            "type": "string"
          },
          "productionStatus": {
            "type": "string"
          },
          "stagingStatus": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "latestVersion",
          "outputText",
          "productionStatus",
          "stagingStatus",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecContractsGroups:getAppSecContractsGroups": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecContractsGroups.\n",
        "properties": {
          "contractid": {
            "type": "string"
          },
          "groupid": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecContractsGroups.\n",
        "properties": {
          "contractid": {
            "type": "string"
          },
          "defaultContractid": {
            "type": "string"
          },
          "defaultGroupid": {
            "type": "integer"
          },
          "groupid": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "defaultContractid",
          "defaultGroupid",
          "json",
          "outputText",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecCustomDeny:getAppSecCustomDeny": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecCustomDeny.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "customDenyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecCustomDeny.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "customDenyId": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "outputText",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecCustomRuleActions:getAppSecCustomRuleActions": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecCustomRuleActions.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "customRuleId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "securityPolicyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecCustomRuleActions.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "customRuleId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "outputText": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "outputText",
          "securityPolicyId",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecCustomRules:getAppSecCustomRules": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecCustomRules.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "customRuleId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecCustomRules.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "customRuleId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "outputText",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecEval:getAppSecEval": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecEval.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "securityPolicyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecEval.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "outputText": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "outputText",
          "securityPolicyId",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecEvalGroups:getAppSecEvalGroups": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecEvalGroups.\n",
        "properties": {
          "attackGroup": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "securityPolicyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecEvalGroups.\n",
        "properties": {
          "attackGroup": {
            "type": "string"
          },
          "attackGroupAction": {
            "type": "string"
          },
          "conditionException": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "attackGroupAction",
          "conditionException",
          "configId",
          "json",
          "outputText",
          "securityPolicyId",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecEvalPenaltyBox:getAppSecEvalPenaltyBox": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecEvalPenaltyBox.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "securityPolicyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecEvalPenaltyBox.\n",
        "properties": {
          "action": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "enabled": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "outputText": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "action",
          "configId",
          "enabled",
          "outputText",
          "securityPolicyId",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecEvalRules:getAppSecEvalRules": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecEvalRules.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "ruleId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "securityPolicyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecEvalRules.\n",
        "properties": {
          "conditionException": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "evalRuleAction": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          },
          "ruleId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "conditionException",
          "configId",
          "evalRuleAction",
          "json",
          "outputText",
          "securityPolicyId",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecExportConfiguration:getAppSecExportConfiguration": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecExportConfiguration.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "searches": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "version"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecExportConfiguration.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          },
          "searches": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "outputText",
          "version",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecFailoverHostnames:getAppSecFailoverHostnames": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecFailoverHostnames.\n",
        "properties": {
          "configId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecFailoverHostnames.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "hostnames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "hostnames",
          "json",
          "outputText",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecHostnameCoverage:getAppSecHostnameCoverage": {
      "outputs": {
        "description": "A collection of values returned by getAppSecHostnameCoverage.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "json",
          "outputText",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecHostnameCoverageMatchTargets:getAppSecHostnameCoverageMatchTargets": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecHostnameCoverageMatchTargets.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "hostname": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "hostname"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecHostnameCoverageMatchTargets.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "hostname": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "hostname",
          "json",
          "outputText",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecHostnameCoverageOverlapping:getAppSecHostnameCoverageOverlapping": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecHostnameCoverageOverlapping.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "hostname": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "hostname"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecHostnameCoverageOverlapping.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "hostname": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "hostname",
          "json",
          "outputText",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecIPGeo:getAppSecIPGeo": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecIPGeo.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "securityPolicyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecIPGeo.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "exceptionIpNetworkLists": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "geoNetworkLists": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "ipNetworkLists": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "mode": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          },
          "ukraineGeoControlAction": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "exceptionIpNetworkLists",
          "geoNetworkLists",
          "ipNetworkLists",
          "mode",
          "outputText",
          "securityPolicyId",
          "ukraineGeoControlAction",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecMalwareContentTypes:getAppSecMalwareContentTypes": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecMalwareContentTypes.\n",
        "properties": {
          "configId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecMalwareContentTypes.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "outputText",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecMalwarePolicies:getAppSecMalwarePolicies": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecMalwarePolicies.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "malwarePolicyId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecMalwarePolicies.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "malwarePolicyId": {
            "type": "integer"
          },
          "outputText": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "outputText",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecMalwarePolicyActions:getAppSecMalwarePolicyActions": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecMalwarePolicyActions.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "malwarePolicyId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "securityPolicyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecMalwarePolicyActions.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "malwarePolicyId": {
            "type": "integer"
          },
          "outputText": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "outputText",
          "securityPolicyId",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecMatchTargets:getAppSecMatchTargets": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecMatchTargets.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "matchTargetId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecMatchTargets.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "matchTargetId": {
            "type": "integer"
          },
          "outputText": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "outputText",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecPenaltyBox:getAppSecPenaltyBox": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecPenaltyBox.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "securityPolicyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecPenaltyBox.\n",
        "properties": {
          "action": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "enabled": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "outputText": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "action",
          "configId",
          "enabled",
          "outputText",
          "securityPolicyId",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecRatePolicies:getAppSecRatePolicies": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecRatePolicies.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "ratePolicyId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecRatePolicies.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          },
          "ratePolicyId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "outputText",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecRatePolicyActions:getAppSecRatePolicyActions": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecRatePolicyActions.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "ratePolicyId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "securityPolicyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecRatePolicyActions.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "outputText": {
            "type": "string"
          },
          "ratePolicyId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "outputText",
          "securityPolicyId",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecReputationProfileActions:getAppSecReputationProfileActions": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecReputationProfileActions.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "reputationProfileId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "securityPolicyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecReputationProfileActions.\n",
        "properties": {
          "action": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          },
          "reputationProfileId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "action",
          "configId",
          "json",
          "outputText",
          "securityPolicyId",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecReputationProfileAnalysis:getAppSecReputationProfileAnalysis": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecReputationProfileAnalysis.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "securityPolicyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecReputationProfileAnalysis.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "outputText",
          "securityPolicyId",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecReputationProfiles:getAppSecReputationProfiles": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecReputationProfiles.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "reputationProfileId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecReputationProfiles.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          },
          "reputationProfileId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "outputText",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecRuleUpgradeDetails:getAppSecRuleUpgradeDetails": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecRuleUpgradeDetails.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "securityPolicyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecRuleUpgradeDetails.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "outputText",
          "securityPolicyId",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecRules:getAppSecRules": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecRules.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "ruleId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "securityPolicyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecRules.\n",
        "properties": {
          "conditionException": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          },
          "ruleAction": {
            "type": "string"
          },
          "ruleId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "conditionException",
          "configId",
          "json",
          "outputText",
          "ruleAction",
          "securityPolicyId",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecSecurityPolicy:getAppSecSecurityPolicy": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecSecurityPolicy.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "securityPolicyName": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecSecurityPolicy.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          },
          "securityPolicyIdLists": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "securityPolicyName": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "outputText",
          "securityPolicyId",
          "securityPolicyIdLists",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecSecurityPolicyProtections:getAppSecSecurityPolicyProtections": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecSecurityPolicyProtections.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "securityPolicyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecSecurityPolicyProtections.\n",
        "properties": {
          "applyApiConstraints": {
            "type": "boolean"
          },
          "applyApplicationLayerControls": {
            "type": "boolean"
          },
          "applyBotmanControls": {
            "type": "boolean"
          },
          "applyMalwareControls": {
            "type": "boolean"
          },
          "applyNetworkLayerControls": {
            "type": "boolean"
          },
          "applyRateControls": {
            "type": "boolean"
          },
          "applyReputationControls": {
            "type": "boolean"
          },
          "applySlowPostControls": {
            "type": "boolean"
          },
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "applyApiConstraints",
          "applyApplicationLayerControls",
          "applyBotmanControls",
          "applyMalwareControls",
          "applyNetworkLayerControls",
          "applyRateControls",
          "applyReputationControls",
          "applySlowPostControls",
          "configId",
          "json",
          "outputText",
          "securityPolicyId",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecSelectableHostnames:getAppSecSelectableHostnames": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecSelectableHostnames.\n",
        "properties": {
          "activeInProduction": {
            "type": "boolean"
          },
          "activeInStaging": {
            "type": "boolean"
          },
          "configId": {
            "type": "integer"
          },
          "contractid": {
            "type": "string"
          },
          "groupid": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecSelectableHostnames.\n",
        "properties": {
          "activeInProduction": {
            "type": "boolean"
          },
          "activeInStaging": {
            "type": "boolean"
          },
          "configId": {
            "type": "integer"
          },
          "contractid": {
            "type": "string"
          },
          "groupid": {
            "type": "integer"
          },
          "hostnames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hostnamesJson": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "outputText": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "hostnames",
          "hostnamesJson",
          "outputText",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecSelectedHostnames:getAppSecSelectedHostnames": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecSelectedHostnames.\n",
        "properties": {
          "configId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecSelectedHostnames.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "hostnames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hostnamesJson": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "outputText": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "hostnames",
          "hostnamesJson",
          "outputText",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecSiemDefinitions:getAppSecSiemDefinitions": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecSiemDefinitions.\n",
        "properties": {
          "siemDefinitionName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecSiemDefinitions.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          },
          "siemDefinitionName": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "json",
          "outputText",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecSiemSettings:getAppSecSiemSettings": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecSiemSettings.\n",
        "properties": {
          "configId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecSiemSettings.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "outputText",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecSlowPost:getAppSecSlowPost": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecSlowPost.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "securityPolicyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecSlowPost.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "outputText",
          "securityPolicyId",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecThreatIntel:getAppSecThreatIntel": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecThreatIntel.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "securityPolicyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecThreatIntel.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          },
          "threatIntel": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "outputText",
          "securityPolicyId",
          "threatIntel",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecTuningRecommendations:getAppSecTuningRecommendations": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecTuningRecommendations.\n",
        "properties": {
          "attackGroup": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "ruleId": {
            "type": "integer"
          },
          "rulesetType": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecTuningRecommendations.\n",
        "properties": {
          "attackGroup": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "ruleId": {
            "type": "integer"
          },
          "rulesetType": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecVersionNotes:getAppSecVersionNotes": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecVersionNotes.\n",
        "properties": {
          "configId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecVersionNotes.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "outputText",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecWafMode:getAppSecWafMode": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecWafMode.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "securityPolicyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecWafMode.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "currentRuleset": {
            "type": "string"
          },
          "evalExpirationDate": {
            "type": "string"
          },
          "evalRuleset": {
            "type": "string"
          },
          "evalStatus": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "mode": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "currentRuleset",
          "evalExpirationDate",
          "evalRuleset",
          "evalStatus",
          "json",
          "mode",
          "outputText",
          "securityPolicyId",
          "id"
        ]
      }
    },
    "akamai:index/getAppSecWapSelectedHostnames:getAppSecWapSelectedHostnames": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppSecWapSelectedHostnames.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "securityPolicyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppSecWapSelectedHostnames.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "evaluatedHosts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "matchTargets": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          },
          "protectedHosts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "securityPolicyId": {
            "type": "string"
          },
          "selectedHosts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "type": "object",
        "required": [
          "configId",
          "evaluatedHosts",
          "json",
          "matchTargets",
          "outputText",
          "protectedHosts",
          "securityPolicyId",
          "selectedHosts",
          "id"
        ]
      }
    },
    "akamai:index/getAppsecAdvancedSettingsAttackPayloadLogging:getAppsecAdvancedSettingsAttackPayloadLogging": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppsecAdvancedSettingsAttackPayloadLogging.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppsecAdvancedSettingsAttackPayloadLogging.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "outputText",
          "id"
        ]
      }
    },
    "akamai:index/getAppsecAdvancedSettingsPiiLearning:getAppsecAdvancedSettingsPiiLearning": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppsecAdvancedSettingsPiiLearning.\n",
        "properties": {
          "configId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppsecAdvancedSettingsPiiLearning.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "outputText",
          "id"
        ]
      }
    },
    "akamai:index/getAppsecAdvancedSettingsRequestBody:getAppsecAdvancedSettingsRequestBody": {
      "inputs": {
        "description": "A collection of arguments for invoking getAppsecAdvancedSettingsRequestBody.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAppsecAdvancedSettingsRequestBody.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "outputText",
          "id"
        ]
      }
    },
    "akamai:index/getAuthoritiesSet:getAuthoritiesSet": {
      "inputs": {
        "description": "A collection of arguments for invoking getAuthoritiesSet.\n",
        "properties": {
          "contract": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "contract"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getAuthoritiesSet.\n",
        "properties": {
          "authorities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contract": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          }
        },
        "type": "object",
        "required": [
          "authorities",
          "contract",
          "id"
        ]
      }
    },
    "akamai:index/getBotmanAkamaiBotCategory:getBotmanAkamaiBotCategory": {
      "inputs": {
        "description": "A collection of arguments for invoking getBotmanAkamaiBotCategory.\n",
        "properties": {
          "categoryName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "outputs": {
        "description": "A collection of values returned by getBotmanAkamaiBotCategory.\n",
        "properties": {
          "categoryName": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "json",
          "id"
        ]
      }
    },
    "akamai:index/getBotmanAkamaiBotCategoryAction:getBotmanAkamaiBotCategoryAction": {
      "inputs": {
        "description": "A collection of arguments for invoking getBotmanAkamaiBotCategoryAction.\n",
        "properties": {
          "categoryId": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "securityPolicyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getBotmanAkamaiBotCategoryAction.\n",
        "properties": {
          "categoryId": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "securityPolicyId",
          "id"
        ]
      }
    },
    "akamai:index/getBotmanAkamaiDefinedBot:getBotmanAkamaiDefinedBot": {
      "inputs": {
        "description": "A collection of arguments for invoking getBotmanAkamaiDefinedBot.\n",
        "properties": {
          "botName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "outputs": {
        "description": "A collection of values returned by getBotmanAkamaiDefinedBot.\n",
        "properties": {
          "botName": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "json",
          "id"
        ]
      }
    },
    "akamai:index/getBotmanBotAnalyticsCookie:getBotmanBotAnalyticsCookie": {
      "inputs": {
        "description": "A collection of arguments for invoking getBotmanBotAnalyticsCookie.\n",
        "properties": {
          "configId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getBotmanBotAnalyticsCookie.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "id"
        ]
      }
    },
    "akamai:index/getBotmanBotAnalyticsCookieValues:getBotmanBotAnalyticsCookieValues": {
      "outputs": {
        "description": "A collection of values returned by getBotmanBotAnalyticsCookieValues.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "json",
          "id"
        ]
      }
    },
    "akamai:index/getBotmanBotCategoryException:getBotmanBotCategoryException": {
      "inputs": {
        "description": "A collection of arguments for invoking getBotmanBotCategoryException.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "securityPolicyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getBotmanBotCategoryException.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "securityPolicyId",
          "id"
        ]
      }
    },
    "akamai:index/getBotmanBotDetection:getBotmanBotDetection": {
      "inputs": {
        "description": "A collection of arguments for invoking getBotmanBotDetection.\n",
        "properties": {
          "detectionName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "outputs": {
        "description": "A collection of values returned by getBotmanBotDetection.\n",
        "properties": {
          "detectionName": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "json",
          "id"
        ]
      }
    },
    "akamai:index/getBotmanBotDetectionAction:getBotmanBotDetectionAction": {
      "inputs": {
        "description": "A collection of arguments for invoking getBotmanBotDetectionAction.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "detectionId": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "securityPolicyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getBotmanBotDetectionAction.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "detectionId": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "securityPolicyId",
          "id"
        ]
      }
    },
    "akamai:index/getBotmanBotEndpointCoverageReport:getBotmanBotEndpointCoverageReport": {
      "inputs": {
        "description": "A collection of arguments for invoking getBotmanBotEndpointCoverageReport.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "operationId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "outputs": {
        "description": "A collection of values returned by getBotmanBotEndpointCoverageReport.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "operationId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "json",
          "id"
        ]
      }
    },
    "akamai:index/getBotmanBotManagementSettings:getBotmanBotManagementSettings": {
      "inputs": {
        "description": "A collection of arguments for invoking getBotmanBotManagementSettings.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "securityPolicyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getBotmanBotManagementSettings.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "securityPolicyId",
          "id"
        ]
      }
    },
    "akamai:index/getBotmanChallengeAction:getBotmanChallengeAction": {
      "inputs": {
        "description": "A collection of arguments for invoking getBotmanChallengeAction.\n",
        "properties": {
          "actionId": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getBotmanChallengeAction.\n",
        "properties": {
          "actionId": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "id"
        ]
      }
    },
    "akamai:index/getBotmanChallengeInjectionRules:getBotmanChallengeInjectionRules": {
      "inputs": {
        "description": "A collection of arguments for invoking getBotmanChallengeInjectionRules.\n",
        "properties": {
          "configId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getBotmanChallengeInjectionRules.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "id"
        ]
      }
    },
    "akamai:index/getBotmanChallengeInterceptionRules:getBotmanChallengeInterceptionRules": {
      "inputs": {
        "description": "A collection of arguments for invoking getBotmanChallengeInterceptionRules.\n",
        "properties": {
          "configId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getBotmanChallengeInterceptionRules.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "id"
        ]
      }
    },
    "akamai:index/getBotmanClientSideSecurity:getBotmanClientSideSecurity": {
      "inputs": {
        "description": "A collection of arguments for invoking getBotmanClientSideSecurity.\n",
        "properties": {
          "configId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getBotmanClientSideSecurity.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "id"
        ]
      }
    },
    "akamai:index/getBotmanConditionalAction:getBotmanConditionalAction": {
      "inputs": {
        "description": "A collection of arguments for invoking getBotmanConditionalAction.\n",
        "properties": {
          "actionId": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getBotmanConditionalAction.\n",
        "properties": {
          "actionId": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "id"
        ]
      }
    },
    "akamai:index/getBotmanCustomBotCategory:getBotmanCustomBotCategory": {
      "inputs": {
        "description": "A collection of arguments for invoking getBotmanCustomBotCategory.\n",
        "properties": {
          "categoryId": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getBotmanCustomBotCategory.\n",
        "properties": {
          "categoryId": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "id"
        ]
      }
    },
    "akamai:index/getBotmanCustomBotCategoryAction:getBotmanCustomBotCategoryAction": {
      "inputs": {
        "description": "A collection of arguments for invoking getBotmanCustomBotCategoryAction.\n",
        "properties": {
          "categoryId": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "securityPolicyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getBotmanCustomBotCategoryAction.\n",
        "properties": {
          "categoryId": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "securityPolicyId",
          "id"
        ]
      }
    },
    "akamai:index/getBotmanCustomBotCategorySequence:getBotmanCustomBotCategorySequence": {
      "inputs": {
        "description": "A collection of arguments for invoking getBotmanCustomBotCategorySequence.\n",
        "properties": {
          "configId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getBotmanCustomBotCategorySequence.\n",
        "properties": {
          "categoryIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          }
        },
        "type": "object",
        "required": [
          "categoryIds",
          "configId",
          "id"
        ]
      }
    },
    "akamai:index/getBotmanCustomClient:getBotmanCustomClient": {
      "inputs": {
        "description": "A collection of arguments for invoking getBotmanCustomClient.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "customClientId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getBotmanCustomClient.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "customClientId": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "id"
        ]
      }
    },
    "akamai:index/getBotmanCustomClientSequence:getBotmanCustomClientSequence": {
      "inputs": {
        "description": "A collection of arguments for invoking getBotmanCustomClientSequence.\n",
        "properties": {
          "configId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getBotmanCustomClientSequence.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "customClientIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "customClientIds",
          "id"
        ]
      }
    },
    "akamai:index/getBotmanCustomDefinedBot:getBotmanCustomDefinedBot": {
      "inputs": {
        "description": "A collection of arguments for invoking getBotmanCustomDefinedBot.\n",
        "properties": {
          "botId": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getBotmanCustomDefinedBot.\n",
        "properties": {
          "botId": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "id"
        ]
      }
    },
    "akamai:index/getBotmanCustomDenyAction:getBotmanCustomDenyAction": {
      "inputs": {
        "description": "A collection of arguments for invoking getBotmanCustomDenyAction.\n",
        "properties": {
          "actionId": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getBotmanCustomDenyAction.\n",
        "properties": {
          "actionId": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "id"
        ]
      }
    },
    "akamai:index/getBotmanJavascriptInjection:getBotmanJavascriptInjection": {
      "inputs": {
        "description": "A collection of arguments for invoking getBotmanJavascriptInjection.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "securityPolicyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getBotmanJavascriptInjection.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "securityPolicyId",
          "id"
        ]
      }
    },
    "akamai:index/getBotmanRecategorizedAkamaiDefinedBot:getBotmanRecategorizedAkamaiDefinedBot": {
      "inputs": {
        "description": "A collection of arguments for invoking getBotmanRecategorizedAkamaiDefinedBot.\n",
        "properties": {
          "botId": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getBotmanRecategorizedAkamaiDefinedBot.\n",
        "properties": {
          "botId": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "id"
        ]
      }
    },
    "akamai:index/getBotmanResponseAction:getBotmanResponseAction": {
      "inputs": {
        "description": "A collection of arguments for invoking getBotmanResponseAction.\n",
        "properties": {
          "actionId": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getBotmanResponseAction.\n",
        "properties": {
          "actionId": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "id"
        ]
      }
    },
    "akamai:index/getBotmanServeAlternateAction:getBotmanServeAlternateAction": {
      "inputs": {
        "description": "A collection of arguments for invoking getBotmanServeAlternateAction.\n",
        "properties": {
          "actionId": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getBotmanServeAlternateAction.\n",
        "properties": {
          "actionId": {
            "type": "string"
          },
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "id"
        ]
      }
    },
    "akamai:index/getBotmanTransactionalEndpoint:getBotmanTransactionalEndpoint": {
      "inputs": {
        "description": "A collection of arguments for invoking getBotmanTransactionalEndpoint.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "operationId": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "securityPolicyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getBotmanTransactionalEndpoint.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "operationId": {
            "type": "string"
          },
          "securityPolicyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "securityPolicyId",
          "id"
        ]
      }
    },
    "akamai:index/getBotmanTransactionalEndpointProtection:getBotmanTransactionalEndpointProtection": {
      "inputs": {
        "description": "A collection of arguments for invoking getBotmanTransactionalEndpointProtection.\n",
        "properties": {
          "configId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "configId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getBotmanTransactionalEndpointProtection.\n",
        "properties": {
          "configId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "configId",
          "json",
          "id"
        ]
      }
    },
    "akamai:index/getCPSEnrollment:getCPSEnrollment": {
      "inputs": {
        "description": "A collection of arguments for invoking getCPSEnrollment.\n",
        "properties": {
          "enrollmentId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "enrollmentId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getCPSEnrollment.\n",
        "properties": {
          "adminContacts": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCPSEnrollmentAdminContact:getCPSEnrollmentAdminContact"
            }
          },
          "certificateChainType": {
            "type": "string"
          },
          "certificateType": {
            "type": "string"
          },
          "commonName": {
            "type": "string"
          },
          "contractId": {
            "type": "string"
          },
          "csrs": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCPSEnrollmentCsr:getCPSEnrollmentCsr"
            }
          },
          "dnsChallenges": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCPSEnrollmentDnsChallenge:getCPSEnrollmentDnsChallenge"
            }
          },
          "enableMultiStackedCertificates": {
            "type": "boolean"
          },
          "enrollmentId": {
            "type": "integer"
          },
          "httpChallenges": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCPSEnrollmentHttpChallenge:getCPSEnrollmentHttpChallenge"
            }
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "networkConfigurations": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCPSEnrollmentNetworkConfiguration:getCPSEnrollmentNetworkConfiguration"
            }
          },
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCPSEnrollmentOrganization:getCPSEnrollmentOrganization"
            }
          },
          "pendingChanges": {
            "type": "boolean"
          },
          "registrationAuthority": {
            "type": "string"
          },
          "sans": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "secureNetwork": {
            "type": "string"
          },
          "signatureAlgorithm": {
            "type": "string"
          },
          "sniOnly": {
            "type": "boolean"
          },
          "techContacts": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCPSEnrollmentTechContact:getCPSEnrollmentTechContact"
            }
          },
          "validationType": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "adminContacts",
          "certificateChainType",
          "certificateType",
          "commonName",
          "contractId",
          "csrs",
          "dnsChallenges",
          "enableMultiStackedCertificates",
          "enrollmentId",
          "httpChallenges",
          "networkConfigurations",
          "organizations",
          "pendingChanges",
          "registrationAuthority",
          "sans",
          "secureNetwork",
          "signatureAlgorithm",
          "sniOnly",
          "techContacts",
          "validationType",
          "id"
        ]
      }
    },
    "akamai:index/getCPSEnrollments:getCPSEnrollments": {
      "inputs": {
        "description": "A collection of arguments for invoking getCPSEnrollments.\n",
        "properties": {
          "contractId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "contractId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getCPSEnrollments.\n",
        "properties": {
          "contractId": {
            "type": "string"
          },
          "enrollments": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCPSEnrollmentsEnrollment:getCPSEnrollmentsEnrollment"
            }
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          }
        },
        "type": "object",
        "required": [
          "contractId",
          "enrollments",
          "id"
        ]
      }
    },
    "akamai:index/getClientlistLists:getClientlistLists": {
      "inputs": {
        "description": "A collection of arguments for invoking getClientlistLists.\n",
        "properties": {
          "name": {
            "type": "string"
          },
          "types": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "outputs": {
        "description": "A collection of values returned by getClientlistLists.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "listIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lists": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getClientlistListsList:getClientlistListsList"
            }
          },
          "name": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          },
          "types": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "type": "object",
        "required": [
          "json",
          "listIds",
          "lists",
          "outputText",
          "id"
        ]
      }
    },
    "akamai:index/getCloudletsApiPrioritizationMatchRule:getCloudletsApiPrioritizationMatchRule": {
      "inputs": {
        "description": "A collection of arguments for invoking getCloudletsApiPrioritizationMatchRule.\n",
        "properties": {
          "matchRules": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCloudletsApiPrioritizationMatchRuleMatchRule:getCloudletsApiPrioritizationMatchRuleMatchRule"
            }
          }
        },
        "type": "object"
      },
      "outputs": {
        "description": "A collection of values returned by getCloudletsApiPrioritizationMatchRule.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "matchRules": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCloudletsApiPrioritizationMatchRuleMatchRule:getCloudletsApiPrioritizationMatchRuleMatchRule"
            }
          }
        },
        "type": "object",
        "required": [
          "json",
          "id"
        ]
      }
    },
    "akamai:index/getCloudletsApplicationLoadBalancer:getCloudletsApplicationLoadBalancer": {
      "inputs": {
        "description": "A collection of arguments for invoking getCloudletsApplicationLoadBalancer.\n",
        "properties": {
          "originId": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "originId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getCloudletsApplicationLoadBalancer.\n",
        "properties": {
          "balancingType": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "dataCenters": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCloudletsApplicationLoadBalancerDataCenter:getCloudletsApplicationLoadBalancerDataCenter"
            }
          },
          "deleted": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "immutable": {
            "type": "boolean"
          },
          "lastModifiedBy": {
            "type": "string"
          },
          "lastModifiedDate": {
            "type": "string"
          },
          "livenessSettings": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCloudletsApplicationLoadBalancerLivenessSetting:getCloudletsApplicationLoadBalancerLivenessSetting"
            }
          },
          "originId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          },
          "warnings": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "balancingType",
          "createdBy",
          "createdDate",
          "dataCenters",
          "deleted",
          "description",
          "immutable",
          "lastModifiedBy",
          "lastModifiedDate",
          "livenessSettings",
          "originId",
          "type",
          "warnings",
          "id"
        ]
      }
    },
    "akamai:index/getCloudletsApplicationLoadBalancerMatchRule:getCloudletsApplicationLoadBalancerMatchRule": {
      "inputs": {
        "description": "A collection of arguments for invoking getCloudletsApplicationLoadBalancerMatchRule.\n",
        "properties": {
          "matchRules": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCloudletsApplicationLoadBalancerMatchRuleMatchRule:getCloudletsApplicationLoadBalancerMatchRuleMatchRule"
            }
          }
        },
        "type": "object"
      },
      "outputs": {
        "description": "A collection of values returned by getCloudletsApplicationLoadBalancerMatchRule.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "matchRules": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCloudletsApplicationLoadBalancerMatchRuleMatchRule:getCloudletsApplicationLoadBalancerMatchRuleMatchRule"
            }
          }
        },
        "type": "object",
        "required": [
          "json",
          "id"
        ]
      }
    },
    "akamai:index/getCloudletsAudienceSegmentationMatchRule:getCloudletsAudienceSegmentationMatchRule": {
      "inputs": {
        "description": "A collection of arguments for invoking getCloudletsAudienceSegmentationMatchRule.\n",
        "properties": {
          "matchRules": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCloudletsAudienceSegmentationMatchRuleMatchRule:getCloudletsAudienceSegmentationMatchRuleMatchRule"
            }
          }
        },
        "type": "object"
      },
      "outputs": {
        "description": "A collection of values returned by getCloudletsAudienceSegmentationMatchRule.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "matchRules": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCloudletsAudienceSegmentationMatchRuleMatchRule:getCloudletsAudienceSegmentationMatchRuleMatchRule"
            }
          }
        },
        "type": "object",
        "required": [
          "json",
          "id"
        ]
      }
    },
    "akamai:index/getCloudletsEdgeRedirectorMatchRule:getCloudletsEdgeRedirectorMatchRule": {
      "inputs": {
        "description": "A collection of arguments for invoking getCloudletsEdgeRedirectorMatchRule.\n",
        "properties": {
          "matchRules": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCloudletsEdgeRedirectorMatchRuleMatchRule:getCloudletsEdgeRedirectorMatchRuleMatchRule"
            }
          }
        },
        "type": "object"
      },
      "outputs": {
        "description": "A collection of values returned by getCloudletsEdgeRedirectorMatchRule.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "matchRules": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCloudletsEdgeRedirectorMatchRuleMatchRule:getCloudletsEdgeRedirectorMatchRuleMatchRule"
            }
          }
        },
        "type": "object",
        "required": [
          "json",
          "id"
        ]
      }
    },
    "akamai:index/getCloudletsForwardRewriteMatchRule:getCloudletsForwardRewriteMatchRule": {
      "inputs": {
        "description": "A collection of arguments for invoking getCloudletsForwardRewriteMatchRule.\n",
        "properties": {
          "matchRules": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCloudletsForwardRewriteMatchRuleMatchRule:getCloudletsForwardRewriteMatchRuleMatchRule"
            }
          }
        },
        "type": "object"
      },
      "outputs": {
        "description": "A collection of values returned by getCloudletsForwardRewriteMatchRule.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "matchRules": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCloudletsForwardRewriteMatchRuleMatchRule:getCloudletsForwardRewriteMatchRuleMatchRule"
            }
          }
        },
        "type": "object",
        "required": [
          "json",
          "id"
        ]
      }
    },
    "akamai:index/getCloudletsPhasedReleaseMatchRule:getCloudletsPhasedReleaseMatchRule": {
      "inputs": {
        "description": "A collection of arguments for invoking getCloudletsPhasedReleaseMatchRule.\n",
        "properties": {
          "matchRules": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCloudletsPhasedReleaseMatchRuleMatchRule:getCloudletsPhasedReleaseMatchRuleMatchRule"
            }
          }
        },
        "type": "object"
      },
      "outputs": {
        "description": "A collection of values returned by getCloudletsPhasedReleaseMatchRule.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "matchRules": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCloudletsPhasedReleaseMatchRuleMatchRule:getCloudletsPhasedReleaseMatchRuleMatchRule"
            }
          }
        },
        "type": "object",
        "required": [
          "json",
          "id"
        ]
      }
    },
    "akamai:index/getCloudletsPolicy:getCloudletsPolicy": {
      "inputs": {
        "description": "A collection of arguments for invoking getCloudletsPolicy.\n",
        "properties": {
          "policyId": {
            "type": "integer"
          },
          "version": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "policyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getCloudletsPolicy.\n",
        "properties": {
          "activations": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCloudletsPolicyActivation:getCloudletsPolicyActivation"
            }
          },
          "apiVersion": {
            "type": "string"
          },
          "cloudletCode": {
            "type": "string"
          },
          "cloudletId": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "groupId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "matchRuleFormat": {
            "type": "string"
          },
          "matchRules": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "policyId": {
            "type": "integer"
          },
          "revisionId": {
            "type": "integer"
          },
          "rulesLocked": {
            "type": "boolean"
          },
          "version": {
            "type": "integer"
          },
          "versionDescription": {
            "type": "string"
          },
          "warnings": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "activations",
          "apiVersion",
          "cloudletCode",
          "cloudletId",
          "description",
          "groupId",
          "matchRuleFormat",
          "matchRules",
          "name",
          "policyId",
          "revisionId",
          "rulesLocked",
          "versionDescription",
          "warnings",
          "id"
        ]
      }
    },
    "akamai:index/getCloudletsRequestControlMatchRule:getCloudletsRequestControlMatchRule": {
      "inputs": {
        "description": "A collection of arguments for invoking getCloudletsRequestControlMatchRule.\n",
        "properties": {
          "matchRules": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCloudletsRequestControlMatchRuleMatchRule:getCloudletsRequestControlMatchRuleMatchRule"
            }
          }
        },
        "type": "object"
      },
      "outputs": {
        "description": "A collection of values returned by getCloudletsRequestControlMatchRule.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "matchRules": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCloudletsRequestControlMatchRuleMatchRule:getCloudletsRequestControlMatchRuleMatchRule"
            }
          }
        },
        "type": "object",
        "required": [
          "json",
          "id"
        ]
      }
    },
    "akamai:index/getCloudletsVisitorPrioritizationMatchRule:getCloudletsVisitorPrioritizationMatchRule": {
      "inputs": {
        "description": "A collection of arguments for invoking getCloudletsVisitorPrioritizationMatchRule.\n",
        "properties": {
          "matchRules": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCloudletsVisitorPrioritizationMatchRuleMatchRule:getCloudletsVisitorPrioritizationMatchRuleMatchRule"
            }
          }
        },
        "type": "object"
      },
      "outputs": {
        "description": "A collection of values returned by getCloudletsVisitorPrioritizationMatchRule.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "matchRules": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCloudletsVisitorPrioritizationMatchRuleMatchRule:getCloudletsVisitorPrioritizationMatchRuleMatchRule"
            }
          }
        },
        "type": "object",
        "required": [
          "json",
          "id"
        ]
      }
    },
    "akamai:index/getCloudwrapperCapacities:getCloudwrapperCapacities": {
      "inputs": {
        "description": "A collection of arguments for invoking getCloudwrapperCapacities.\n",
        "properties": {
          "capacities": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCloudwrapperCapacitiesCapacity:getCloudwrapperCapacitiesCapacity"
            }
          },
          "contractIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "outputs": {
        "description": "A collection of values returned by getCloudwrapperCapacities.\n",
        "properties": {
          "capacities": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCloudwrapperCapacitiesCapacity:getCloudwrapperCapacitiesCapacity"
            }
          },
          "contractIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string",
            "deprecationMessage": "Required by the terraform plugin testing framework, always set to `akamai_cloudwrapper_capacities`."
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      }
    },
    "akamai:index/getCloudwrapperConfiguration:getCloudwrapperConfiguration": {
      "inputs": {
        "description": "A collection of arguments for invoking getCloudwrapperConfiguration.\n",
        "properties": {
          "id": {
            "type": "integer"
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCloudwrapperConfigurationLocation:getCloudwrapperConfigurationLocation"
            }
          },
          "multiCdnSettings": {
            "$ref": "#/types/akamai:index/getCloudwrapperConfigurationMultiCdnSettings:getCloudwrapperConfigurationMultiCdnSettings"
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getCloudwrapperConfiguration.\n",
        "properties": {
          "capacityAlertsThreshold": {
            "type": "integer"
          },
          "comments": {
            "type": "string"
          },
          "configName": {
            "type": "string"
          },
          "contractId": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "lastActivatedBy": {
            "type": "string"
          },
          "lastActivatedDate": {
            "type": "string"
          },
          "lastUpdatedBy": {
            "type": "string"
          },
          "lastUpdatedDate": {
            "type": "string"
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCloudwrapperConfigurationLocation:getCloudwrapperConfigurationLocation"
            }
          },
          "multiCdnSettings": {
            "$ref": "#/types/akamai:index/getCloudwrapperConfigurationMultiCdnSettings:getCloudwrapperConfigurationMultiCdnSettings"
          },
          "notificationEmails": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "propertyIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "retainIdleObjects": {
            "type": "boolean"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "capacityAlertsThreshold",
          "comments",
          "configName",
          "contractId",
          "id",
          "lastActivatedBy",
          "lastActivatedDate",
          "lastUpdatedBy",
          "lastUpdatedDate",
          "notificationEmails",
          "propertyIds",
          "retainIdleObjects",
          "status"
        ]
      }
    },
    "akamai:index/getCloudwrapperConfigurations:getCloudwrapperConfigurations": {
      "inputs": {
        "description": "A collection of arguments for invoking getCloudwrapperConfigurations.\n",
        "properties": {
          "configurations": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCloudwrapperConfigurationsConfiguration:getCloudwrapperConfigurationsConfiguration"
            }
          }
        },
        "type": "object"
      },
      "outputs": {
        "description": "A collection of values returned by getCloudwrapperConfigurations.\n",
        "properties": {
          "configurations": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCloudwrapperConfigurationsConfiguration:getCloudwrapperConfigurationsConfiguration"
            }
          },
          "id": {
            "type": "string",
            "deprecationMessage": "Required by the terraform plugin testing framework, always set to `akamai_cloudwrapper_configurations`."
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      }
    },
    "akamai:index/getCloudwrapperLocation:getCloudwrapperLocation": {
      "inputs": {
        "description": "A collection of arguments for invoking getCloudwrapperLocation.\n",
        "properties": {
          "locationName": {
            "type": "string"
          },
          "trafficType": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "locationName",
          "trafficType"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getCloudwrapperLocation.\n",
        "properties": {
          "id": {
            "type": "string",
            "deprecationMessage": "Required by the terraform plugin testing framework, always set to `akamai_cloudwrapper_location`"
          },
          "locationId": {
            "type": "string"
          },
          "locationName": {
            "type": "string"
          },
          "trafficType": {
            "type": "string"
          },
          "trafficTypeId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "id",
          "locationId",
          "locationName",
          "trafficType",
          "trafficTypeId"
        ]
      }
    },
    "akamai:index/getCloudwrapperLocations:getCloudwrapperLocations": {
      "inputs": {
        "description": "A collection of arguments for invoking getCloudwrapperLocations.\n",
        "properties": {
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCloudwrapperLocationsLocation:getCloudwrapperLocationsLocation"
            }
          }
        },
        "type": "object"
      },
      "outputs": {
        "description": "A collection of values returned by getCloudwrapperLocations.\n",
        "properties": {
          "id": {
            "type": "string",
            "deprecationMessage": "Required by the terraform plugin testing framework, always set to `akamai_cloudwrapper_locations`"
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCloudwrapperLocationsLocation:getCloudwrapperLocationsLocation"
            }
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      }
    },
    "akamai:index/getCloudwrapperProperties:getCloudwrapperProperties": {
      "inputs": {
        "description": "A collection of arguments for invoking getCloudwrapperProperties.\n",
        "properties": {
          "contractIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCloudwrapperPropertiesProperty:getCloudwrapperPropertiesProperty"
            }
          },
          "unused": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "outputs": {
        "description": "A collection of values returned by getCloudwrapperProperties.\n",
        "properties": {
          "contractIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string",
            "deprecationMessage": "Required by the terraform plugin testing framework, always set to `akamai_cloudwrapper_properties`"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getCloudwrapperPropertiesProperty:getCloudwrapperPropertiesProperty"
            }
          },
          "unused": {
            "type": "boolean"
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      }
    },
    "akamai:index/getContract:getContract": {
      "inputs": {
        "description": "A collection of arguments for invoking getContract.\n",
        "properties": {
          "groupId": {
            "type": "string"
          },
          "groupName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "outputs": {
        "description": "A collection of values returned by getContract.\n",
        "properties": {
          "groupId": {
            "type": "string"
          },
          "groupName": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          }
        },
        "type": "object",
        "required": [
          "groupId",
          "groupName",
          "id"
        ]
      }
    },
    "akamai:index/getContracts:getContracts": {
      "outputs": {
        "description": "A collection of values returned by getContracts.\n",
        "properties": {
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getContractsContract:getContractsContract"
            }
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          }
        },
        "type": "object",
        "required": [
          "contracts",
          "id"
        ]
      }
    },
    "akamai:index/getCpCode:getCpCode": {
      "inputs": {
        "description": "A collection of arguments for invoking getCpCode.\n",
        "properties": {
          "contractId": {
            "type": "string",
            "willReplaceOnChanges": true
          },
          "groupId": {
            "type": "string",
            "willReplaceOnChanges": true
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "contractId",
          "groupId",
          "name"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getCpCode.\n",
        "properties": {
          "contractId": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "name": {
            "type": "string"
          },
          "productIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "type": "object",
        "required": [
          "contractId",
          "groupId",
          "name",
          "productIds",
          "id"
        ]
      }
    },
    "akamai:index/getCpsCsr:getCpsCsr": {
      "inputs": {
        "description": "A collection of arguments for invoking getCpsCsr.\n",
        "properties": {
          "enrollmentId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "enrollmentId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getCpsCsr.\n",
        "properties": {
          "csrEcdsa": {
            "type": "string"
          },
          "csrRsa": {
            "type": "string"
          },
          "enrollmentId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          }
        },
        "type": "object",
        "required": [
          "csrEcdsa",
          "csrRsa",
          "enrollmentId",
          "id"
        ]
      }
    },
    "akamai:index/getCpsDeployments:getCpsDeployments": {
      "inputs": {
        "description": "A collection of arguments for invoking getCpsDeployments.\n",
        "properties": {
          "enrollmentId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "enrollmentId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getCpsDeployments.\n",
        "properties": {
          "autoRenewalStartTime": {
            "type": "string"
          },
          "enrollmentId": {
            "type": "integer"
          },
          "expiryDate": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "productionCertificateEcdsa": {
            "type": "string"
          },
          "productionCertificateRsa": {
            "type": "string"
          },
          "stagingCertificateEcdsa": {
            "type": "string"
          },
          "stagingCertificateRsa": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "autoRenewalStartTime",
          "enrollmentId",
          "expiryDate",
          "productionCertificateEcdsa",
          "productionCertificateRsa",
          "stagingCertificateEcdsa",
          "stagingCertificateRsa",
          "id"
        ]
      }
    },
    "akamai:index/getCpsWarnings:getCpsWarnings": {
      "outputs": {
        "description": "A collection of values returned by getCpsWarnings.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "warnings": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "type": "object",
        "required": [
          "warnings",
          "id"
        ]
      }
    },
    "akamai:index/getDatastreamActivationHistory:getDatastreamActivationHistory": {
      "inputs": {
        "description": "A collection of arguments for invoking getDatastreamActivationHistory.\n",
        "properties": {
          "streamId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "streamId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getDatastreamActivationHistory.\n",
        "properties": {
          "activations": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getDatastreamActivationHistoryActivation:getDatastreamActivationHistoryActivation"
            }
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "streamId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "activations",
          "streamId",
          "id"
        ]
      }
    },
    "akamai:index/getDatastreamDatasetFields:getDatastreamDatasetFields": {
      "inputs": {
        "description": "A collection of arguments for invoking getDatastreamDatasetFields.\n",
        "properties": {
          "productId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "outputs": {
        "description": "A collection of values returned by getDatastreamDatasetFields.\n",
        "properties": {
          "datasetFields": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getDatastreamDatasetFieldsDatasetField:getDatastreamDatasetFieldsDatasetField"
            }
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "productId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "datasetFields",
          "id"
        ]
      }
    },
    "akamai:index/getDatastreams:getDatastreams": {
      "inputs": {
        "description": "A collection of arguments for invoking getDatastreams.\n",
        "properties": {
          "groupId": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "outputs": {
        "description": "A collection of values returned by getDatastreams.\n",
        "properties": {
          "groupId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "streamsDetails": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getDatastreamsStreamsDetail:getDatastreamsStreamsDetail"
            }
          }
        },
        "type": "object",
        "required": [
          "streamsDetails",
          "id"
        ]
      }
    },
    "akamai:index/getDnsRecordSet:getDnsRecordSet": {
      "inputs": {
        "description": "A collection of arguments for invoking getDnsRecordSet.\n",
        "properties": {
          "host": {
            "type": "string"
          },
          "recordType": {
            "type": "string"
          },
          "zone": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "host",
          "recordType",
          "zone"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getDnsRecordSet.\n",
        "properties": {
          "host": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "rdatas": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "recordType": {
            "type": "string"
          },
          "zone": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "host",
          "rdatas",
          "recordType",
          "zone",
          "id"
        ]
      }
    },
    "akamai:index/getEdgeWorker:getEdgeWorker": {
      "inputs": {
        "description": "A collection of arguments for invoking getEdgeWorker.\n",
        "properties": {
          "edgeworkerId": {
            "type": "integer"
          },
          "localBundle": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "edgeworkerId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getEdgeWorker.\n",
        "properties": {
          "edgeworkerId": {
            "type": "integer"
          },
          "groupId": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "localBundle": {
            "type": "string"
          },
          "localBundleHash": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "resourceTierId": {
            "type": "integer"
          },
          "version": {
            "type": "string"
          },
          "warnings": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "type": "object",
        "required": [
          "edgeworkerId",
          "groupId",
          "localBundleHash",
          "name",
          "resourceTierId",
          "version",
          "warnings",
          "id"
        ]
      }
    },
    "akamai:index/getEdgeWorkerActivation:getEdgeWorkerActivation": {
      "inputs": {
        "description": "A collection of arguments for invoking getEdgeWorkerActivation.\n",
        "properties": {
          "edgeworkerId": {
            "type": "integer"
          },
          "network": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "edgeworkerId",
          "network"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getEdgeWorkerActivation.\n",
        "properties": {
          "activationId": {
            "type": "integer"
          },
          "edgeworkerId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "network": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "activationId",
          "edgeworkerId",
          "network",
          "version",
          "id"
        ]
      }
    },
    "akamai:index/getEdgeWorkersPropertyRules:getEdgeWorkersPropertyRules": {
      "inputs": {
        "description": "A collection of arguments for invoking getEdgeWorkersPropertyRules.\n",
        "properties": {
          "edgeworkerId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "edgeworkerId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getEdgeWorkersPropertyRules.\n",
        "properties": {
          "edgeworkerId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "edgeworkerId",
          "json",
          "id"
        ]
      }
    },
    "akamai:index/getEdgeWorkersResourceTier:getEdgeWorkersResourceTier": {
      "inputs": {
        "description": "A collection of arguments for invoking getEdgeWorkersResourceTier.\n",
        "properties": {
          "contractId": {
            "type": "string"
          },
          "resourceTierName": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "contractId",
          "resourceTierName"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getEdgeWorkersResourceTier.\n",
        "properties": {
          "contractId": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "resourceTierId": {
            "type": "integer"
          },
          "resourceTierName": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "contractId",
          "resourceTierId",
          "resourceTierName",
          "id"
        ]
      }
    },
    "akamai:index/getEdgekvGroupItems:getEdgekvGroupItems": {
      "inputs": {
        "description": "A collection of arguments for invoking getEdgekvGroupItems.\n",
        "properties": {
          "groupName": {
            "type": "string"
          },
          "namespaceName": {
            "type": "string"
          },
          "network": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "groupName",
          "namespaceName",
          "network"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getEdgekvGroupItems.\n",
        "properties": {
          "groupName": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "namespaceName": {
            "type": "string"
          },
          "network": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "groupName",
          "items",
          "namespaceName",
          "network",
          "id"
        ]
      }
    },
    "akamai:index/getEdgekvGroups:getEdgekvGroups": {
      "inputs": {
        "description": "A collection of arguments for invoking getEdgekvGroups.\n",
        "properties": {
          "namespaceName": {
            "type": "string"
          },
          "network": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "namespaceName",
          "network"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getEdgekvGroups.\n",
        "properties": {
          "groups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "namespaceName": {
            "type": "string"
          },
          "network": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "groups",
          "namespaceName",
          "network",
          "id"
        ]
      }
    },
    "akamai:index/getGroup:getGroup": {
      "inputs": {
        "description": "A collection of arguments for invoking getGroup.\n",
        "properties": {
          "contractId": {
            "type": "string"
          },
          "groupName": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "contractId",
          "groupName"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getGroup.\n",
        "properties": {
          "contractId": {
            "type": "string"
          },
          "groupName": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          }
        },
        "type": "object",
        "required": [
          "contractId",
          "groupName",
          "id"
        ]
      }
    },
    "akamai:index/getGroups:getGroups": {
      "outputs": {
        "description": "A collection of values returned by getGroups.\n",
        "properties": {
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getGroupsGroup:getGroupsGroup"
            }
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          }
        },
        "type": "object",
        "required": [
          "groups",
          "id"
        ]
      }
    },
    "akamai:index/getGtmDatacenter:getGtmDatacenter": {
      "inputs": {
        "description": "A collection of arguments for invoking getGtmDatacenter.\n",
        "properties": {
          "datacenterId": {
            "type": "integer"
          },
          "domain": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "datacenterId",
          "domain"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getGtmDatacenter.\n",
        "properties": {
          "city": {
            "type": "string"
          },
          "cloneOf": {
            "type": "integer"
          },
          "cloudServerHostHeaderOverride": {
            "type": "boolean"
          },
          "cloudServerTargeting": {
            "type": "boolean"
          },
          "continent": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "datacenterId": {
            "type": "integer"
          },
          "defaultLoadObjects": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getGtmDatacenterDefaultLoadObject:getGtmDatacenterDefaultLoadObject"
            }
          },
          "domain": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "latitude": {
            "type": "number"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getGtmDatacenterLink:getGtmDatacenterLink"
            }
          },
          "longitude": {
            "type": "number"
          },
          "nickname": {
            "type": "string"
          },
          "scorePenalty": {
            "type": "integer"
          },
          "servermonitorPool": {
            "type": "string"
          },
          "stateOrProvince": {
            "type": "string"
          },
          "virtual": {
            "type": "boolean"
          }
        },
        "type": "object",
        "required": [
          "city",
          "cloneOf",
          "cloudServerHostHeaderOverride",
          "cloudServerTargeting",
          "continent",
          "country",
          "datacenterId",
          "defaultLoadObjects",
          "domain",
          "latitude",
          "links",
          "longitude",
          "nickname",
          "scorePenalty",
          "servermonitorPool",
          "stateOrProvince",
          "virtual",
          "id"
        ]
      }
    },
    "akamai:index/getGtmDatacenters:getGtmDatacenters": {
      "inputs": {
        "description": "A collection of arguments for invoking getGtmDatacenters.\n",
        "properties": {
          "domain": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "domain"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getGtmDatacenters.\n",
        "properties": {
          "datacenters": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getGtmDatacentersDatacenter:getGtmDatacentersDatacenter"
            }
          },
          "domain": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          }
        },
        "type": "object",
        "required": [
          "datacenters",
          "domain",
          "id"
        ]
      }
    },
    "akamai:index/getGtmDefaultDatacenter:getGtmDefaultDatacenter": {
      "inputs": {
        "description": "A collection of arguments for invoking getGtmDefaultDatacenter.\n",
        "properties": {
          "datacenter": {
            "type": "integer"
          },
          "domain": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "domain"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getGtmDefaultDatacenter.\n",
        "properties": {
          "datacenter": {
            "type": "integer"
          },
          "datacenterId": {
            "type": "integer"
          },
          "domain": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "nickname": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "datacenterId",
          "domain",
          "nickname",
          "id"
        ]
      }
    },
    "akamai:index/getIamContactTypes:getIamContactTypes": {
      "outputs": {
        "description": "A collection of values returned by getIamContactTypes.\n",
        "properties": {
          "contactTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          }
        },
        "type": "object",
        "required": [
          "contactTypes",
          "id"
        ]
      }
    },
    "akamai:index/getIamCountries:getIamCountries": {
      "outputs": {
        "description": "A collection of values returned by getIamCountries.\n",
        "properties": {
          "countries": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          }
        },
        "type": "object",
        "required": [
          "countries",
          "id"
        ]
      }
    },
    "akamai:index/getIamGrantableRoles:getIamGrantableRoles": {
      "outputs": {
        "description": "A collection of values returned by getIamGrantableRoles.\n",
        "properties": {
          "grantableRoles": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getIamGrantableRolesGrantableRole:getIamGrantableRolesGrantableRole"
            }
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          }
        },
        "type": "object",
        "required": [
          "grantableRoles",
          "id"
        ]
      }
    },
    "akamai:index/getIamRoles:getIamRoles": {
      "outputs": {
        "description": "A collection of values returned by getIamRoles.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getIamRolesRole:getIamRolesRole"
            }
          }
        },
        "type": "object",
        "required": [
          "roles",
          "id"
        ]
      }
    },
    "akamai:index/getIamStates:getIamStates": {
      "inputs": {
        "description": "A collection of arguments for invoking getIamStates.\n",
        "properties": {
          "country": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "country"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getIamStates.\n",
        "properties": {
          "country": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "states": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "type": "object",
        "required": [
          "country",
          "states",
          "id"
        ]
      }
    },
    "akamai:index/getIamSupportedLangs:getIamSupportedLangs": {
      "outputs": {
        "description": "A collection of values returned by getIamSupportedLangs.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "languages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "type": "object",
        "required": [
          "languages",
          "id"
        ]
      }
    },
    "akamai:index/getIamTimeoutPolicies:getIamTimeoutPolicies": {
      "outputs": {
        "description": "A collection of values returned by getIamTimeoutPolicies.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "policies": {
            "type": "object",
            "additionalProperties": {
              "type": "integer"
            }
          }
        },
        "type": "object",
        "required": [
          "policies",
          "id"
        ]
      }
    },
    "akamai:index/getIamTimezones:getIamTimezones": {
      "outputs": {
        "description": "A collection of values returned by getIamTimezones.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "timezones": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getIamTimezonesTimezone:getIamTimezonesTimezone"
            }
          }
        },
        "type": "object",
        "required": [
          "timezones",
          "id"
        ]
      }
    },
    "akamai:index/getImagingPolicyImage:getImagingPolicyImage": {
      "inputs": {
        "description": "A collection of arguments for invoking getImagingPolicyImage.\n",
        "properties": {
          "policy": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicy:getImagingPolicyImagePolicy"
          }
        },
        "type": "object",
        "required": [
          "policy"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getImagingPolicyImage.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "policy": {
            "$ref": "#/types/akamai:index/getImagingPolicyImagePolicy:getImagingPolicyImagePolicy"
          }
        },
        "type": "object",
        "required": [
          "json",
          "policy",
          "id"
        ]
      }
    },
    "akamai:index/getImagingPolicyVideo:getImagingPolicyVideo": {
      "inputs": {
        "description": "A collection of arguments for invoking getImagingPolicyVideo.\n",
        "properties": {
          "policy": {
            "$ref": "#/types/akamai:index/getImagingPolicyVideoPolicy:getImagingPolicyVideoPolicy"
          }
        },
        "type": "object",
        "required": [
          "policy"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getImagingPolicyVideo.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "policy": {
            "$ref": "#/types/akamai:index/getImagingPolicyVideoPolicy:getImagingPolicyVideoPolicy"
          }
        },
        "type": "object",
        "required": [
          "json",
          "policy",
          "id"
        ]
      }
    },
    "akamai:index/getNetworkLists:getNetworkLists": {
      "inputs": {
        "description": "A collection of arguments for invoking getNetworkLists.\n",
        "properties": {
          "name": {
            "type": "string"
          },
          "networkListId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "outputs": {
        "description": "A collection of values returned by getNetworkLists.\n",
        "properties": {
          "contractId": {
            "type": "string"
          },
          "groupId": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "lists": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "networkListId": {
            "type": "string"
          },
          "outputText": {
            "type": "string"
          },
          "syncPoint": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "contractId",
          "groupId",
          "json",
          "lists",
          "networkListId",
          "outputText",
          "syncPoint",
          "id"
        ]
      }
    },
    "akamai:index/getProperties:getProperties": {
      "inputs": {
        "description": "A collection of arguments for invoking getProperties.\n",
        "properties": {
          "contractId": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "contractId",
          "groupId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getProperties.\n",
        "properties": {
          "contractId": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getPropertiesProperty:getPropertiesProperty"
            }
          }
        },
        "type": "object",
        "required": [
          "contractId",
          "groupId",
          "properties",
          "id"
        ]
      }
    },
    "akamai:index/getPropertiesSearch:getPropertiesSearch": {
      "inputs": {
        "description": "A collection of arguments for invoking getPropertiesSearch.\n",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "key",
          "value"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getPropertiesSearch.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "key": {
            "type": "string"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getPropertiesSearchProperty:getPropertiesSearchProperty"
            }
          },
          "value": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "key",
          "properties",
          "value",
          "id"
        ]
      }
    },
    "akamai:index/getProperty:getProperty": {
      "inputs": {
        "description": "A collection of arguments for invoking getProperty.\n",
        "properties": {
          "name": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "name"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getProperty.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "name": {
            "type": "string"
          },
          "rules": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "name",
          "rules",
          "id"
        ]
      }
    },
    "akamai:index/getPropertyActivation:getPropertyActivation": {
      "inputs": {
        "description": "A collection of arguments for invoking getPropertyActivation.\n",
        "properties": {
          "network": {
            "type": "string"
          },
          "propertyId": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "propertyId",
          "version"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getPropertyActivation.\n",
        "properties": {
          "activationId": {
            "type": "string"
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "errors": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "network": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "propertyId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          },
          "warnings": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "activationId",
          "contacts",
          "errors",
          "note",
          "propertyId",
          "status",
          "version",
          "warnings",
          "id"
        ]
      }
    },
    "akamai:index/getPropertyHostnames:getPropertyHostnames": {
      "inputs": {
        "description": "A collection of arguments for invoking getPropertyHostnames.\n",
        "properties": {
          "contractId": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "propertyId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "contractId",
          "groupId",
          "propertyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getPropertyHostnames.\n",
        "properties": {
          "contractId": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "hostnames": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getPropertyHostnamesHostname:getPropertyHostnamesHostname"
            }
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "propertyId": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "contractId",
          "groupId",
          "hostnames",
          "propertyId",
          "version",
          "id"
        ]
      }
    },
    "akamai:index/getPropertyInclude:getPropertyInclude": {
      "inputs": {
        "description": "A collection of arguments for invoking getPropertyInclude.\n",
        "properties": {
          "contractId": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "includeId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "contractId",
          "groupId",
          "includeId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getPropertyInclude.\n",
        "properties": {
          "contractId": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "includeId": {
            "type": "string"
          },
          "latestVersion": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "productionVersion": {
            "type": "integer"
          },
          "stagingVersion": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "contractId",
          "groupId",
          "id",
          "includeId",
          "latestVersion",
          "name",
          "productionVersion",
          "stagingVersion",
          "type"
        ]
      }
    },
    "akamai:index/getPropertyIncludeActivation:getPropertyIncludeActivation": {
      "inputs": {
        "description": "A collection of arguments for invoking getPropertyIncludeActivation.\n",
        "properties": {
          "contractId": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "includeId": {
            "type": "string"
          },
          "network": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "contractId",
          "groupId",
          "includeId",
          "network"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getPropertyIncludeActivation.\n",
        "properties": {
          "contractId": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "includeId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "network": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "notifyEmails": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "contractId",
          "groupId",
          "includeId",
          "name",
          "network",
          "note",
          "notifyEmails",
          "version",
          "id"
        ]
      }
    },
    "akamai:index/getPropertyIncludeParents:getPropertyIncludeParents": {
      "inputs": {
        "description": "A collection of arguments for invoking getPropertyIncludeParents.\n",
        "properties": {
          "contractId": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "includeId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "contractId",
          "groupId",
          "includeId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getPropertyIncludeParents.\n",
        "properties": {
          "contractId": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "includeId": {
            "type": "string"
          },
          "parents": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getPropertyIncludeParentsParent:getPropertyIncludeParentsParent"
            }
          }
        },
        "type": "object",
        "required": [
          "contractId",
          "groupId",
          "includeId",
          "parents",
          "id"
        ]
      }
    },
    "akamai:index/getPropertyIncludeRules:getPropertyIncludeRules": {
      "inputs": {
        "description": "A collection of arguments for invoking getPropertyIncludeRules.\n",
        "properties": {
          "contractId": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "includeId": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "contractId",
          "groupId",
          "includeId",
          "version"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getPropertyIncludeRules.\n",
        "properties": {
          "contractId": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "includeId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "ruleErrors": {
            "type": "string"
          },
          "ruleFormat": {
            "type": "string"
          },
          "ruleWarnings": {
            "type": "string"
          },
          "rules": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "contractId",
          "groupId",
          "includeId",
          "name",
          "ruleErrors",
          "ruleFormat",
          "ruleWarnings",
          "rules",
          "type",
          "version",
          "id"
        ]
      }
    },
    "akamai:index/getPropertyIncludes:getPropertyIncludes": {
      "inputs": {
        "description": "A collection of arguments for invoking getPropertyIncludes.\n",
        "properties": {
          "contractId": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "parentProperty": {
            "$ref": "#/types/akamai:index/getPropertyIncludesParentProperty:getPropertyIncludesParentProperty"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "contractId",
          "groupId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getPropertyIncludes.\n",
        "properties": {
          "contractId": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "includes": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getPropertyIncludesInclude:getPropertyIncludesInclude"
            }
          },
          "parentProperty": {
            "$ref": "#/types/akamai:index/getPropertyIncludesParentProperty:getPropertyIncludesParentProperty"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "contractId",
          "groupId",
          "includes",
          "id"
        ]
      }
    },
    "akamai:index/getPropertyProducts:getPropertyProducts": {
      "inputs": {
        "description": "A collection of arguments for invoking getPropertyProducts.\n",
        "properties": {
          "contractId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "contractId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getPropertyProducts.\n",
        "properties": {
          "contractId": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getPropertyProductsProduct:getPropertyProductsProduct"
            }
          }
        },
        "type": "object",
        "required": [
          "contractId",
          "products",
          "id"
        ]
      }
    },
    "akamai:index/getPropertyRuleFormats:getPropertyRuleFormats": {
      "outputs": {
        "description": "A collection of values returned by getPropertyRuleFormats.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "ruleFormats": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "type": "object",
        "required": [
          "ruleFormats",
          "id"
        ]
      }
    },
    "akamai:index/getPropertyRules:getPropertyRules": {
      "inputs": {
        "description": "A collection of arguments for invoking getPropertyRules.\n",
        "properties": {
          "contractId": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "propertyId": {
            "type": "string"
          },
          "ruleFormat": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "propertyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getPropertyRules.\n",
        "properties": {
          "contractId": {
            "type": "string"
          },
          "errors": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "propertyId": {
            "type": "string"
          },
          "ruleFormat": {
            "type": "string"
          },
          "rules": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "contractId",
          "errors",
          "groupId",
          "propertyId",
          "rules",
          "version",
          "id"
        ]
      }
    },
    "akamai:index/getPropertyRulesBuilder:getPropertyRulesBuilder": {
      "inputs": {
        "description": "A collection of arguments for invoking getPropertyRulesBuilder.\n",
        "properties": {
          "rulesV20230105": {
            "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105:getPropertyRulesBuilderRulesV20230105"
          },
          "rulesV20230530": {
            "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530:getPropertyRulesBuilderRulesV20230530"
          }
        },
        "type": "object"
      },
      "outputs": {
        "description": "A collection of values returned by getPropertyRulesBuilder.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "ruleFormat": {
            "type": "string"
          },
          "rulesV20230105": {
            "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230105:getPropertyRulesBuilderRulesV20230105"
          },
          "rulesV20230530": {
            "$ref": "#/types/akamai:index/getPropertyRulesBuilderRulesV20230530:getPropertyRulesBuilderRulesV20230530"
          }
        },
        "type": "object",
        "required": [
          "json",
          "ruleFormat",
          "id"
        ]
      }
    },
    "akamai:index/getPropertyRulesTemplate:getPropertyRulesTemplate": {
      "inputs": {
        "description": "A collection of arguments for invoking getPropertyRulesTemplate.\n",
        "properties": {
          "templateFile": {
            "type": "string"
          },
          "templates": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getPropertyRulesTemplateTemplate:getPropertyRulesTemplateTemplate"
            }
          },
          "varDefinitionFile": {
            "type": "string"
          },
          "varValuesFile": {
            "type": "string"
          },
          "variables": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getPropertyRulesTemplateVariable:getPropertyRulesTemplateVariable"
            }
          }
        },
        "type": "object"
      },
      "outputs": {
        "description": "A collection of values returned by getPropertyRulesTemplate.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "json": {
            "type": "string"
          },
          "templateFile": {
            "type": "string"
          },
          "templates": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getPropertyRulesTemplateTemplate:getPropertyRulesTemplateTemplate"
            }
          },
          "varDefinitionFile": {
            "type": "string"
          },
          "varValuesFile": {
            "type": "string"
          },
          "variables": {
            "type": "array",
            "items": {
              "$ref": "#/types/akamai:index/getPropertyRulesTemplateVariable:getPropertyRulesTemplateVariable"
            }
          }
        },
        "type": "object",
        "required": [
          "json",
          "id"
        ]
      }
    },
    "akamai:properties/getActivation:getActivation": {
      "deprecationMessage": "akamai.properties/getactivation.getActivation has been deprecated in favor of akamai.index/getpropertyactivation.getPropertyActivation",
      "inputs": {
        "description": "A collection of arguments for invoking getActivation.\n",
        "properties": {
          "network": {
            "type": "string"
          },
          "propertyId": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "propertyId",
          "version"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getActivation.\n",
        "properties": {
          "activationId": {
            "type": "string"
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "errors": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "network": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "propertyId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          },
          "warnings": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "activationId",
          "contacts",
          "errors",
          "note",
          "propertyId",
          "status",
          "version",
          "warnings",
          "id"
        ]
      }
    },
    "akamai:properties/getCpCode:getCpCode": {
      "deprecationMessage": "akamai.properties/getcpcode.getCpCode has been deprecated in favor of akamai.index/getcpcode.getCpCode",
      "inputs": {
        "description": "A collection of arguments for invoking getCpCode.\n",
        "properties": {
          "contractId": {
            "type": "string",
            "willReplaceOnChanges": true
          },
          "groupId": {
            "type": "string",
            "willReplaceOnChanges": true
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "contractId",
          "groupId",
          "name"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getCpCode.\n",
        "properties": {
          "contractId": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "name": {
            "type": "string"
          },
          "productIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "type": "object",
        "required": [
          "contractId",
          "groupId",
          "name",
          "productIds",
          "id"
        ]
      }
    },
    "akamai:properties/getProperty:getProperty": {
      "deprecationMessage": "akamai.properties/getproperty.getProperty has been deprecated in favor of akamai.index/getproperty.getProperty",
      "inputs": {
        "description": "A collection of arguments for invoking getProperty.\n",
        "properties": {
          "name": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "name"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getProperty.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "name": {
            "type": "string"
          },
          "rules": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "name",
          "rules",
          "id"
        ]
      }
    },
    "akamai:properties/getPropertyRules:getPropertyRules": {
      "deprecationMessage": "akamai.properties/getpropertyrules.getPropertyRules has been deprecated in favor of akamai.index/getpropertyrules.getPropertyRules",
      "inputs": {
        "description": "A collection of arguments for invoking getPropertyRules.\n",
        "properties": {
          "contractId": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "propertyId": {
            "type": "string"
          },
          "ruleFormat": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "propertyId"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getPropertyRules.\n",
        "properties": {
          "contractId": {
            "type": "string"
          },
          "errors": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "propertyId": {
            "type": "string"
          },
          "ruleFormat": {
            "type": "string"
          },
          "rules": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "contractId",
          "errors",
          "groupId",
          "propertyId",
          "rules",
          "version",
          "id"
        ]
      }
    },
    "akamai:trafficmanagement/getGtmDefaultDatacenter:getGtmDefaultDatacenter": {
      "deprecationMessage": "akamai.trafficmanagement/getgtmdefaultdatacenter.getGtmDefaultDatacenter has been deprecated in favor of akamai.index/getgtmdefaultdatacenter.getGtmDefaultDatacenter",
      "inputs": {
        "description": "A collection of arguments for invoking getGtmDefaultDatacenter.\n",
        "properties": {
          "datacenter": {
            "type": "integer"
          },
          "domain": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "domain"
        ]
      },
      "outputs": {
        "description": "A collection of values returned by getGtmDefaultDatacenter.\n",
        "properties": {
          "datacenter": {
            "type": "integer"
          },
          "datacenterId": {
            "type": "integer"
          },
          "domain": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "The provider-assigned unique ID for this managed resource.\n"
          },
          "nickname": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "datacenterId",
          "domain",
          "nickname",
          "id"
        ]
      }
    }
  }
}