// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package pulumirpc.provider

/** ConfigureErrorMissingKeys is sent as a Detail on an error returned from `ResourceProvider.Configure`.
  *
  * @param missingKeys
  *   a list of required configuration keys that were not supplied.
  */
@SerialVersionUID(0L)
final case class ConfigureErrorMissingKeys(
    missingKeys: _root_.scala.Seq[pulumirpc.provider.ConfigureErrorMissingKeys.MissingKey] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[ConfigureErrorMissingKeys] {
    @transient
    private var __serializedSizeMemoized: _root_.scala.Int = 0
    private def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      missingKeys.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      missingKeys.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def clearMissingKeys = copy(missingKeys = _root_.scala.Seq.empty)
    def addMissingKeys(__vs: pulumirpc.provider.ConfigureErrorMissingKeys.MissingKey *): ConfigureErrorMissingKeys = addAllMissingKeys(__vs)
    def addAllMissingKeys(__vs: Iterable[pulumirpc.provider.ConfigureErrorMissingKeys.MissingKey]): ConfigureErrorMissingKeys = copy(missingKeys = missingKeys ++ __vs)
    def withMissingKeys(__v: _root_.scala.Seq[pulumirpc.provider.ConfigureErrorMissingKeys.MissingKey]): ConfigureErrorMissingKeys = copy(missingKeys = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => missingKeys
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(missingKeys.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: pulumirpc.provider.ConfigureErrorMissingKeys.type = pulumirpc.provider.ConfigureErrorMissingKeys
    // @@protoc_insertion_point(GeneratedMessage[pulumirpc.ConfigureErrorMissingKeys])
}

object ConfigureErrorMissingKeys extends scalapb.GeneratedMessageCompanion[pulumirpc.provider.ConfigureErrorMissingKeys] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[pulumirpc.provider.ConfigureErrorMissingKeys] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): pulumirpc.provider.ConfigureErrorMissingKeys = {
    val __missingKeys: _root_.scala.collection.immutable.VectorBuilder[pulumirpc.provider.ConfigureErrorMissingKeys.MissingKey] = new _root_.scala.collection.immutable.VectorBuilder[pulumirpc.provider.ConfigureErrorMissingKeys.MissingKey]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __missingKeys += _root_.scalapb.LiteParser.readMessage[pulumirpc.provider.ConfigureErrorMissingKeys.MissingKey](_input__)
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    pulumirpc.provider.ConfigureErrorMissingKeys(
        missingKeys = __missingKeys.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[pulumirpc.provider.ConfigureErrorMissingKeys] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      pulumirpc.provider.ConfigureErrorMissingKeys(
        missingKeys = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[pulumirpc.provider.ConfigureErrorMissingKeys.MissingKey]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = pulumirpc.provider.ProviderProto.javaDescriptor.getMessageTypes().get(6)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = pulumirpc.provider.ProviderProto.scalaDescriptor.messages(6)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[?] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = pulumirpc.provider.ConfigureErrorMissingKeys.MissingKey
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]](
      _root_.pulumirpc.provider.ConfigureErrorMissingKeys.MissingKey
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = pulumirpc.provider.ConfigureErrorMissingKeys(
    missingKeys = _root_.scala.Seq.empty
  )
  /** @param name
    *   the Pulumi name (not the provider name!) of the missing config key.
    * @param description
    *   a description of the missing config key, as reported by the provider.
    */
  @SerialVersionUID(0L)
  final case class MissingKey(
      name: _root_.scala.Predef.String = "",
      description: _root_.scala.Predef.String = "",
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[MissingKey] {
      @transient
      private var __serializedSizeMemoized: _root_.scala.Int = 0
      private def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = name
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        
        {
          val __value = description
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
          }
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = name
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        {
          val __v = description
          if (!__v.isEmpty) {
            _output__.writeString(2, __v)
          }
        };
        unknownFields.writeTo(_output__)
      }
      def withName(__v: _root_.scala.Predef.String): MissingKey = copy(name = __v)
      def withDescription(__v: _root_.scala.Predef.String): MissingKey = copy(description = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = name
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = description
            if (__t != "") __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(name)
          case 2 => _root_.scalapb.descriptors.PString(description)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: pulumirpc.provider.ConfigureErrorMissingKeys.MissingKey.type = pulumirpc.provider.ConfigureErrorMissingKeys.MissingKey
      // @@protoc_insertion_point(GeneratedMessage[pulumirpc.ConfigureErrorMissingKeys.MissingKey])
  }
  
  object MissingKey extends scalapb.GeneratedMessageCompanion[pulumirpc.provider.ConfigureErrorMissingKeys.MissingKey] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[pulumirpc.provider.ConfigureErrorMissingKeys.MissingKey] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): pulumirpc.provider.ConfigureErrorMissingKeys.MissingKey = {
      var __name: _root_.scala.Predef.String = ""
      var __description: _root_.scala.Predef.String = ""
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __name = _input__.readStringRequireUtf8()
          case 18 =>
            __description = _input__.readStringRequireUtf8()
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      pulumirpc.provider.ConfigureErrorMissingKeys.MissingKey(
          name = __name,
          description = __description,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[pulumirpc.provider.ConfigureErrorMissingKeys.MissingKey] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        pulumirpc.provider.ConfigureErrorMissingKeys.MissingKey(
          name = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          description = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = pulumirpc.provider.ConfigureErrorMissingKeys.javaDescriptor.getNestedTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = pulumirpc.provider.ConfigureErrorMissingKeys.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = pulumirpc.provider.ConfigureErrorMissingKeys.MissingKey(
      name = "",
      description = ""
    )
    implicit class MissingKeyLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, pulumirpc.provider.ConfigureErrorMissingKeys.MissingKey]) extends _root_.scalapb.lenses.MessageLens[UpperPB, pulumirpc.provider.ConfigureErrorMissingKeys.MissingKey](_l) {
      def name: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.name)((c_, f_) => c_.copy(name = f_))
      def description: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.description)((c_, f_) => c_.copy(description = f_))
    }
    final val NAME_FIELD_NUMBER = 1
    final val DESCRIPTION_FIELD_NUMBER = 2
    def of(
      name: _root_.scala.Predef.String,
      description: _root_.scala.Predef.String
    ): _root_.pulumirpc.provider.ConfigureErrorMissingKeys.MissingKey = _root_.pulumirpc.provider.ConfigureErrorMissingKeys.MissingKey(
      name,
      description
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[pulumirpc.ConfigureErrorMissingKeys.MissingKey])
  }
  
  implicit class ConfigureErrorMissingKeysLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, pulumirpc.provider.ConfigureErrorMissingKeys]) extends _root_.scalapb.lenses.MessageLens[UpperPB, pulumirpc.provider.ConfigureErrorMissingKeys](_l) {
    def missingKeys: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[pulumirpc.provider.ConfigureErrorMissingKeys.MissingKey]] = field(_.missingKeys)((c_, f_) => c_.copy(missingKeys = f_))
  }
  final val MISSINGKEYS_FIELD_NUMBER = 1
  def of(
    missingKeys: _root_.scala.Seq[pulumirpc.provider.ConfigureErrorMissingKeys.MissingKey]
  ): _root_.pulumirpc.provider.ConfigureErrorMissingKeys = _root_.pulumirpc.provider.ConfigureErrorMissingKeys(
    missingKeys
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[pulumirpc.ConfigureErrorMissingKeys])
}
