// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package pulumirpc.language

/** RunRequest asks the interpreter to execute a program.
  *
  * @param project
  *   the project name.
  * @param stack
  *   the name of the stack being deployed into.
  * @param pwd
  *   the program's working directory.
  * @param program
  *   the path to the program to execute.
  * @param args
  *   any arguments to pass to the program.
  * @param config
  *   the configuration variables to apply before running.
  * @param dryRun
  *   true if we're only doing a dryrun (preview).
  * @param parallel
  *   the degree of parallelism for resource operations (&lt;=1 for serial).
  * @param monitorAddress
  *   the address for communicating back to the resource monitor.
  * @param queryMode
  *   true if we're only doing a query.
  * @param configSecretKeys
  *   the configuration keys that have secret values.
  * @param organization
  *   the organization of the stack being deployed into.
  * @param configPropertyMap
  *   the configuration variables to apply before running.
  * @param info
  *   the program info to use to execute the program.
  */
@SerialVersionUID(0L)
final case class RunRequest(
    project: _root_.scala.Predef.String = "",
    stack: _root_.scala.Predef.String = "",
    pwd: _root_.scala.Predef.String = "",
    @scala.deprecated(message="Marked as deprecated in proto file", "") program: _root_.scala.Predef.String = "",
    args: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    config: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String] = _root_.scala.collection.immutable.Map.empty,
    dryRun: _root_.scala.Boolean = false,
    parallel: _root_.scala.Int = 0,
    monitorAddress: _root_.scala.Predef.String = "",
    queryMode: _root_.scala.Boolean = false,
    configSecretKeys: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    organization: _root_.scala.Predef.String = "",
    configPropertyMap: _root_.scala.Option[com.google.protobuf.struct.Struct] = _root_.scala.None,
    info: _root_.scala.Option[pulumirpc.language.ProgramInfo] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[RunRequest] {
    @transient
    private var __serializedSizeMemoized: _root_.scala.Int = 0
    private def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = project
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = stack
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = pwd
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = program
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      args.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
      }
      config.foreach { __item =>
        val __value = pulumirpc.language.RunRequest._typemapper_config.toBase(__item)
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      
      {
        val __value = dryRun
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(7, __value)
        }
      };
      
      {
        val __value = parallel
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(8, __value)
        }
      };
      
      {
        val __value = monitorAddress
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(9, __value)
        }
      };
      
      {
        val __value = queryMode
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(10, __value)
        }
      };
      configSecretKeys.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(11, __value)
      }
      
      {
        val __value = organization
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(12, __value)
        }
      };
      if (configPropertyMap.isDefined) {
        val __value = configPropertyMap.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (info.isDefined) {
        val __value = info.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = project
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = stack
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = pwd
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = program
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      args.foreach { __v =>
        val __m = __v
        _output__.writeString(5, __m)
      };
      config.foreach { __v =>
        val __m = pulumirpc.language.RunRequest._typemapper_config.toBase(__v)
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = dryRun
        if (__v != false) {
          _output__.writeBool(7, __v)
        }
      };
      {
        val __v = parallel
        if (__v != 0) {
          _output__.writeInt32(8, __v)
        }
      };
      {
        val __v = monitorAddress
        if (!__v.isEmpty) {
          _output__.writeString(9, __v)
        }
      };
      {
        val __v = queryMode
        if (__v != false) {
          _output__.writeBool(10, __v)
        }
      };
      configSecretKeys.foreach { __v =>
        val __m = __v
        _output__.writeString(11, __m)
      };
      {
        val __v = organization
        if (!__v.isEmpty) {
          _output__.writeString(12, __v)
        }
      };
      configPropertyMap.foreach { __v =>
        val __m = __v
        _output__.writeTag(13, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      info.foreach { __v =>
        val __m = __v
        _output__.writeTag(14, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withProject(__v: _root_.scala.Predef.String): RunRequest = copy(project = __v)
    def withStack(__v: _root_.scala.Predef.String): RunRequest = copy(stack = __v)
    def withPwd(__v: _root_.scala.Predef.String): RunRequest = copy(pwd = __v)
    def withProgram(__v: _root_.scala.Predef.String): RunRequest = copy(program = __v)
    def clearArgs = copy(args = _root_.scala.Seq.empty)
    def addArgs(__vs: _root_.scala.Predef.String *): RunRequest = addAllArgs(__vs)
    def addAllArgs(__vs: Iterable[_root_.scala.Predef.String]): RunRequest = copy(args = args ++ __vs)
    def withArgs(__v: _root_.scala.Seq[_root_.scala.Predef.String]): RunRequest = copy(args = __v)
    def clearConfig = copy(config = _root_.scala.collection.immutable.Map.empty)
    def addConfig(__vs: (_root_.scala.Predef.String, _root_.scala.Predef.String) *): RunRequest = addAllConfig(__vs)
    def addAllConfig(__vs: Iterable[(_root_.scala.Predef.String, _root_.scala.Predef.String)]): RunRequest = copy(config = config ++ __vs)
    def withConfig(__v: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]): RunRequest = copy(config = __v)
    def withDryRun(__v: _root_.scala.Boolean): RunRequest = copy(dryRun = __v)
    def withParallel(__v: _root_.scala.Int): RunRequest = copy(parallel = __v)
    def withMonitorAddress(__v: _root_.scala.Predef.String): RunRequest = copy(monitorAddress = __v)
    def withQueryMode(__v: _root_.scala.Boolean): RunRequest = copy(queryMode = __v)
    def clearConfigSecretKeys = copy(configSecretKeys = _root_.scala.Seq.empty)
    def addConfigSecretKeys(__vs: _root_.scala.Predef.String *): RunRequest = addAllConfigSecretKeys(__vs)
    def addAllConfigSecretKeys(__vs: Iterable[_root_.scala.Predef.String]): RunRequest = copy(configSecretKeys = configSecretKeys ++ __vs)
    def withConfigSecretKeys(__v: _root_.scala.Seq[_root_.scala.Predef.String]): RunRequest = copy(configSecretKeys = __v)
    def withOrganization(__v: _root_.scala.Predef.String): RunRequest = copy(organization = __v)
    def getConfigPropertyMap: com.google.protobuf.struct.Struct = configPropertyMap.getOrElse(com.google.protobuf.struct.Struct.defaultInstance)
    def clearConfigPropertyMap: RunRequest = copy(configPropertyMap = _root_.scala.None)
    def withConfigPropertyMap(__v: com.google.protobuf.struct.Struct): RunRequest = copy(configPropertyMap = Option(__v))
    def getInfo: pulumirpc.language.ProgramInfo = info.getOrElse(pulumirpc.language.ProgramInfo.defaultInstance)
    def clearInfo: RunRequest = copy(info = _root_.scala.None)
    def withInfo(__v: pulumirpc.language.ProgramInfo): RunRequest = copy(info = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = project
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = stack
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = pwd
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = program
          if (__t != "") __t else null
        }
        case 5 => args
        case 6 => config.iterator.map(pulumirpc.language.RunRequest._typemapper_config.toBase(_)).toSeq
        case 7 => {
          val __t = dryRun
          if (__t != false) __t else null
        }
        case 8 => {
          val __t = parallel
          if (__t != 0) __t else null
        }
        case 9 => {
          val __t = monitorAddress
          if (__t != "") __t else null
        }
        case 10 => {
          val __t = queryMode
          if (__t != false) __t else null
        }
        case 11 => configSecretKeys
        case 12 => {
          val __t = organization
          if (__t != "") __t else null
        }
        case 13 => configPropertyMap.orNull
        case 14 => info.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(project)
        case 2 => _root_.scalapb.descriptors.PString(stack)
        case 3 => _root_.scalapb.descriptors.PString(pwd)
        case 4 => _root_.scalapb.descriptors.PString(program)
        case 5 => _root_.scalapb.descriptors.PRepeated(args.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 6 => _root_.scalapb.descriptors.PRepeated(config.iterator.map(pulumirpc.language.RunRequest._typemapper_config.toBase(_).toPMessage).toVector)
        case 7 => _root_.scalapb.descriptors.PBoolean(dryRun)
        case 8 => _root_.scalapb.descriptors.PInt(parallel)
        case 9 => _root_.scalapb.descriptors.PString(monitorAddress)
        case 10 => _root_.scalapb.descriptors.PBoolean(queryMode)
        case 11 => _root_.scalapb.descriptors.PRepeated(configSecretKeys.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 12 => _root_.scalapb.descriptors.PString(organization)
        case 13 => configPropertyMap.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 14 => info.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: pulumirpc.language.RunRequest.type = pulumirpc.language.RunRequest
    // @@protoc_insertion_point(GeneratedMessage[pulumirpc.RunRequest])
}

object RunRequest extends scalapb.GeneratedMessageCompanion[pulumirpc.language.RunRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[pulumirpc.language.RunRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): pulumirpc.language.RunRequest = {
    var __project: _root_.scala.Predef.String = ""
    var __stack: _root_.scala.Predef.String = ""
    var __pwd: _root_.scala.Predef.String = ""
    var __program: _root_.scala.Predef.String = ""
    val __args: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    val __config: _root_.scala.collection.mutable.Builder[(_root_.scala.Predef.String, _root_.scala.Predef.String), _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]] = _root_.scala.collection.immutable.Map.newBuilder[_root_.scala.Predef.String, _root_.scala.Predef.String]
    var __dryRun: _root_.scala.Boolean = false
    var __parallel: _root_.scala.Int = 0
    var __monitorAddress: _root_.scala.Predef.String = ""
    var __queryMode: _root_.scala.Boolean = false
    val __configSecretKeys: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var __organization: _root_.scala.Predef.String = ""
    var __configPropertyMap: _root_.scala.Option[com.google.protobuf.struct.Struct] = _root_.scala.None
    var __info: _root_.scala.Option[pulumirpc.language.ProgramInfo] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __project = _input__.readStringRequireUtf8()
        case 18 =>
          __stack = _input__.readStringRequireUtf8()
        case 26 =>
          __pwd = _input__.readStringRequireUtf8()
        case 34 =>
          __program = _input__.readStringRequireUtf8()
        case 42 =>
          __args += _input__.readStringRequireUtf8()
        case 50 =>
          __config += pulumirpc.language.RunRequest._typemapper_config.toCustom(_root_.scalapb.LiteParser.readMessage[pulumirpc.language.RunRequest.ConfigEntry](_input__))
        case 56 =>
          __dryRun = _input__.readBool()
        case 64 =>
          __parallel = _input__.readInt32()
        case 74 =>
          __monitorAddress = _input__.readStringRequireUtf8()
        case 80 =>
          __queryMode = _input__.readBool()
        case 90 =>
          __configSecretKeys += _input__.readStringRequireUtf8()
        case 98 =>
          __organization = _input__.readStringRequireUtf8()
        case 106 =>
          __configPropertyMap = _root_.scala.Option(__configPropertyMap.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.struct.Struct](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 114 =>
          __info = _root_.scala.Option(__info.fold(_root_.scalapb.LiteParser.readMessage[pulumirpc.language.ProgramInfo](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    pulumirpc.language.RunRequest(
        project = __project,
        stack = __stack,
        pwd = __pwd,
        program = __program,
        args = __args.result(),
        config = __config.result(),
        dryRun = __dryRun,
        parallel = __parallel,
        monitorAddress = __monitorAddress,
        queryMode = __queryMode,
        configSecretKeys = __configSecretKeys.result(),
        organization = __organization,
        configPropertyMap = __configPropertyMap,
        info = __info,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[pulumirpc.language.RunRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      pulumirpc.language.RunRequest(
        project = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        stack = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        pwd = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        program = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        args = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        config = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Seq[pulumirpc.language.RunRequest.ConfigEntry]]).getOrElse(_root_.scala.Seq.empty).iterator.map(pulumirpc.language.RunRequest._typemapper_config.toCustom(_)).toMap,
        dryRun = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        parallel = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        monitorAddress = __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        queryMode = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        configSecretKeys = __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        organization = __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        configPropertyMap = __fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.struct.Struct]]),
        info = __fieldsMap.get(scalaDescriptor.findFieldByNumber(14).get).flatMap(_.as[_root_.scala.Option[pulumirpc.language.ProgramInfo]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = LanguageProto.javaDescriptor.getMessageTypes().get(7)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = LanguageProto.scalaDescriptor.messages(7)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[?] = null
    (__number: @_root_.scala.unchecked) match {
      case 6 => __out = pulumirpc.language.RunRequest.ConfigEntry
      case 13 => __out = com.google.protobuf.struct.Struct
      case 14 => __out = pulumirpc.language.ProgramInfo
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]](
      _root_.pulumirpc.language.RunRequest.ConfigEntry
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = pulumirpc.language.RunRequest(
    project = "",
    stack = "",
    pwd = "",
    program = "",
    args = _root_.scala.Seq.empty,
    config = _root_.scala.collection.immutable.Map.empty,
    dryRun = false,
    parallel = 0,
    monitorAddress = "",
    queryMode = false,
    configSecretKeys = _root_.scala.Seq.empty,
    organization = "",
    configPropertyMap = _root_.scala.None,
    info = _root_.scala.None
  )
  @SerialVersionUID(0L)
  final case class ConfigEntry(
      key: _root_.scala.Predef.String = "",
      value: _root_.scala.Predef.String = "",
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[ConfigEntry] {
      @transient
      private var __serializedSizeMemoized: _root_.scala.Int = 0
      private def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = key
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        
        {
          val __value = value
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
          }
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = key
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        {
          val __v = value
          if (!__v.isEmpty) {
            _output__.writeString(2, __v)
          }
        };
        unknownFields.writeTo(_output__)
      }
      def withKey(__v: _root_.scala.Predef.String): ConfigEntry = copy(key = __v)
      def withValue(__v: _root_.scala.Predef.String): ConfigEntry = copy(value = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = key
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = value
            if (__t != "") __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(key)
          case 2 => _root_.scalapb.descriptors.PString(value)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: pulumirpc.language.RunRequest.ConfigEntry.type = pulumirpc.language.RunRequest.ConfigEntry
      // @@protoc_insertion_point(GeneratedMessage[pulumirpc.RunRequest.ConfigEntry])
  }
  
  object ConfigEntry extends scalapb.GeneratedMessageCompanion[pulumirpc.language.RunRequest.ConfigEntry] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[pulumirpc.language.RunRequest.ConfigEntry] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): pulumirpc.language.RunRequest.ConfigEntry = {
      var __key: _root_.scala.Predef.String = ""
      var __value: _root_.scala.Predef.String = ""
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __key = _input__.readStringRequireUtf8()
          case 18 =>
            __value = _input__.readStringRequireUtf8()
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      pulumirpc.language.RunRequest.ConfigEntry(
          key = __key,
          value = __value,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[pulumirpc.language.RunRequest.ConfigEntry] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        pulumirpc.language.RunRequest.ConfigEntry(
          key = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = pulumirpc.language.RunRequest.javaDescriptor.getNestedTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = pulumirpc.language.RunRequest.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = pulumirpc.language.RunRequest.ConfigEntry(
      key = "",
      value = ""
    )
    implicit class ConfigEntryLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, pulumirpc.language.RunRequest.ConfigEntry]) extends _root_.scalapb.lenses.MessageLens[UpperPB, pulumirpc.language.RunRequest.ConfigEntry](_l) {
      def key: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.key)((c_, f_) => c_.copy(key = f_))
      def value: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.value)((c_, f_) => c_.copy(value = f_))
    }
    final val KEY_FIELD_NUMBER = 1
    final val VALUE_FIELD_NUMBER = 2
    @transient
    implicit val keyValueMapper: _root_.scalapb.TypeMapper[pulumirpc.language.RunRequest.ConfigEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)] =
      _root_.scalapb.TypeMapper[pulumirpc.language.RunRequest.ConfigEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)](__m => (__m.key, __m.value))(__p => pulumirpc.language.RunRequest.ConfigEntry(__p._1, __p._2))
    def of(
      key: _root_.scala.Predef.String,
      value: _root_.scala.Predef.String
    ): _root_.pulumirpc.language.RunRequest.ConfigEntry = _root_.pulumirpc.language.RunRequest.ConfigEntry(
      key,
      value
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[pulumirpc.RunRequest.ConfigEntry])
  }
  
  implicit class RunRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, pulumirpc.language.RunRequest]) extends _root_.scalapb.lenses.MessageLens[UpperPB, pulumirpc.language.RunRequest](_l) {
    def project: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.project)((c_, f_) => c_.copy(project = f_))
    def stack: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.stack)((c_, f_) => c_.copy(stack = f_))
    def pwd: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.pwd)((c_, f_) => c_.copy(pwd = f_))
    def program: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.program)((c_, f_) => c_.copy(program = f_))
    def args: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.args)((c_, f_) => c_.copy(args = f_))
    def config: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]] = field(_.config)((c_, f_) => c_.copy(config = f_))
    def dryRun: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.dryRun)((c_, f_) => c_.copy(dryRun = f_))
    def parallel: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.parallel)((c_, f_) => c_.copy(parallel = f_))
    def monitorAddress: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.monitorAddress)((c_, f_) => c_.copy(monitorAddress = f_))
    def queryMode: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.queryMode)((c_, f_) => c_.copy(queryMode = f_))
    def configSecretKeys: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.configSecretKeys)((c_, f_) => c_.copy(configSecretKeys = f_))
    def organization: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.organization)((c_, f_) => c_.copy(organization = f_))
    def configPropertyMap: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.struct.Struct] = field(_.getConfigPropertyMap)((c_, f_) => c_.copy(configPropertyMap = _root_.scala.Option(f_)))
    def optionalConfigPropertyMap: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.struct.Struct]] = field(_.configPropertyMap)((c_, f_) => c_.copy(configPropertyMap = f_))
    def info: _root_.scalapb.lenses.Lens[UpperPB, pulumirpc.language.ProgramInfo] = field(_.getInfo)((c_, f_) => c_.copy(info = _root_.scala.Option(f_)))
    def optionalInfo: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[pulumirpc.language.ProgramInfo]] = field(_.info)((c_, f_) => c_.copy(info = f_))
  }
  final val PROJECT_FIELD_NUMBER = 1
  final val STACK_FIELD_NUMBER = 2
  final val PWD_FIELD_NUMBER = 3
  final val PROGRAM_FIELD_NUMBER = 4
  final val ARGS_FIELD_NUMBER = 5
  final val CONFIG_FIELD_NUMBER = 6
  final val DRYRUN_FIELD_NUMBER = 7
  final val PARALLEL_FIELD_NUMBER = 8
  final val MONITOR_ADDRESS_FIELD_NUMBER = 9
  final val QUERYMODE_FIELD_NUMBER = 10
  final val CONFIGSECRETKEYS_FIELD_NUMBER = 11
  final val ORGANIZATION_FIELD_NUMBER = 12
  final val CONFIGPROPERTYMAP_FIELD_NUMBER = 13
  final val INFO_FIELD_NUMBER = 14
  @transient
  private[language] val _typemapper_config: _root_.scalapb.TypeMapper[pulumirpc.language.RunRequest.ConfigEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)] = implicitly[_root_.scalapb.TypeMapper[pulumirpc.language.RunRequest.ConfigEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)]]
  def of(
    project: _root_.scala.Predef.String,
    stack: _root_.scala.Predef.String,
    pwd: _root_.scala.Predef.String,
    program: _root_.scala.Predef.String,
    args: _root_.scala.Seq[_root_.scala.Predef.String],
    config: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String],
    dryRun: _root_.scala.Boolean,
    parallel: _root_.scala.Int,
    monitorAddress: _root_.scala.Predef.String,
    queryMode: _root_.scala.Boolean,
    configSecretKeys: _root_.scala.Seq[_root_.scala.Predef.String],
    organization: _root_.scala.Predef.String,
    configPropertyMap: _root_.scala.Option[com.google.protobuf.struct.Struct],
    info: _root_.scala.Option[pulumirpc.language.ProgramInfo]
  ): _root_.pulumirpc.language.RunRequest = _root_.pulumirpc.language.RunRequest(
    project,
    stack,
    pwd,
    program,
    args,
    config,
    dryRun,
    parallel,
    monitorAddress,
    queryMode,
    configSecretKeys,
    organization,
    configPropertyMap,
    info
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[pulumirpc.RunRequest])
}
