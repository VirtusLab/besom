// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package pulumirpc.resource

object ResourceProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    com.google.protobuf.empty.EmptyProto,
    com.google.protobuf.struct.StructProto,
    pulumirpc.provider.ProviderProto,
    pulumirpc.alias.AliasProto,
    pulumirpc.source.SourceProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      pulumirpc.resource.SupportsFeatureRequest,
      pulumirpc.resource.SupportsFeatureResponse,
      pulumirpc.resource.ReadResourceRequest,
      pulumirpc.resource.ReadResourceResponse,
      pulumirpc.resource.RegisterResourceRequest,
      pulumirpc.resource.RegisterResourceResponse,
      pulumirpc.resource.RegisterResourceOutputsRequest,
      pulumirpc.resource.ResourceInvokeRequest
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """ChVwdWx1bWkvcmVzb3VyY2UucHJvdG8SCXB1bHVtaXJwYxobZ29vZ2xlL3Byb3RvYnVmL2VtcHR5LnByb3RvGhxnb29nbGUvc
  HJvdG9idWYvc3RydWN0LnByb3RvGhVwdWx1bWkvcHJvdmlkZXIucHJvdG8aEnB1bHVtaS9hbGlhcy5wcm90bxoTcHVsdW1pL3Nvd
  XJjZS5wcm90byIxChZTdXBwb3J0c0ZlYXR1cmVSZXF1ZXN0EhcKAmlkGAEgASgJQgfiPwQSAmlkUgJpZCJKChdTdXBwb3J0c0ZlY
  XR1cmVSZXNwb25zZRIvCgpoYXNTdXBwb3J0GAEgASgIQg/iPwwSCmhhc1N1cHBvcnRSCmhhc1N1cHBvcnQiswcKE1JlYWRSZXNvd
  XJjZVJlcXVlc3QSFwoCaWQYASABKAlCB+I/BBICaWRSAmlkEh0KBHR5cGUYAiABKAlCCeI/BhIEdHlwZVIEdHlwZRIdCgRuYW1lG
  AMgASgJQgniPwYSBG5hbWVSBG5hbWUSIwoGcGFyZW50GAQgASgJQgviPwgSBnBhcmVudFIGcGFyZW50EkgKCnByb3BlcnRpZXMYB
  SABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0Qg/iPwwSCnByb3BlcnRpZXNSCnByb3BlcnRpZXMSNQoMZGVwZW5kZW5jaWVzG
  AYgAygJQhHiPw4SDGRlcGVuZGVuY2llc1IMZGVwZW5kZW5jaWVzEikKCHByb3ZpZGVyGAcgASgJQg3iPwoSCHByb3ZpZGVyUghwc
  m92aWRlchImCgd2ZXJzaW9uGAggASgJQgziPwkSB3ZlcnNpb25SB3ZlcnNpb24SOAoNYWNjZXB0U2VjcmV0cxgJIAEoCEIS4j8PE
  g1hY2NlcHRTZWNyZXRzUg1hY2NlcHRTZWNyZXRzElYKF2FkZGl0aW9uYWxTZWNyZXRPdXRwdXRzGAogAygJQhziPxkSF2FkZGl0a
  W9uYWxTZWNyZXRPdXRwdXRzUhdhZGRpdGlvbmFsU2VjcmV0T3V0cHV0cxI+Cg9hY2NlcHRSZXNvdXJjZXMYDCABKAhCFOI/ERIPY
  WNjZXB0UmVzb3VyY2VzUg9hY2NlcHRSZXNvdXJjZXMSRAoRcGx1Z2luRG93bmxvYWRVUkwYDSABKAlCFuI/ExIRcGx1Z2luRG93b
  mxvYWRVUkxSEXBsdWdpbkRvd25sb2FkVVJMEnMKD3BsdWdpbkNoZWNrc3VtcxgPIAMoCzIzLnB1bHVtaXJwYy5SZWFkUmVzb3VyY
  2VSZXF1ZXN0LlBsdWdpbkNoZWNrc3Vtc0VudHJ5QhTiPxESD3BsdWdpbkNoZWNrc3Vtc1IPcGx1Z2luQ2hlY2tzdW1zElYKDnNvd
  XJjZVBvc2l0aW9uGA4gASgLMhkucHVsdW1pcnBjLlNvdXJjZVBvc2l0aW9uQhPiPxASDnNvdXJjZVBvc2l0aW9uUg5zb3VyY2VQb
  3NpdGlvbhpYChRQbHVnaW5DaGVja3N1bXNFbnRyeRIaCgNrZXkYASABKAlCCOI/BRIDa2V5UgNrZXkSIAoFdmFsdWUYAiABKAxCC
  uI/BxIFdmFsdWVSBXZhbHVlOgI4AUoECAsQDFIHYWxpYXNlcyJ8ChRSZWFkUmVzb3VyY2VSZXNwb25zZRIaCgN1cm4YASABKAlCC
  OI/BRIDdXJuUgN1cm4SSAoKcHJvcGVydGllcxgCIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3RCD+I/DBIKcHJvcGVydGllc
  1IKcHJvcGVydGllcyKuEwoXUmVnaXN0ZXJSZXNvdXJjZVJlcXVlc3QSHQoEdHlwZRgBIAEoCUIJ4j8GEgR0eXBlUgR0eXBlEh0KB
  G5hbWUYAiABKAlCCeI/BhIEbmFtZVIEbmFtZRIjCgZwYXJlbnQYAyABKAlCC+I/CBIGcGFyZW50UgZwYXJlbnQSIwoGY3VzdG9tG
  AQgASgIQgviPwgSBmN1c3RvbVIGY3VzdG9tEjwKBm9iamVjdBgFIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3RCC+I/CBIGb
  2JqZWN0UgZvYmplY3QSJgoHcHJvdGVjdBgGIAEoCEIM4j8JEgdwcm90ZWN0Ugdwcm90ZWN0EjUKDGRlcGVuZGVuY2llcxgHIAMoC
  UIR4j8OEgxkZXBlbmRlbmNpZXNSDGRlcGVuZGVuY2llcxIpCghwcm92aWRlchgIIAEoCUIN4j8KEghwcm92aWRlclIIcHJvdmlkZ
  XISiwEKFHByb3BlcnR5RGVwZW5kZW5jaWVzGAkgAygLMjwucHVsdW1pcnBjLlJlZ2lzdGVyUmVzb3VyY2VSZXF1ZXN0LlByb3Blc
  nR5RGVwZW5kZW5jaWVzRW50cnlCGeI/FhIUcHJvcGVydHlEZXBlbmRlbmNpZXNSFHByb3BlcnR5RGVwZW5kZW5jaWVzEkoKE2Rlb
  GV0ZUJlZm9yZVJlcGxhY2UYCiABKAhCGOI/FRITZGVsZXRlQmVmb3JlUmVwbGFjZVITZGVsZXRlQmVmb3JlUmVwbGFjZRImCgd2Z
  XJzaW9uGAsgASgJQgziPwkSB3ZlcnNpb25SB3ZlcnNpb24SOAoNaWdub3JlQ2hhbmdlcxgMIAMoCUIS4j8PEg1pZ25vcmVDaGFuZ
  2VzUg1pZ25vcmVDaGFuZ2VzEjgKDWFjY2VwdFNlY3JldHMYDSABKAhCEuI/DxINYWNjZXB0U2VjcmV0c1INYWNjZXB0U2VjcmV0c
  xJWChdhZGRpdGlvbmFsU2VjcmV0T3V0cHV0cxgOIAMoCUIc4j8ZEhdhZGRpdGlvbmFsU2VjcmV0T3V0cHV0c1IXYWRkaXRpb25hb
  FNlY3JldE91dHB1dHMSLAoJYWxpYXNVUk5zGA8gAygJQg7iPwsSCWFsaWFzVVJOc1IJYWxpYXNVUk5zEikKCGltcG9ydElkGBAgA
  SgJQg3iPwoSCGltcG9ydElkUghpbXBvcnRJZBJuCg5jdXN0b21UaW1lb3V0cxgRIAEoCzIxLnB1bHVtaXJwYy5SZWdpc3RlclJlc
  291cmNlUmVxdWVzdC5DdXN0b21UaW1lb3V0c0IT4j8QEg5jdXN0b21UaW1lb3V0c1IOY3VzdG9tVGltZW91dHMSXwoaZGVsZXRlQ
  mVmb3JlUmVwbGFjZURlZmluZWQYEiABKAhCH+I/HBIaZGVsZXRlQmVmb3JlUmVwbGFjZURlZmluZWRSGmRlbGV0ZUJlZm9yZVJlc
  GxhY2VEZWZpbmVkElAKFXN1cHBvcnRzUGFydGlhbFZhbHVlcxgTIAEoCEIa4j8XEhVzdXBwb3J0c1BhcnRpYWxWYWx1ZXNSFXN1c
  HBvcnRzUGFydGlhbFZhbHVlcxIjCgZyZW1vdGUYFCABKAhCC+I/CBIGcmVtb3RlUgZyZW1vdGUSPgoPYWNjZXB0UmVzb3VyY2VzG
  BUgASgIQhTiPxESD2FjY2VwdFJlc291cmNlc1IPYWNjZXB0UmVzb3VyY2VzEl8KCXByb3ZpZGVycxgWIAMoCzIxLnB1bHVtaXJwY
  y5SZWdpc3RlclJlc291cmNlUmVxdWVzdC5Qcm92aWRlcnNFbnRyeUIO4j8LEglwcm92aWRlcnNSCXByb3ZpZGVycxJBChByZXBsY
  WNlT25DaGFuZ2VzGBcgAygJQhXiPxISEHJlcGxhY2VPbkNoYW5nZXNSEHJlcGxhY2VPbkNoYW5nZXMSRAoRcGx1Z2luRG93bmxvY
  WRVUkwYGCABKAlCFuI/ExIRcGx1Z2luRG93bmxvYWRVUkxSEXBsdWdpbkRvd25sb2FkVVJMEncKD3BsdWdpbkNoZWNrc3VtcxgeI
  AMoCzI3LnB1bHVtaXJwYy5SZWdpc3RlclJlc291cmNlUmVxdWVzdC5QbHVnaW5DaGVja3N1bXNFbnRyeUIU4j8REg9wbHVnaW5Da
  GVja3N1bXNSD3BsdWdpbkNoZWNrc3VtcxI7Cg5yZXRhaW5PbkRlbGV0ZRgZIAEoCEIT4j8QEg5yZXRhaW5PbkRlbGV0ZVIOcmV0Y
  WluT25EZWxldGUSOAoHYWxpYXNlcxgaIAMoCzIQLnB1bHVtaXJwYy5BbGlhc0IM4j8JEgdhbGlhc2VzUgdhbGlhc2VzEjIKC2Rlb
  GV0ZWRXaXRoGBsgASgJQhDiPw0SC2RlbGV0ZWRXaXRoUgtkZWxldGVkV2l0aBIvCgphbGlhc1NwZWNzGBwgASgIQg/iPwwSCmFsa
  WFzU3BlY3NSCmFsaWFzU3BlY3MSVgoOc291cmNlUG9zaXRpb24YHSABKAsyGS5wdWx1bWlycGMuU291cmNlUG9zaXRpb25CE+I/E
  BIOc291cmNlUG9zaXRpb25SDnNvdXJjZVBvc2l0aW9uGjUKFFByb3BlcnR5RGVwZW5kZW5jaWVzEh0KBHVybnMYASADKAlCCeI/B
  hIEdXJuc1IEdXJucxp/Cg5DdXN0b21UaW1lb3V0cxIjCgZjcmVhdGUYASABKAlCC+I/CBIGY3JlYXRlUgZjcmVhdGUSIwoGdXBkY
  XRlGAIgASgJQgviPwgSBnVwZGF0ZVIGdXBkYXRlEiMKBmRlbGV0ZRgDIAEoCUIL4j8IEgZkZWxldGVSBmRlbGV0ZRqWAQoZUHJvc
  GVydHlEZXBlbmRlbmNpZXNFbnRyeRIaCgNrZXkYASABKAlCCOI/BRIDa2V5UgNrZXkSWQoFdmFsdWUYAiABKAsyNy5wdWx1bWlyc
  GMuUmVnaXN0ZXJSZXNvdXJjZVJlcXVlc3QuUHJvcGVydHlEZXBlbmRlbmNpZXNCCuI/BxIFdmFsdWVSBXZhbHVlOgI4ARpSCg5Qc
  m92aWRlcnNFbnRyeRIaCgNrZXkYASABKAlCCOI/BRIDa2V5UgNrZXkSIAoFdmFsdWUYAiABKAlCCuI/BxIFdmFsdWVSBXZhbHVlO
  gI4ARpYChRQbHVnaW5DaGVja3N1bXNFbnRyeRIaCgNrZXkYASABKAlCCOI/BRIDa2V5UgNrZXkSIAoFdmFsdWUYAiABKAxCCuI/B
  xIFdmFsdWVSBXZhbHVlOgI4ASK6BAoYUmVnaXN0ZXJSZXNvdXJjZVJlc3BvbnNlEhoKA3VybhgBIAEoCUII4j8FEgN1cm5SA3Vyb
  hIXCgJpZBgCIAEoCUIH4j8EEgJpZFICaWQSPAoGb2JqZWN0GAMgASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdEIL4j8IEgZvY
  mplY3RSBm9iamVjdBIjCgZzdGFibGUYBCABKAhCC+I/CBIGc3RhYmxlUgZzdGFibGUSJgoHc3RhYmxlcxgFIAMoCUIM4j8JEgdzd
  GFibGVzUgdzdGFibGVzEowBChRwcm9wZXJ0eURlcGVuZGVuY2llcxgGIAMoCzI9LnB1bHVtaXJwYy5SZWdpc3RlclJlc291cmNlU
  mVzcG9uc2UuUHJvcGVydHlEZXBlbmRlbmNpZXNFbnRyeUIZ4j8WEhRwcm9wZXJ0eURlcGVuZGVuY2llc1IUcHJvcGVydHlEZXBlb
  mRlbmNpZXMaNQoUUHJvcGVydHlEZXBlbmRlbmNpZXMSHQoEdXJucxgBIAMoCUIJ4j8GEgR1cm5zUgR1cm5zGpcBChlQcm9wZXJ0e
  URlcGVuZGVuY2llc0VudHJ5EhoKA2tleRgBIAEoCUII4j8FEgNrZXlSA2tleRJaCgV2YWx1ZRgCIAEoCzI4LnB1bHVtaXJwYy5SZ
  Wdpc3RlclJlc291cmNlUmVzcG9uc2UuUHJvcGVydHlEZXBlbmRlbmNpZXNCCuI/BxIFdmFsdWVSBXZhbHVlOgI4ASJ9Ch5SZWdpc
  3RlclJlc291cmNlT3V0cHV0c1JlcXVlc3QSGgoDdXJuGAEgASgJQgjiPwUSA3VyblIDdXJuEj8KB291dHB1dHMYAiABKAsyFy5nb
  29nbGUucHJvdG9idWYuU3RydWN0QgziPwkSB291dHB1dHNSB291dHB1dHMi7QQKFVJlc291cmNlSW52b2tlUmVxdWVzdBIaCgN0b
  2sYASABKAlCCOI/BRIDdG9rUgN0b2sSNgoEYXJncxgCIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3RCCeI/BhIEYXJnc1IEY
  XJncxIpCghwcm92aWRlchgDIAEoCUIN4j8KEghwcm92aWRlclIIcHJvdmlkZXISJgoHdmVyc2lvbhgEIAEoCUIM4j8JEgd2ZXJza
  W9uUgd2ZXJzaW9uEj4KD2FjY2VwdFJlc291cmNlcxgFIAEoCEIU4j8REg9hY2NlcHRSZXNvdXJjZXNSD2FjY2VwdFJlc291cmNlc
  xJEChFwbHVnaW5Eb3dubG9hZFVSTBgGIAEoCUIW4j8TEhFwbHVnaW5Eb3dubG9hZFVSTFIRcGx1Z2luRG93bmxvYWRVUkwSdQoPc
  Gx1Z2luQ2hlY2tzdW1zGAggAygLMjUucHVsdW1pcnBjLlJlc291cmNlSW52b2tlUmVxdWVzdC5QbHVnaW5DaGVja3N1bXNFbnRye
  UIU4j8REg9wbHVnaW5DaGVja3N1bXNSD3BsdWdpbkNoZWNrc3VtcxJWCg5zb3VyY2VQb3NpdGlvbhgHIAEoCzIZLnB1bHVtaXJwY
  y5Tb3VyY2VQb3NpdGlvbkIT4j8QEg5zb3VyY2VQb3NpdGlvblIOc291cmNlUG9zaXRpb24aWAoUUGx1Z2luQ2hlY2tzdW1zRW50c
  nkSGgoDa2V5GAEgASgJQgjiPwUSA2tleVIDa2V5EiAKBXZhbHVlGAIgASgMQgriPwcSBXZhbHVlUgV2YWx1ZToCOAEy1AQKD1Jlc
  291cmNlTW9uaXRvchJaCg9TdXBwb3J0c0ZlYXR1cmUSIS5wdWx1bWlycGMuU3VwcG9ydHNGZWF0dXJlUmVxdWVzdBoiLnB1bHVta
  XJwYy5TdXBwb3J0c0ZlYXR1cmVSZXNwb25zZSIAEkcKBkludm9rZRIgLnB1bHVtaXJwYy5SZXNvdXJjZUludm9rZVJlcXVlc3QaG
  S5wdWx1bWlycGMuSW52b2tlUmVzcG9uc2UiABJPCgxTdHJlYW1JbnZva2USIC5wdWx1bWlycGMuUmVzb3VyY2VJbnZva2VSZXF1Z
  XN0GhkucHVsdW1pcnBjLkludm9rZVJlc3BvbnNlIgAwARI5CgRDYWxsEhYucHVsdW1pcnBjLkNhbGxSZXF1ZXN0GhcucHVsdW1pc
  nBjLkNhbGxSZXNwb25zZSIAElEKDFJlYWRSZXNvdXJjZRIeLnB1bHVtaXJwYy5SZWFkUmVzb3VyY2VSZXF1ZXN0Gh8ucHVsdW1pc
  nBjLlJlYWRSZXNvdXJjZVJlc3BvbnNlIgASXQoQUmVnaXN0ZXJSZXNvdXJjZRIiLnB1bHVtaXJwYy5SZWdpc3RlclJlc291cmNlU
  mVxdWVzdBojLnB1bHVtaXJwYy5SZWdpc3RlclJlc291cmNlUmVzcG9uc2UiABJeChdSZWdpc3RlclJlc291cmNlT3V0cHV0cxIpL
  nB1bHVtaXJwYy5SZWdpc3RlclJlc291cmNlT3V0cHV0c1JlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiAEI0WjJnaXRod
  WIuY29tL3B1bHVtaS9wdWx1bWkvc2RrL3YzL3Byb3RvL2dvO3B1bHVtaXJwY2IGcHJvdG8z"""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      com.google.protobuf.empty.EmptyProto.javaDescriptor,
      com.google.protobuf.struct.StructProto.javaDescriptor,
      pulumirpc.provider.ProviderProto.javaDescriptor,
      pulumirpc.alias.AliasProto.javaDescriptor,
      pulumirpc.source.SourceProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}