// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package pulumirpc.engine

/** LogSeverity is the severity level of a log message.  Errors are fatal; all others are informational.
  */
sealed abstract class LogSeverity(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
  type EnumType = pulumirpc.engine.LogSeverity
  type RecognizedType = pulumirpc.engine.LogSeverity.Recognized
  def isDebug: _root_.scala.Boolean = false
  def isInfo: _root_.scala.Boolean = false
  def isWarning: _root_.scala.Boolean = false
  def isError: _root_.scala.Boolean = false
  def companion: _root_.scalapb.GeneratedEnumCompanion[LogSeverity] = pulumirpc.engine.LogSeverity
  final def asRecognized: _root_.scala.Option[pulumirpc.engine.LogSeverity.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[pulumirpc.engine.LogSeverity.Recognized])
}

object LogSeverity extends _root_.scalapb.GeneratedEnumCompanion[LogSeverity] {
  sealed trait Recognized extends LogSeverity
  implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[LogSeverity] = this
  
  /** a debug-level message not displayed to end-users (the default).
    */
  @SerialVersionUID(0L)
  case object DEBUG extends LogSeverity(0) with LogSeverity.Recognized {
    val index = 0
    val name = "DEBUG"
    override def isDebug: _root_.scala.Boolean = true
  }
  
  /** an informational message printed to output during resource operations.
    */
  @SerialVersionUID(0L)
  case object INFO extends LogSeverity(1) with LogSeverity.Recognized {
    val index = 1
    val name = "INFO"
    override def isInfo: _root_.scala.Boolean = true
  }
  
  /** a warning to indicate that something went wrong.
    */
  @SerialVersionUID(0L)
  case object WARNING extends LogSeverity(2) with LogSeverity.Recognized {
    val index = 2
    val name = "WARNING"
    override def isWarning: _root_.scala.Boolean = true
  }
  
  /** a fatal error indicating that the tool should stop processing subsequent resource operations.
    */
  @SerialVersionUID(0L)
  case object ERROR extends LogSeverity(3) with LogSeverity.Recognized {
    val index = 3
    val name = "ERROR"
    override def isError: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends LogSeverity(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
  lazy val values: scala.collection.immutable.Seq[ValueType] = scala.collection.immutable.Seq(DEBUG, INFO, WARNING, ERROR)
  def fromValue(__value: _root_.scala.Int): LogSeverity = __value match {
    case 0 => DEBUG
    case 1 => INFO
    case 2 => WARNING
    case 3 => ERROR
    case __other => Unrecognized(__other)
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = EngineProto.javaDescriptor.getEnumTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = EngineProto.scalaDescriptor.enums(0)
}